{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 4918c403d90e07ea407d","webpack:///external \"@angular/core\"","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///external \"rxjs/Rx\"","webpack:///external \"@angular/material\"","webpack:///./ng2-alfresco-core/src/services/alfresco-api.service.ts","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_ms_powerpoint.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_document.svg","webpack:///external \"@angular/common\"","webpack:///./ng2-alfresco-core/src/services/authentication.service.ts","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_raster_image.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_ms_excel.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_ms_word.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_archive.svg","webpack:///external \"moment\"","webpack:///./ng2-alfresco-core/src/services/app-config.service.ts","webpack:///external \"@angular/forms\"","webpack:///./ng2-alfresco-core/src/utils/momentDateAdapter.ts","webpack:///./ng2-alfresco-core/src/services/card-view-update.service.ts","webpack:///./ng2-alfresco-core/src/services/log.service.ts","webpack:///./ng2-alfresco-core/src/dialogs/folder.dialog.ts","webpack:///./ng2-alfresco-core/src/services/translation.service.ts","webpack:///./ng2-alfresco-core/src/services/user-preferences.service.ts","webpack:///./ng2-alfresco-core/src/services/highlight-transform.service.ts","webpack:///external \"@ngx-translate/core\"","webpack:///./ng2-alfresco-core/src/models/card-view-baseitem.model.ts","webpack:///./ng2-alfresco-core/src/utils/object-utils.ts","webpack:///./ng2-alfresco-core/src/services/alfresco-content.service.ts","webpack:///./ng2-alfresco-core/src/models/file.model.ts","webpack:///./ng2-alfresco-core/src/components/data-column/data-column.component.ts","webpack:///external \"@angular/common/http\"","webpack:///./ng2-alfresco-core/src/components/collapsable/collapsable.module.ts","webpack:///./ng2-alfresco-core/src/components/context-menu/context-menu.module.ts","webpack:///./ng2-alfresco-core/src/components/view/card-view.module.ts","webpack:///./ng2-alfresco-core/src/components/view/card-view-content-proxy.directive.ts","webpack:///./ng2-alfresco-core/src/models/card-view-textitem.model.ts","webpack:///./ng2-alfresco-core/src/dialogs/download-zip.dialog.ts","webpack:///external \"alfresco-js-api\"","webpack:///./ng2-alfresco-core/src/services/alfresco-settings.service.ts","webpack:///./ng2-alfresco-core/src/services/auth-guard-bpm.service.ts","webpack:///./ng2-alfresco-core/src/services/auth-guard-ecm.service.ts","webpack:///./ng2-alfresco-core/src/services/auth-guard.service.ts","webpack:///./ng2-alfresco-core/src/services/comment-process.service.ts","webpack:///./ng2-alfresco-core/src/models/comment-process.model.ts","webpack:///./ng2-alfresco-core/src/models/user-process.model.ts","webpack:///./ng2-alfresco-core/src/services/content.service.ts","webpack:///./ng2-alfresco-core/src/services/cookie.service.ts","webpack:///./ng2-alfresco-core/src/services/notification.service.ts","webpack:///./ng2-alfresco-core/src/services/page-title.service.ts","webpack:///./ng2-alfresco-core/src/services/renditions.service.ts","webpack:///./ng2-alfresco-core/src/services/storage.service.ts","webpack:///./ng2-alfresco-core/src/services/thumbnail.service.ts","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_miscellaneous.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_pdf.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_video.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_vector_image.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_website.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_presentation.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_spreadsheet.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_folder.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_folder_disable.svg","webpack:///./ng2-alfresco-core/src/assets/images/ft_ic_selected.svg","webpack:///./ng2-alfresco-core/src/services/translate-loader.service.ts","webpack:///./ng2-alfresco-core/src/services/upload.service.ts","webpack:///./ng2-alfresco-core/src/events/file.event.ts","webpack:///./ng2-alfresco-core/src/directives/highlight.directive.ts","webpack:///./ng2-alfresco-core/src/directives/node-favorite.directive.ts","webpack:///./ng2-alfresco-core/src/services/apps-process.service.ts","webpack:///./ng2-alfresco-core/src/services/deleted-nodes-api.service.ts","webpack:///./ng2-alfresco-core/src/services/discovery-api.service.ts","webpack:///./ng2-alfresco-core/src/models/product-version.model.ts","webpack:///./ng2-alfresco-core/src/services/favorites-api.service.ts","webpack:///./ng2-alfresco-core/src/services/nodes-api.service.ts","webpack:///./ng2-alfresco-core/src/services/people-content.service.ts","webpack:///./ng2-alfresco-core/src/services/people-process.service.ts","webpack:///./ng2-alfresco-core/src/services/search-api.service.ts","webpack:///./ng2-alfresco-core/src/services/search.service.ts","webpack:///./ng2-alfresco-core/src/services/shared-links-api.service.ts","webpack:///./ng2-alfresco-core/src/services/sites-api.service.ts","webpack:///./ng2-alfresco-core/src/models/site.model.ts","webpack:///./ng2-alfresco-core/src/components/data-column/data-column-list.component.ts","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.ts","webpack:///./ng2-alfresco-core/src/directives/node-permission.directive.ts","webpack:///./ng2-alfresco-core/src/directives/node-restore.directive.ts","webpack:///./ng2-alfresco-core/src/directives/upload.directive.ts","webpack:///./ng2-alfresco-core/src/utils/file-utils.ts","webpack:///./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.ts","webpack:///./ng2-alfresco-core/src/components/pagination/pagination.component.ts","webpack:///./ng2-alfresco-core/src/components/settings/host-settings.component.ts","webpack:///./ng2-alfresco-core/src/pipes/node-name-tooltip.pipe.ts","webpack:///./ng2-alfresco-core/src/pipes/time-ago.pipe.ts","webpack:///./ng2-alfresco-core/src/pipes/user-initial.pipe.ts","webpack:///./ng2-alfresco-core/src/events/base.event.ts","webpack:///./ng2-alfresco-core/index.ts","webpack:///external \"@angular/platform-browser/animations\"","webpack:///./ng2-alfresco-core/src/components/collapsable/accordion-group.component.ts","webpack:///./ng2-alfresco-core/src/components/collapsable/accordion-group.component.html","webpack:///./ng2-alfresco-core/src/components/collapsable/accordion-group.component.scss?fd75","webpack:///./ng2-alfresco-core/src/components/collapsable/accordion-group.component.scss","webpack:///./ng2-alfresco-core/src/components/collapsable/accordion.component.ts","webpack:///./ng2-alfresco-core/src/components/context-menu/context-menu-holder.component.ts","webpack:///./ng2-alfresco-core/src/components/context-menu/context-menu.directive.ts","webpack:///./ng2-alfresco-core/src/components/context-menu/context-menu.service.ts","webpack:///./ng2-alfresco-core/src/components/toolbar/toolbar.module.ts","webpack:///./ng2-alfresco-core/src/components/toolbar/toolbar-divider.component.ts","webpack:///./ng2-alfresco-core/src/components/toolbar/toolbar-title.component.ts","webpack:///./ng2-alfresco-core/src/components/toolbar/toolbar.component.ts","webpack:///./ng2-alfresco-core/src/components/toolbar/toolbar.component.html","webpack:///./ng2-alfresco-core/src/components/toolbar/toolbar.component.scss?7974","webpack:///./ng2-alfresco-core/src/components/toolbar/toolbar.component.scss","webpack:///./ng2-alfresco-core/src/components/view/card-view-dateitem.component.ts","webpack:///./ng2-alfresco-core/src/components/view/card-view-dateitem.component.html","webpack:///./ng2-alfresco-core/src/components/view/card-view-dateitem.component.scss?dfc6","webpack:///./ng2-alfresco-core/src/components/view/card-view-dateitem.component.scss","webpack:///./ng2-alfresco-core/src/components/view/card-view-item-dispatcher.component.ts","webpack:///./ng2-alfresco-core/src/components/view/card-view-mapitem.component.ts","webpack:///./ng2-alfresco-core/src/components/view/card-view-mapitem.component.html","webpack:///./ng2-alfresco-core/src/components/view/card-view-mapitem.component.scss?4782","webpack:///./ng2-alfresco-core/src/components/view/card-view-mapitem.component.scss","webpack:///./ng2-alfresco-core/src/components/view/card-view-textitem.component.ts","webpack:///external \"rxjs/Subject\"","webpack:///./ng2-alfresco-core/src/components/view/card-view-textitem.component.html","webpack:///./ng2-alfresco-core/src/components/view/card-view-textitem.component.scss?e604","webpack:///./ng2-alfresco-core/src/components/view/card-view-textitem.component.scss","webpack:///./ng2-alfresco-core/src/components/view/card-view.component.ts","webpack:///./ng2-alfresco-core/src/components/view/card-view.component.html","webpack:///./ng2-alfresco-core/src/components/view/card-view.component.scss?362a","webpack:///./ng2-alfresco-core/src/components/view/card-view.component.scss","webpack:///./ng2-alfresco-core/src/material.module.ts","webpack:///./ng2-alfresco-core/src/models/log-levels.model.ts","webpack:///./ng2-alfresco-core/src/dialogs/download-zip.dialog.html","webpack:///./ng2-alfresco-core/src/dialogs/download-zip.dialog.scss?8a30","webpack:///./ng2-alfresco-core/src/dialogs/download-zip.dialog.scss","webpack:///./ng2-alfresco-core/src/dialogs/folder-name.validators.ts","webpack:///./ng2-alfresco-core/src/dialogs/folder.dialog.scss?db63","webpack:///./ng2-alfresco-core/src/dialogs/folder.dialog.scss","webpack:///./ng2-alfresco-core/src/dialogs/folder.dialog.html","webpack:///external \"@angular/router\"","webpack:///./ng2-alfresco-core/src/models/component.model.ts","webpack:///external \"rxjs/BehaviorSubject\"","webpack:///external \"minimatch\"","webpack:///./ng2-alfresco-core/src/directives/folder-create.directive.ts","webpack:///./ng2-alfresco-core/src/directives/folder-edit.directive.ts","webpack:///./ng2-alfresco-core/src/directives/logout.directive.ts","webpack:///./ng2-alfresco-core/src/directives/node-delete.directive.ts","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.ts","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.html","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.scss?3207","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.scss","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.html","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.scss?7738","webpack:///./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.scss","webpack:///./ng2-alfresco-core/src/components/language-menu/language-menu.component.ts","webpack:///./ng2-alfresco-core/src/components/language-menu/language-menu.component.html","webpack:///./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.html","webpack:///./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.scss?b1d6","webpack:///./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.scss","webpack:///./ng2-alfresco-core/src/components/pagination/pagination.component.html","webpack:///./ng2-alfresco-core/src/components/pagination/pagination.component.scss?e740","webpack:///./ng2-alfresco-core/src/components/pagination/pagination.component.scss","webpack:///./ng2-alfresco-core/src/components/settings/host-settings.component.html","webpack:///./ng2-alfresco-core/src/components/settings/host-settings.component.scss?b6ba","webpack:///./ng2-alfresco-core/src/components/settings/host-settings.component.scss","webpack:///./ng2-alfresco-core/src/pipes/file-size.pipe.ts","webpack:///./ng2-alfresco-core/src/pipes/mime-type-icon.pipe.ts","webpack:///./ng2-alfresco-core/src/pipes/text-highlight.pipe.ts","webpack:///./ng2-alfresco-core/src/interface/injection.tokens.ts","webpack:///./ng2-alfresco-core/src/utils/index.ts","webpack:///./ng2-alfresco-core/src/events/base-ui.event.ts","webpack:///./ng2-alfresco-core/src/models/card-view-mapitem.model.ts","webpack:///./ng2-alfresco-core/src/models/card-view-dateitem.model.ts","webpack:///./ng2-alfresco-core/src/models/permissions.enum.ts"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","__WEBPACK_EXTERNAL_MODULE_8__","__WEBPACK_EXTERNAL_MODULE_14__","__WEBPACK_EXTERNAL_MODULE_18__","__WEBPACK_EXTERNAL_MODULE_31__","__WEBPACK_EXTERNAL_MODULE_51__","__WEBPACK_EXTERNAL_MODULE_58__","__WEBPACK_EXTERNAL_MODULE_170__","__WEBPACK_EXTERNAL_MODULE_196__","__WEBPACK_EXTERNAL_MODULE_213__","__WEBPACK_EXTERNAL_MODULE_215__","__WEBPACK_EXTERNAL_MODULE_216__","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","paramIndex","decorator","setPrototypeOf","Array","assign","__WEBPACK_IMPORTED_MODULE_2_alfresco_js_api__","AlfrescoApiService","[object Object]","appConfig","storage","reset","alfrescoApi","contentApi","getInstance","content","nodesApi","nodes","renditionsApi","core","sharedLinksApi","sharedlinksApi","sitesApi","favoritesApi","peopleApi","searchApi","search","versionsApi","provider","getItem","ticketEcm","ticketBpm","hostEcm","hostBpm","contextRoot","disableCsrf","__WEBPACK_IMPORTED_MODULE_0_tslib__","__WEBPACK_IMPORTED_MODULE_1__angular_core__","__WEBPACK_IMPORTED_MODULE_2_rxjs_Rx__","AuthenticationService","preferences","cookie","logService","redirectUrl","onLogin","onLogout","isLoggedIn","username","password","rememberMe","removeTicket","fromPromise","callApiLogin","map","response","saveRememberMeCookie","saveTickets","next","type","authType","ticket","catch","err","handleError","expiration","expireTime","Date","getTime","setTime","setItem","login","callApiLogout","do","logout","removeItem","setTicket","undefined","btoa","saveTicketEcm","saveTicketBpm","getTicketEcm","getTicketBpm","isRememberMeSet","ecmAuth","bpmAuth","url","error","throw","startupServiceFactory","configService","load","__WEBPACK_IMPORTED_MODULE_3__utils_object_utils__","AppConfigService","http","config","application","ecmHost","bpmHost","defaultValue","result","getValue","Map","set","getLocationHostname","getLocationPort","formatString","location","hostname","prefix","port","Promise","resolve","subscribe","data","str","forEach","value","expr","RegExp","replace","APP_CONFIG_LANGUAGES_KEY","__WEBPACK_IMPORTED_MODULE_2__angular_core__","AppConfigModule","imports","__WEBPACK_IMPORTED_MODULE_1__angular_common_http__","providers","provide","useFactory","deps","multi","__webpack_exports__","parse","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","dateNames","date","push","String","MomentDateAdapter","__WEBPACK_IMPORTED_MODULE_0__angular_material__","localeData","__WEBPACK_IMPORTED_MODULE_1_moment__","year","month","day","style","months","monthsShort","weekdays","weekdaysShort","firstDayOfWeek","daysInMonth","clone","parseFormat","isValid","overrideDisplyaFormat","indexOf","currentYear","getFullYear","isAfter","displayFormat","format","years","add","days","toISOString","locale","first","second","diff","isSame","super","sameDate","min","max","isBefore","isValidDateInstance","_isAMomentObject","iso8601String","__WEBPACK_IMPORTED_MODULE_2_rxjs_Subject__","CardViewUpdateService","itemUpdatedSource","itemUpdated$","asObservable","itemClicked$","changed","__WEBPACK_IMPORTED_MODULE_2__models_log_levels_model__","LogService","currentLogLevel","TRACE","configLevel","getCurrentLogLevel","ERROR","console","bind","message","optionalParams","debug","DEBUG","info","INFO","log","trace","warn","WARN","assert","SILENT","group","groupEnd","level","referencedLevel","find","currentLevel","toLocaleLowerCase","__WEBPACK_IMPORTED_MODULE_4__folder_name_validators__","FolderDialogComponent","formBuilder","dialog","translation","notification","folder","editing","description","properties","validators","__WEBPACK_IMPORTED_MODULE_2__angular_forms__","required","form","trim","title","cm:title","cm:description","parentNodeId","createFolder","id","nodeId","updateNode","valid","edit","create","close","i18nMessageString","statusCode","JSON","openSnackMessage","selector","styles","template","__WEBPACK_IMPORTED_MODULE_3__angular_material__","core_1","core_2","user_preferences_service_1","TRANSLATION_PROVIDER","InjectionToken","TranslationService","translate","userPreference","_this","customLoader","currentLoader","defaultLang","setDefaultLang","_i","providers_1","addTranslationFolder","source","locale$","userLang","use","path","providerRegistered","registerProvider","getTranslation","lang","init","interpolateParams","__decorate","Injectable","__param","Inject","TranslateService","_a","_b","UserPreferencesService","__WEBPACK_IMPORTED_MODULE_2_rxjs_BehaviorSubject__","apiService","defaults","paginationSize","currentLocale","getDefaultLocale","localeSubject","getPropertyKey","getStoragePrefix","disableCSRF","Number","getBrowserLang","HighlightTransformService","text","wrapperClass","isMatching","pattern","split","filter","t","join","regex","match","CardViewBaseItemModel","obj","label","default","editable","clickable","isEmpty","ObjectUtils","keys","shift","objects","prop","isArray","concat","merge","Rx_1","alfresco_api_service_1","authentication_service_1","log_service_1","AlfrescoContentService","authService","folderCreated","Subject","folderCreate","folderEdit","getDocumentThumbnailUrl","attachment","entry","getContentUrl","getNodeContent","Observable","getFileContent","then","dataContent","relativePath","parentId","node","hasPermission","permission","hasAllowableOperations","startsWith","allowableOperations","currentPermission","_c","FileUploadStatus","FileModel","file","options","status","Pending","generateId","size","progress","loaded","total","percent","newVersion","Math","random","toString","slice","lastIndexOf","Infinity","DataColumnComponent","sortable","srTitle","__WEBPACK_IMPORTED_MODULE_4__accordion_component__","CollapsableModule","__WEBPACK_IMPORTED_MODULE_1__angular_common__","declarations","__WEBPACK_IMPORTED_MODULE_3__accordion_group_component__","__WEBPACK_IMPORTED_MODULE_6__context_menu_service__","ContextMenuModule","__WEBPACK_IMPORTED_MODULE_4__context_menu_holder_component__","__WEBPACK_IMPORTED_MODULE_5__context_menu_directive__","__WEBPACK_IMPORTED_MODULE_11__card_view_component__","CardViewModule","__WEBPACK_IMPORTED_MODULE_4__angular_material__","__WEBPACK_IMPORTED_MODULE_3__angular_forms__","__WEBPACK_IMPORTED_MODULE_5__ngx_translate_core__","__WEBPACK_IMPORTED_MODULE_8__card_view_item_dispatcher_component__","__WEBPACK_IMPORTED_MODULE_6__card_view_content_proxy_directive__","__WEBPACK_IMPORTED_MODULE_10__card_view_textitem_component__","__WEBPACK_IMPORTED_MODULE_9__card_view_mapitem_component__","__WEBPACK_IMPORTED_MODULE_7__card_view_dateitem_component__","entryComponents","CardViewContentProxyDirective","viewContainerRef","Directive","ViewContainerRef","__WEBPACK_IMPORTED_MODULE_0__card_view_baseitem_model__","CardViewTextItemModel","multiline","displayValue","material_1","DownloadZipDialogComponent","dialogRef","cancelled","downloadsApi","ngOnInit","nodeIds","setTimeout","downloadZip","cancelDownload","promise","createDownload","on","url_1","getNode","downloadNode","fileName","waitAndDownload","downloadId","getDownload","download","link","document","createElement","href","body","appendChild","click","removeChild","Component","host","class","encapsulation","ViewEncapsulation","None","MAT_DIALOG_DATA","MatDialogRef","AlfrescoSettingsService","csrfDisabled","ecmHostUrl","bpmHostUrl","AuthGuardBpm","router","route","state","checkLogin","canActivate","isBpmLoggedIn","setRedirectUrl","navigate","AuthGuardEcm","authApi","validateTicket","router_1","AuthGuard","canActivateChild","Router","__WEBPACK_IMPORTED_MODULE_4__models_user_process_model__","CommentProcessService","taskId","activiti","taskApi","addTaskComment","res","__WEBPACK_IMPORTED_MODULE_3__models_comment_process_model__","created","createdBy","getTaskComments","comments","comment","user","processInstanceId","commentsApi","getProcessInstanceComments","addProcessInstanceComment","CommentProcessModel","UserProcessModel","pictureId","email","firstName","lastName","ContentService","sanitizer","saveData","a","blob","Blob","json","stringify","window","navigator","msSaveOrOpenBlob","URL","createObjectURL","revokeObjectURL","bypassSecurityTrustUrl","CookieService","exec","toUTCString","NotificationService","NotificationService_1","snackbar","millisecondsDuration","open","duration","DEFAULT_DURATION_MESSAGE","action","PageTitleService","titleService","setTitle","RenditionsService","isRenditionAvailable","encoding","observer","getRendition","isAvailable","complete","isConversionPossible","getRenditionUrl","getRenditionsListByNodeId","getRenditions","createRendition","convert","pollingInterval","concatMap","pollRendition","interval","switchMap","takeWhile","StorageService","memoryStore","useLocalStorage","storageAvailable","localStorage","clear","e","ThumbnailService","contentService","matIconRegistry","DEFAULT_ICON","mimeTypeIcons","image/png","image/jpeg","image/gif","application/pdf","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.presentationml.slideshow","video/mp4","text/plain","application/x-javascript","application/json","image/svg+xml","text/html","application/x-compressed","application/x-zip-compressed","application/zip","application/vnd.apple.keynote","application/vnd.apple.pages","application/vnd.apple.numbers","disable/folder","selected","addSvgIcon","bypassSecurityTrustResourceUrl","mimeType","__WEBPACK_IMPORTED_MODULE_4__utils_object_utils__","AlfrescoTranslateLoader","suffix","queue","registered","__WEBPACK_IMPORTED_MODULE_3__models_component_model__","x","observableBatch","component","isComponentInQueue","currentObserv","sort","b","localeCompare","model","getComponentToFetch","forkJoin","fullTranslation","getFullTranslationJSON","__WEBPACK_IMPORTED_MODULE_5__models_file_model__","UploadService","appConfigService","cache","totalComplete","totalAborted","totalError","activeTask","excludedFileList","queueChanged","__WEBPACK_IMPORTED_MODULE_3_rxjs_Rx__","fileUpload","fileUploadStarting","fileUploadCancelled","fileUploadProgress","fileUploadAborted","fileUploadError","fileUploadComplete","fileUploadDeleted","fileDeleted","files","allowedFiles","f","filterElement","isAllowed","__WEBPACK_IMPORTED_MODULE_2_minimatch__","emitter","onUploadStarting","beginUpload","uploadFilesInTheQueue","abort","getAction","performAction","opts","renditions","overwrite","majorVersion","autoRename","upload","uploadFile","getUploadPromise","onUploadProgress","onUploadAborted","emit","onUploadError","onUploadComplete","Starting","event","__WEBPACK_IMPORTED_MODULE_4__events_file_event__","Progress","Error","Complete","Aborted","Cancelled","Deleted","onUploadCancelled","onUploadDeleted","file_model_1","FileUploadEvent","FileUploadCompleteEvent","_super","__extends","FileUploadDeleteEvent","FileUploadErrorEvent","highlight_transform_service_1","HighlightDirective","el","renderer","highlightTransformService","classToApply","highlight","nativeElement","querySelectorAll","element","innerHTML","setElementProperty","Input","ElementRef","Renderer","NodeFavoriteDirective","alfrescoApiService","favorites","selection","toggle","toggleFavorite","changes","currentValue","markFavoritesNodes","every","isFavorite","batch","removeFavoriteSite","notFavorite","createFavoriteBody","addFavorite","newFavorites","reduce","getProcessBatch","getFavorite","isFile","isFolder","from","of","getNodeType","guid","list","patch","ids","item","includes","comparator","exportAs","AppsProcessService","appsApi","getAppDefinitions","app","appId","DeletedNodesApiService","defaultOptions","include","maxItems","skipCount","queryOptions","getDeletedNodes","product_version_model_1","DiscoveryApiService","getEcmProductInfo","discovery","discoveryApi","getRepositoryInformation","EcmProductVersionModel","getBpmProductInfo","aboutApi","getAppVersion","BpmProductVersionModel","edition","revisionVersion","minorVersion","repository","version","VersionModel","license","LicenseModel","VersionStatusModel","VersionModuleModel","major","minor","hotfix","schema","issuedAt","expiresAt","remainingDays","holder","mode","isClusterEnabled","isCryptodocEnabled","isReadOnly","isAuditEnabled","isQuickShareEnabled","isThumbnailGenerationEnabled","installDate","installState","versionMin","versionMax","FavoritesApiService","FavoritesApiService_1","pagination","entries","remapFavoriteEntries","remapEntry","personId","where","getFavorites","remapFavoritesData","NodesApiService","api","entity","getEntryFromEntity","getNodeChildren","nodeBody","addNode","nodeType","createNode","deleteNode","restoreNode","PeopleContentService","getPerson","getCurrentPerson","PeopleProcessService","alfrescoJsApi","searchWord","option","excludeTaskId","getWorkflowUserApi","getUserProfileImageApi","idToInvolve","userId","involveUserToTaskApi","idToRemove","removeInvolvedUserFromTaskApi","usersWorkflowApi","getUsers","taskActionsApi","involveUser","removeInvolvedUser","userApi","getUserProfilePictureUrl","SearchApiService","query","searchQuery","SearchService","term","getQueryNodesPromise","queriesApi","findNodes","SharedLinksApiService","getSharedLinks","findSharedLinks","__WEBPACK_IMPORTED_MODULE_3__models_site_model__","SitesApiService","getSites","convertToModel","siteId","getSite","permanentFlag","permanent","deleteSite","relations","convertedList","SiteModel","contents","members","role","visibility","preset","containers","SiteContentsModel","member","SiteMembersModel","folderId","emailNotificationsEnabled","enable","company","__WEBPACK_IMPORTED_MODULE_2__data_column_component__","DataColumnListComponent","InfoDrawerTabComponent","InfoDrawerComponent","currentTab","contentBlocks","tab","textLabel","alfresco_content_service_1","NodePermissionDirective","elementRef","ngOnChanges","firstChange","updateElement","setDisableAttribute","disable","disabled","NodeRestoreDirective","restore","restoreProcessStatus","processStatus","recover","nodesWithPath","getNodesWithPath","fail","restoreNotification","refresh","restoreNodesBatch","restoredNodes","success","flatMap","deletedNodesList","nodelist","restoreErrorNodes","selectedNodes","remainingNodes","parent","elements","fromList","someFailed","someSucceeded","oneFailed","oneSucceeded","allSucceeded","allFailed","acc","number","zip","getRestoreMessage","messages","actionLabel","openSnackMessageAction","onAction","navigateLocation","__WEBPACK_IMPORTED_MODULE_2__utils_file_utils__","UploadDirective","ngZone","enabled","isDragging","cssClassName","isClickMode","parentNode","addEventListener","onSelectFiles","multiple","setAttribute","accept","directory","isDropMode","runOutsideAngular","onDragEnter","onDragOver","onDragLeave","onDrop","removeEventListener","preventDefault","classList","remove","stopPropagation","dataTranfer","getDataTransfer","getFilesDropped","onUploadFiles","CustomEvent","detail","sender","bubbles","dispatchEvent","hasMode","dataTransfer","originalEvent","iterations","items","webkitGetAsEntry","getAsFile","relativeFolder","isDirectory","resolveFolder","flattern","toFileArray","all","input","currentTarget","FileUtils","reader","createReader","traverse","readEntries","resolveFile","fullPath","fileList","InfinitePaginationComponent","InfinitePaginationComponent_1","pageSize","DEFAULT_PAGE_SIZE","isLoading","loadMore","DEFAULT_PAGINATION","hasMoreItems","changeDetection","OnPush","alfresco_js_api_1","PaginationComponent","supportedPageSizes","PaginationComponent_1","change","EventEmitter","changePageNumber","changePageSize","nextPage","prevPage","totalItems","ceil","floor","current","lastPage","isLastPage","isFirstPage","fill","index","goNext","handlePaginationEvent","ACTIONS","NEXT_PAGE","goPrevious","previous","PREV_PAGE","onChangePageNumber","pageNumber","CHANGE_PAGE_NUMBER","onChangePageSize","CHANGE_PAGE_SIZE","params","Pagination","Output","_d","_e","_f","ChangeDetectionStrategy","HostSettingsComponent","settingsService","translationService","HOST_REGEX","urlFormControlEcm","urlFormControlBpm","ecmHostTmp","bpmHostTmp","isValidUrl","test","NodeNameTooltipPipe","getNodeTooltip","lines","line","some","toLowerCase","containsLine","removeDuplicateLines","TimeAgoPipe","fromNow","InitialUsernamePipe","sanitized","className","delimiter","initialResult","getInitialUserName","bypassSecurityTrustHtml","BaseEvent","isDefaultPrevented","defaultPrevented","page_title_service_1","notification_service_1","alfresco_settings_service_1","storage_service_1","cookie_service_1","translate_loader_service_1","translation_service_1","renditions_service_1","content_service_1","auth_guard_service_1","auth_guard_ecm_service_1","auth_guard_bpm_service_1","thumbnail_service_1","upload_service_1","search_service_1","deleted_nodes_api_service_1","favorites_api_service_1","nodes_api_service_1","people_content_service_1","search_api_service_1","shared_links_api_service_1","sites_api_service_1","discovery_api_service_1","momentDateAdapter_2","people_process_service_1","apps_process_service_1","comment_process_service_1","app_config_service_2","deprecatedProviders","translation_service_3","authentication_service_3","pipes","file_size_pipe_1","FileSizePipe","text_highlight_pipe_1","HighlightPipe","time_ago_pipe_1","mime_type_icon_pipe_1","MimeTypeIconPipe","user_initial_pipe_1","node_name_tooltip_pipe_1","createTranslateLoader","common_1","http_1","forms_1","animations_1","collapsable_module_1","context_menu_module_1","toolbar_module_1","card_view_module_1","material_module_1","app_config_service_1","download_zip_dialog_1","folder_dialog_1","folder_create_directive_1","folder_edit_directive_1","highlight_directive_1","logout_directive_1","node_delete_directive_1","node_favorite_directive_1","momentDateAdapter_1","MOMENT_DATE_FORMATS","download_zip_dialog_2","folder_dialog_2","page_title_service_2","content_service_2","storage_service_2","cookie_service_2","alfresco_api_service_2","alfresco_settings_service_2","alfresco_content_service_2","renditions_service_2","auth_guard_service_2","auth_guard_ecm_service_2","auth_guard_bpm_service_2","notification_service_2","log_service_2","authentication_service_2","translation_service_2","TranslationProvider","translate_loader_service_2","app_config_service_3","thumbnail_service_2","upload_service_2","card_view_update_service_1","card_view_update_service_2","UpdateNotification","card_view_update_service_3","ClickNotification","app_config_service_4","user_preferences_service_2","highlight_transform_service_2","HightlightTransformResult","apps_process_service_2","deleted_nodes_api_service_2","favorites_api_service_2","nodes_api_service_2","people_content_service_2","people_process_service_2","search_api_service_2","shared_links_api_service_2","sites_api_service_2","discovery_api_service_2","comment_process_service_2","data_column_list_component_1","data_column_component_1","info_drawer_layout_component_1","info_drawer_component_1","language_menu_component_1","node_permission_directive_1","node_restore_directive_1","upload_directive_1","infinite_pagination_component_1","pagination_component_1","host_settings_component_1","infinite_pagination_component_2","pagination_component_2","host_settings_component_2","context_menu_module_2","card_view_module_2","collapsable_module_2","card_view_item_interface_1","CardViewItem","time_ago_pipe_2","injection_tokens_1","EXTENDIBLE_COMPONENT","user_initial_pipe_2","node_name_tooltip_pipe_2","__export","authentication_service_4","AlfrescoAuthenticationService","translation_service_4","AlfrescoTranslationService","CoreModule","NgModule","CommonModule","FormsModule","ReactiveFormsModule","HttpClientModule","BrowserAnimationsModule","TranslateModule","forRoot","loader","TranslateLoader","HttpClient","MaterialModule","ToolbarModule","FolderCreateDirective","FolderEditDirective","LogoutDirective","NodeDeleteDirective","InfoDrawerLayoutComponent","InfoDrawerTitleDirective","InfoDrawerButtonsDirective","InfoDrawerContentDirective","LanguageMenuComponent","useValue","AccordionGroupComponent","accordion","_isOpen","_isSelected","hasAccordionIcon","headingClick","addGroup","isOpen","closeOthers","isSelected","removeGroup","headingIcon","heading","AccordionComponent","groups","openGroup","splice","__WEBPACK_IMPORTED_MODULE_2__angular_material__","ContextMenuHolderComponent","viewport","overlayContainer","contextMenuService","links","mouseLocation","left","top","menuElement","showIcons","mdMenuElement","setPosition","contextSubscription","show","showMenu","openSubscription","menuTrigger","onMenuOpen","container","getContainerElement","contextMenuListenerFn","listen","getContextMenuElement","closeSubscription","onMenuClose","unsubscribe","menuItem","stopImmediatePropagation","subject","clientX","clientY","openMenu","clientWidth","getViewportRect","width","menu","xPosition","parentElement","locationCss","clientHeight","height","yPosition","querySelector","ContextMenuDirective","_contextMenuService","ContextMenuService","toolbar_divider_component_1","toolbar_title_component_1","toolbar_component_1","MatToolbarModule","ToolbarComponent","ToolbarTitleComponent","ToolbarDividerComponent","__WEBPACK_IMPORTED_MODULE_4__utils_momentDateAdapter__","CardViewDateItemComponent","cardViewUpdateService","dateAdapter","SHOW_FORMAT","setLocale","valueDate","__WEBPACK_IMPORTED_MODULE_3_moment__","datepicker","newDateValue","momentDate","update","toDate","useClass","__WEBPACK_IMPORTED_MODULE_2__card_view_content_proxy_directive__","CardViewItemDispatcherComponent","resolver","componentReference","dynamicLifecycleMethod","proxy","args","loadComponent","getUpperCamelCase","factoryClass","resolveComponentFactory","createComponent","instance","camelCasedType","g","toUpperCase","substr","methodName","apply","CardViewMapItemComponent","clicked","card_view_textitem_model_1","CardViewTextItemComponent","inEdit","editedValue","isEditble","isClickable","setEditMode","editStatus","editorInput","ViewChild","CardViewComponent","logLevels","LogLevelsEnum","I18N_ERRORS_PATH","pop","ComponentTranslationModel","__WEBPACK_IMPORTED_MODULE_2__dialogs_folder_dialog__","FolderCreateDirective_1","openDialog","dialogConfig","DIALOG_WIDTH","afterClosed","FolderEditDirective_1","auth","evt","redirectToLogin","delete","process","hasAttribute","getDeleteNodesBatch","processedItems","notify","deleteStatus","failed","getMessage","__WEBPACK_IMPORTED_MODULE_2__services_app_config_service__","languages","languagesCongifApp","bytes","decimals","dm","parseFloat","pow","toFixed","thumbnailService","getMimeTypeIcon","transform","Pipe","__WEBPACK_IMPORTED_MODULE_0__base_event__","BaseUIEvent","CardViewMapItemModel","values","__WEBPACK_IMPORTED_MODULE_1__card_view_baseitem_model__","CardViewDateItemModel","__WEBPACK_IMPORTED_MODULE_0_moment__","PermissionsEnum","DELETE","UPDATE","CREATE","UPDATEPERMISSIONS","NOT_DELETE","NOT_UPDATE","NOT_CREATE","NOT_UPDATEPERMISSIONS"],"mappings":"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","file":"ng2-alfresco-core/bundles/ng2-alfresco-core.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"@angular/material\"), require(\"@angular/common\"), require(\"moment\"), require(\"@angular/forms\"), require(\"@ngx-translate/core\"), require(\"@angular/common/http\"), require(\"alfresco-js-api\"), require(\"@angular/platform-browser/animations\"), require(\"rxjs/Subject\"), require(\"@angular/router\"), require(\"rxjs/BehaviorSubject\"), require(\"minimatch\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"rxjs/Rx\", \"@angular/material\", \"@angular/common\", \"moment\", \"@angular/forms\", \"@ngx-translate/core\", \"@angular/common/http\", \"alfresco-js-api\", \"@angular/platform-browser/animations\", \"rxjs/Subject\", \"@angular/router\", \"rxjs/BehaviorSubject\", \"minimatch\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng2-alfresco-core\"] = factory(require(\"@angular/core\"), require(\"rxjs/Rx\"), require(\"@angular/material\"), require(\"@angular/common\"), require(\"moment\"), require(\"@angular/forms\"), require(\"@ngx-translate/core\"), require(\"@angular/common/http\"), require(\"alfresco-js-api\"), require(\"@angular/platform-browser/animations\"), require(\"rxjs/Subject\"), require(\"@angular/router\"), require(\"rxjs/BehaviorSubject\"), require(\"minimatch\"));\n\telse\n\t\troot[\"ng2-alfresco-core\"] = factory(root[\"@angular/core\"], root[\"rxjs/Rx\"], root[\"@angular/material\"], root[\"@angular/common\"], root[\"moment\"], root[\"@angular/forms\"], root[\"@ngx-translate/core\"], root[\"@angular/common/http\"], root[\"alfresco-js-api\"], root[\"@angular/platform-browser/animations\"], root[\"rxjs/Subject\"], root[\"@angular/router\"], root[\"rxjs/BehaviorSubject\"], root[\"minimatch\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__, __WEBPACK_EXTERNAL_MODULE_8__, __WEBPACK_EXTERNAL_MODULE_14__, __WEBPACK_EXTERNAL_MODULE_18__, __WEBPACK_EXTERNAL_MODULE_31__, __WEBPACK_EXTERNAL_MODULE_51__, __WEBPACK_EXTERNAL_MODULE_58__, __WEBPACK_EXTERNAL_MODULE_170__, __WEBPACK_EXTERNAL_MODULE_196__, __WEBPACK_EXTERNAL_MODULE_213__, __WEBPACK_EXTERNAL_MODULE_215__, __WEBPACK_EXTERNAL_MODULE_216__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 169);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4918c403d90e07ea407d","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = 0\n// module chunks = 0 1","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tslib/tslib.es6.js\n// module id = 1\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Rx\"\n// module id = 2\n// module chunks = 0 1","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/material\"\n// module id = 3\n// module chunks = 0 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n    AlfrescoApi, ContentApi, FavoritesApi, NodesApi,\n    PeopleApi, RenditionsApi, SharedlinksApi, SitesApi,\n    VersionsApi\n} from 'alfresco-js-api';\nimport * as alfrescoApi from 'alfresco-js-api';\nimport { AppConfigService } from './app-config.service';\nimport { StorageService } from './storage.service';\n\n@Injectable()\nexport class AlfrescoApiService {\n\n    private alfrescoApi: AlfrescoApi;\n\n    getInstance(): AlfrescoApi {\n        return this.alfrescoApi;\n    }\n\n    get contentApi(): ContentApi {\n        return this.getInstance().content;\n    }\n\n    get nodesApi(): NodesApi {\n        return this.getInstance().nodes;\n    }\n\n    get renditionsApi(): RenditionsApi {\n        return this.getInstance().core.renditionsApi;\n    }\n\n    get sharedLinksApi(): SharedlinksApi {\n        return this.getInstance().core.sharedlinksApi;\n    }\n\n    get sitesApi(): SitesApi {\n        return this.getInstance().core.sitesApi;\n    }\n\n    get favoritesApi(): FavoritesApi {\n        return this.getInstance().core.favoritesApi;\n    }\n\n    get peopleApi(): PeopleApi {\n        return this.getInstance().core.peopleApi;\n    }\n\n    get searchApi() {\n        return this.getInstance().search.searchApi;\n    }\n\n    get versionsApi(): VersionsApi {\n        return this.getInstance().core.versionsApi;\n    }\n\n    constructor(private appConfig: AppConfigService,\n                private storage: StorageService) {\n\n        this.reset();\n    }\n\n    reset() {\n        this.alfrescoApi = <AlfrescoApi> new alfrescoApi({\n            provider: this.storage.getItem('AUTH_TYPE'),\n            ticketEcm: this.storage.getItem('ticket-ECM'),\n            ticketBpm: this.storage.getItem('ticket-BPM'),\n            hostEcm: this.appConfig.get<string>('ecmHost'),\n            hostBpm: this.appConfig.get<string>('bpmHost'),\n            contextRoot: 'alfresco',\n            disableCsrf: this.storage.getItem('DISABLE_CSRF') === 'true'\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/alfresco-api.service.ts","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_ms_powerpoint.cb1eb5f9ba7cdac57b995b819cb966eb.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_ms_powerpoint.svg\n// module id = 6\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_document.43d9bfb2ccae054a56e2ca40c4e6d77e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_document.svg\n// module id = 7\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_8__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = 8\n// module chunks = 0 1","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { CookieService } from './cookie.service';\nimport { LogService } from './log.service';\nimport { StorageService } from './storage.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\nconst REMEMBER_ME_COOKIE_KEY = 'ALFRESCO_REMEMBER_ME';\nconst REMEMBER_ME_UNTIL = 1000 * 60 * 60 * 24 * 30 ;\n\n@Injectable()\nexport class AuthenticationService {\n    private redirectUrl: string = '';\n\n    onLogin: Subject<any> = new Subject<any>();\n    onLogout: Subject<any> = new Subject<any>();\n\n    constructor(\n        private preferences: UserPreferencesService,\n        private alfrescoApi: AlfrescoApiService,\n        private storage: StorageService,\n        private cookie: CookieService,\n        private logService: LogService) {\n    }\n\n    /**\n     * The method return true if the user is logged in\n     * @returns {boolean}\n     */\n    isLoggedIn(): boolean {\n        return !!this.alfrescoApi.getInstance().isLoggedIn();\n    }\n\n    /**\n     * Method to delegate to POST login\n     * @param username\n     * @param password\n     * @returns {Observable<R>|Observable<T>}\n     */\n    login(username: string, password: string, rememberMe: boolean = false): Observable<{ type: string, ticket: any }> {\n        this.removeTicket();\n        return Observable.fromPromise(this.callApiLogin(username, password))\n            .map((response: any) => {\n                this.saveRememberMeCookie(rememberMe);\n                this.saveTickets();\n                this.onLogin.next(response);\n                return {\n                    type: this.preferences.authType,\n                    ticket: response\n                };\n            })\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * The method save the \"remember me\" cookie as a long life cookie or a session cookie\n     * depending on the given paramter\n     */\n    private saveRememberMeCookie(rememberMe: boolean): void {\n        let expiration = null;\n\n        if (rememberMe) {\n            expiration = new Date();\n            const time = expiration.getTime();\n            const expireTime = time + REMEMBER_ME_UNTIL;\n            expiration.setTime(expireTime);\n        }\n        this.cookie.setItem(REMEMBER_ME_COOKIE_KEY, '1', expiration, null);\n    }\n\n    /**\n     * The method retrieve whether the \"remember me\" cookie was set or not\n     *\n     * @returns {boolean}\n     */\n    private isRememberMeSet(): boolean {\n        return (this.cookie.getItem(REMEMBER_ME_COOKIE_KEY) === null) ? false : true;\n    }\n\n    /**\n     * Initialize the alfresco Api with user and password end call the login method\n     * @param username\n     * @param password\n     * @returns {*|Observable<any>}\n     */\n    private callApiLogin(username: string, password: string) {\n        return this.alfrescoApi.getInstance().login(username, password);\n    }\n\n    /**\n     * The method remove the ticket from the Storage\n     *\n     * @returns {Observable<R>|Observable<T>}\n     */\n    logout() {\n        return Observable.fromPromise(this.callApiLogout())\n            .do(response => {\n                this.removeTicket();\n                this.onLogout.next(response);\n                return response;\n            })\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     *\n     * @returns {*|Observable<string>|Observable<any>|Promise<T>}\n     */\n    private callApiLogout(): Promise<any> {\n        if (this.alfrescoApi.getInstance()) {\n            return this.alfrescoApi.getInstance().logout();\n        }\n    }\n\n    /**\n     * Remove the login ticket from Storage\n     */\n    removeTicket(): void {\n        this.storage.removeItem('ticket-ECM');\n        this.storage.removeItem('ticket-BPM');\n        this.alfrescoApi.getInstance().setTicket(undefined, undefined);\n    }\n\n    /**\n     * The method return the ECM ticket stored in the Storage\n     * @returns ticket\n     */\n    getTicketEcm(): string | null {\n        return this.storage.getItem('ticket-ECM');\n    }\n\n    /**\n     * The method return the BPM ticket stored in the Storage\n     * @returns ticket\n     */\n    getTicketBpm(): string | null {\n        return this.storage.getItem('ticket-BPM');\n    }\n\n    getTicketEcmBase64(): string | null {\n        let ticket = this.storage.getItem('ticket-ECM');\n        if (ticket) {\n            return 'Basic ' + btoa(ticket);\n        }\n        return null;\n    }\n\n    /**\n     * The method save the ECM and BPM ticket in the Storage\n     */\n    saveTickets(): void {\n        this.saveTicketEcm();\n        this.saveTicketBpm();\n    }\n\n    /**\n     * The method save the ECM ticket in the Storage\n     */\n    saveTicketEcm(): void {\n        if (this.alfrescoApi.getInstance() && this.alfrescoApi.getInstance().getTicketEcm()) {\n            this.storage.setItem('ticket-ECM', this.alfrescoApi.getInstance().getTicketEcm());\n        }\n    }\n\n    /**\n     * The method save the BPM ticket in the Storage\n     */\n    saveTicketBpm(): void {\n        if (this.alfrescoApi.getInstance() && this.alfrescoApi.getInstance().getTicketBpm()) {\n            this.storage.setItem('ticket-BPM', this.alfrescoApi.getInstance().getTicketBpm());\n        }\n    }\n\n    /**\n     * The method return true if user is logged in on ecm provider\n     *\n     * @returns {boolean}\n     */\n    isEcmLoggedIn(): boolean {\n        return this.isRememberMeSet() && this.alfrescoApi.getInstance().ecmAuth && !!this.alfrescoApi.getInstance().ecmAuth.isLoggedIn();\n    }\n\n    /**\n     * The method return true if user is logged in on bpm provider\n     *\n     * @returns {boolean}\n     */\n    isBpmLoggedIn(): boolean {\n        return this.isRememberMeSet() && this.alfrescoApi.getInstance().bpmAuth && !!this.alfrescoApi.getInstance().bpmAuth.isLoggedIn();\n    }\n\n    /**\n     * Get the ECM username\n     *\n     * @returns {string} The username value\n     *\n     * @memberof AuthenticationService\n     */\n    getEcmUsername(): string {\n        return this.alfrescoApi.getInstance().ecmAuth.username;\n    }\n\n    /**\n     * Get the BPM username\n     *\n     * @returns {string} The username value\n     *\n     * @memberof AuthenticationService\n     */\n    getBpmUsername(): string {\n        return this.alfrescoApi.getInstance().bpmAuth.username;\n    }\n\n    setRedirectUrl(url: string) {\n        this.redirectUrl = url;\n    }\n\n    getRedirectUrl(): string {\n        return this.redirectUrl;\n    }\n\n    /**\n     * The method write the error in the console browser\n     * @param error\n     * @returns {ErrorObservable}\n     */\n    handleError(error: any): Observable<any> {\n        this.logService.error('Error when logging in', error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/authentication.service.ts","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_raster_image.a2a29ea444a70beddb38e4897ea76a0f.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_raster_image.svg\n// module id = 10\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_ms_excel.ff0b4c431df45a024b88f16be849a4a8.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_ms_excel.svg\n// module id = 11\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_ms_word.03b957812273e6e731c8b759a4b479b9.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_ms_word.svg\n// module id = 12\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_archive.52c6fbd59da7367b8d80838bb540ed53.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_archive.svg\n// module id = 13\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_14__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 14\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { APP_INITIALIZER, Injectable, NgModule } from '@angular/core';\nimport { ObjectUtils } from '../utils/object-utils';\n\n@Injectable()\nexport class AppConfigService {\n\n    static APP_CONFIG_LANGUAGES_KEY = 'languages';\n\n    config: any = {\n        application: {\n            name: 'Alfresco ADF Application'\n        },\n        ecmHost: 'http://{hostname}{:port}/ecm',\n        bpmHost: 'http://{hostname}{:port}/bpm'\n    };\n\n    constructor(private http: HttpClient) {\n    }\n\n    get<T>(key: string, defaultValue?: T): T {\n        let result: any = ObjectUtils.getValue(this.config, key);\n        if (typeof result === 'string') {\n            const map = new Map<string, string>();\n            map.set('hostname', this.getLocationHostname());\n            map.set(':port', this.getLocationPort(':'));\n            map.set('port', this.getLocationPort());\n            result = this.formatString(result, map);\n        }\n        if (result === undefined) {\n            return defaultValue;\n        }\n        return <T> result;\n    }\n\n    getLocationHostname(): string {\n        return location.hostname;\n    }\n\n    getLocationPort(prefix: string = ''): string {\n        return location.port ? prefix + location.port : '';\n    }\n\n    load(): Promise<any> {\n        return new Promise(resolve => {\n            this.http.get('app.config.json').subscribe(\n                (data: any) => {\n                    this.config = Object.assign({}, this.config, data || {});\n                    resolve(this.config);\n                },\n                () => {\n                    resolve(this.config);\n                }\n            );\n        });\n    }\n\n    private formatString(str: string, map: Map<string, string>): string {\n        let result = str;\n\n        map.forEach((value, key) => {\n            const expr = new RegExp('{' + key + '}', 'gm');\n            result = result.replace(expr, value);\n        });\n\n        return result;\n    }\n}\n\nexport function startupServiceFactory(configService: AppConfigService): Function {\n    return () => configService.load();\n}\n\n@NgModule({\n    imports: [\n        HttpClientModule\n    ],\n    providers: [\n        AppConfigService,\n        {\n            provide: APP_INITIALIZER,\n            useFactory: startupServiceFactory,\n            deps: [\n                AppConfigService\n            ],\n            multi: true\n        }\n    ]\n})\nexport class AppConfigModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/app-config.service.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_18__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = 18\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DateAdapter, MatDateFormats } from '@angular/material';\nimport { isMoment, Moment } from 'moment';\nimport * as moment from 'moment';\n\nexport const MOMENT_DATE_FORMATS: MatDateFormats = {\n    parse: {\n        dateInput: 'DD/MM/YYYY'\n    },\n    display: {\n        dateInput: 'DD/MM/YYYY',\n        monthYearLabel: 'MMMM Y',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM Y'\n    }\n};\n\nconst dateNames: string[] = [];\nfor (let date = 1; date <= 31; date++) {\n    dateNames.push(String(date));\n}\n\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n\n    private localeData: any = moment.localeData();\n\n    overrideDisplyaFormat: string;\n\n    getYear(date: Moment): number {\n        return date.year();\n    }\n\n    getMonth(date: Moment): number {\n        return date.month();\n    }\n\n    getDate(date: Moment): number {\n        return date.date();\n    }\n\n    getDayOfWeek(date: Moment): number {\n        return date.day();\n    }\n\n    getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.months();\n            case 'short':\n                return this.localeData.monthsShort();\n            case 'narrow':\n                return this.localeData.monthsShort().map(month => month[0]);\n            default :\n                return;\n        }\n    }\n\n    getDateNames(): string[] {\n        return dateNames;\n    }\n\n    getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n        switch (style) {\n            case 'long':\n                return this.localeData.weekdays();\n            case 'short':\n                return this.localeData.weekdaysShort();\n            case 'narrow':\n                return this.localeData.weekdaysShort();\n            default :\n                return;\n        }\n    }\n\n    getYearName(date: Moment): string {\n        return String(date.year());\n    }\n\n    getFirstDayOfWeek(): number {\n        return this.localeData.firstDayOfWeek();\n    }\n\n    getNumDaysInMonth(date: Moment): number {\n        return date.daysInMonth();\n    }\n\n    clone(date: Moment): Moment {\n        return date.clone();\n    }\n\n    createDate(year: number, month: number, date: number): Moment {\n        return moment([year, month, date]);\n    }\n\n    today(): Moment {\n        return moment();\n    }\n\n    parse(value: any, parseFormat: any): Moment {\n        let m = moment(value, parseFormat, true);\n        if (!m.isValid()) {\n            m = moment(value, this.overrideDisplyaFormat);\n        }\n        if (m.isValid()) {\n            // if user omits year, it defaults to 2001, so check for that issue.\n            if (m.year() === 2001 && value.indexOf('2001') === -1) {\n                // if 2001 not actually in the value string, change to current year\n                const currentYear = new Date().getFullYear();\n                m.set('year', currentYear);\n                // if date is in the future, set previous year\n                if (m.isAfter(moment())) {\n                    m.set('year', currentYear - 1);\n                }\n            }\n            return m;\n        } else {\n            return null;\n        }\n    }\n\n    format(date: Moment, displayFormat: any): string {\n\n        displayFormat = this.overrideDisplyaFormat ? this.overrideDisplyaFormat : displayFormat;\n\n        if (date && date.format) {\n            return date.format(displayFormat);\n        } else {\n            return '';\n        }\n    }\n\n    addCalendarYears(date: Moment, years: number): Moment {\n        return date.clone().add(years, 'y');\n    }\n\n    addCalendarMonths(date: Moment, months: number): Moment {\n        return date.clone().add(months, 'M');\n    }\n\n    addCalendarDays(date: Moment, days: number): Moment {\n        return date.clone().add(days, 'd');\n    }\n\n    getISODateString(date: Moment): string {\n        return date.toISOString();\n    }\n\n    setLocale(locale: any): void {\n        this.localeData = moment.localeData(locale);\n    }\n\n    compareDate(first: Moment, second: Moment): number {\n        return first.diff(second, 'seconds', true);\n    }\n\n    sameDate(first: any | Moment, second: any | Moment): boolean {\n        if (first == null) {\n            // same if both null\n            return second == null;\n        } else if (isMoment(first)) {\n            return first.isSame(second);\n        } else {\n            const isSame = super.sameDate(first, second);\n            return isSame;\n        }\n    }\n\n    clampDate(date: Moment, min?: any | Moment, max?: any | Moment): Moment {\n        if (min && date.isBefore(min)) {\n            return min;\n        } else if (max && date.isAfter(max)) {\n            return max;\n        } else {\n            return date;\n        }\n    }\n\n    isDateInstance(date: any) {\n        let isValidDateInstance = false;\n\n        if (date) {\n            isValidDateInstance = date._isAMomentObject;\n        }\n\n        return isValidDateInstance;\n    }\n\n    isValid(date: Moment): boolean {\n        return date.isValid();\n    }\n\n    toIso8601(date: Moment): string {\n        return this.clone(date).format();\n    }\n\n    fromIso8601(iso8601String: string): Moment | null {\n        let d = moment(iso8601String, moment.ISO_8601).locale(this.locale);\n        return this.isValid(d) ? d : null;\n    }\n\n    invalid(): Moment {\n        return moment.invalid();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/utils/momentDateAdapter.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { CardViewBaseItemModel } from '../models/card-view-baseitem.model';\n\nexport interface UpdateNotification {\n    target: any;\n    changed: any;\n}\n\nexport interface ClickNotification {\n    target: any;\n}\n\n@Injectable()\nexport class CardViewUpdateService {\n\n    // Observable sources\n    private itemUpdatedSource = new Subject<UpdateNotification>();\n\n    // Observable streams\n    public itemUpdated$ = this.itemUpdatedSource.asObservable();\n\n    public itemClicked$: Subject<ClickNotification> = new Subject<ClickNotification>();\n\n    update(property: CardViewBaseItemModel, changed: any) {\n        this.itemUpdatedSource.next({\n            target: property,\n            changed\n        });\n    }\n\n    clicked(property: CardViewBaseItemModel) {\n        this.itemClicked$.next({\n            target: property\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/card-view-update.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { logLevels, LogLevelsEnum } from '../models/log-levels.model';\nimport { AppConfigService } from './app-config.service';\n\n@Injectable()\nexport class LogService {\n\n    currentLogLevel: LogLevelsEnum = LogLevelsEnum.TRACE;\n\n    constructor(appConfig: AppConfigService) {\n        if (appConfig) {\n            let configLevel: string = appConfig.get<string>('logLevel');\n\n            if (configLevel) {\n                this.currentLogLevel = this.getCurrentLogLevel(configLevel);\n            }\n        }\n    }\n\n    get error(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel >= LogLevelsEnum.ERROR) {\n            return console.error.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n    }\n\n    get debug(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel >= LogLevelsEnum.DEBUG) {\n            return console.debug.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n    }\n\n    get info(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel >= LogLevelsEnum.INFO) {\n            return console.info.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n    }\n\n    get log(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n            return console.log.bind(console);\n        }\n\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n    }\n\n    get trace(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel >= LogLevelsEnum.TRACE) {\n            return console.trace.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n\n    }\n\n    get warn(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel >= LogLevelsEnum.WARN) {\n            return console.warn.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n\n    }\n\n    get assert(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            return console.assert.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n\n    }\n\n    get group(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            return console.group.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n\n    }\n\n    get groupEnd(): (message?: any, ...optionalParams: any[]) => any {\n        if (this.currentLogLevel !== LogLevelsEnum.SILENT) {\n            return console.groupEnd.bind(console);\n        }\n        return (message?: any, ...optionalParams: any[]) => {\n        };\n\n    }\n\n    getCurrentLogLevel(level: string): LogLevelsEnum {\n        let referencedLevel = logLevels.find((currentLevel: any) => {\n            return currentLevel.name.toLocaleLowerCase() === level.toLocaleLowerCase();\n        });\n\n        return referencedLevel ? referencedLevel.level : 5;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/log.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Observable } from 'rxjs/Rx';\n\nimport { Component, Inject, OnInit, Optional } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { NodesApiService } from '../services/nodes-api.service';\nimport { NotificationService } from '../services/notification.service';\nimport { TranslationService } from '../services/translation.service';\n\nimport { forbidEndingDot, forbidOnlySpaces, forbidSpecialCharacters } from './folder-name.validators';\n\n@Component({\n    selector: 'adf-folder-dialog',\n    styles: [require('./folder.dialog.scss')],\n    template: require('./folder.dialog.html')\n})\nexport class FolderDialogComponent implements OnInit {\n    form: FormGroup;\n    folder: MinimalNodeEntryEntity = null;\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private dialog: MatDialogRef<FolderDialogComponent>,\n        private nodesApi: NodesApiService,\n        private translation: TranslationService,\n        private notification: NotificationService,\n        @Optional()\n        @Inject(MAT_DIALOG_DATA)\n        public data: any\n    ) {}\n\n    get editing(): boolean {\n        return !!this.data.folder;\n    }\n\n    ngOnInit() {\n        const { folder } = this.data;\n        let name = '';\n        let description = '';\n\n        if (folder) {\n            const { properties } = folder;\n\n            name = folder.name || '';\n            description = properties ? properties['cm:description'] : '';\n        }\n\n        const validators = {\n            name: [\n                Validators.required,\n                forbidSpecialCharacters,\n                forbidEndingDot,\n                forbidOnlySpaces\n            ]\n        };\n\n        this.form = this.formBuilder.group({\n            name: [ name, validators.name ],\n            description: [ description ]\n        });\n    }\n\n    get name(): string {\n        let { name } = this.form.value;\n\n        return (name || '').trim();\n    }\n\n    get description(): string {\n        let { description } = this.form.value;\n\n        return (description || '').trim();\n    }\n\n    private get properties(): any {\n        const { name: title, description } = this;\n\n        return {\n            'cm:title': title,\n            'cm:description': description\n        };\n    }\n\n    private create(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { parentNodeId} } = this;\n        return nodesApi.createFolder(parentNodeId, { name, properties });\n    }\n\n    private edit(): Observable<MinimalNodeEntryEntity> {\n        const { name, properties, nodesApi, data: { folder: { id: nodeId }} } = this;\n        return nodesApi.updateNode(nodeId, { name, properties });\n    }\n\n    submit() {\n        const { form, dialog, editing } = this;\n\n        if (!form.valid) { return; }\n\n        (editing ? this.edit() : this.create())\n            .subscribe(\n                (folder: MinimalNodeEntryEntity) => dialog.close(folder),\n                (error) => this.handleError(error)\n            );\n    }\n\n    handleError(error: any): any {\n        let i18nMessageString = 'CORE.MESSAGES.ERRORS.GENERIC';\n\n        try {\n            const { error: { statusCode } } = JSON.parse(error.message);\n\n            if (statusCode === 409) {\n                i18nMessageString = 'CORE.MESSAGES.ERRORS.EXISTENT_FOLDER';\n            }\n        } catch (err) { /* Do nothing, keep the original message */ }\n\n        this.translation.get(i18nMessageString).subscribe(message => {\n            this.notification.openSnackMessage(message, 3000);\n        });\n\n        return error;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/dialogs/folder.dialog.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Inject, Injectable, InjectionToken } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoTranslateLoader } from './translate-loader.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\nexport const TRANSLATION_PROVIDER = new InjectionToken('Injection token for translation providers.');\n\nexport interface TranslationProvider {\n    name: string;\n    source: string;\n}\n\n@Injectable()\nexport class TranslationService {\n    defaultLang: string;\n    userLang: string;\n    customLoader: AlfrescoTranslateLoader;\n\n    constructor(public translate: TranslateService,\n                private userPreference: UserPreferencesService,\n                @Inject(TRANSLATION_PROVIDER) providers: TranslationProvider[]) {\n        this.customLoader = <AlfrescoTranslateLoader> this.translate.currentLoader;\n\n        this.defaultLang = 'en';\n        translate.setDefaultLang(this.defaultLang);\n\n        if (providers && providers.length > 0) {\n            for (let provider of providers) {\n                this.addTranslationFolder(provider.name, provider.source);\n            }\n        }\n\n        this.userPreference.locale$.subscribe( (locale) => {\n            this.userLang = locale;\n            this.use(this.userLang);\n        });\n    }\n\n    addTranslationFolder(name: string = '', path: string = '') {\n        if (!this.customLoader.providerRegistered(name)) {\n            this.customLoader.registerProvider(name, path);\n            if (this.userLang !== this.defaultLang) {\n                this.translate.getTranslation(this.defaultLang).subscribe(() => {\n                    this.translate.getTranslation(this.userLang).subscribe(\n                        () => {\n                            this.translate.use(this.userLang);\n                        }\n                    );\n                });\n            } else {\n                this.translate.getTranslation(this.userLang).subscribe(\n                    () => {\n                        this.translate.use(this.userLang);\n                    }\n                );\n            }\n        }\n    }\n\n    use(lang: string): Observable<any> {\n        this.customLoader.init(lang);\n        return this.translate.use(lang);\n    }\n\n    get(key: string|Array<string>, interpolateParams?: Object): Observable<string|any> {\n        return this.translate.get(key, interpolateParams);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/translation.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AppConfigService } from './app-config.service';\nimport { StorageService } from './storage.service';\n\n@Injectable()\nexport class UserPreferencesService {\n\n    private defaults = {\n        paginationSize: 25,\n        locale: 'en'\n    };\n\n    private localeSubject: BehaviorSubject<string> ;\n    locale$: Observable<string>;\n\n    constructor(\n        public translate: TranslateService,\n        private appConfig: AppConfigService,\n        private storage: StorageService,\n        private apiService: AlfrescoApiService\n    ) {\n        const currentLocale = this.locale || this.getDefaultLocale();\n        this.localeSubject = new BehaviorSubject(currentLocale);\n        this.locale$ = this.localeSubject.asObservable();\n        this.defaults.paginationSize = appConfig.get('pagination.size', 25);\n    }\n\n    get(property: string, defaultValue?: string): string {\n        const key = this.getPropertyKey(property);\n        const value = this.storage.getItem(key);\n        if (value === undefined) {\n            return defaultValue;\n        }\n        return value;\n    }\n\n    set(property: string, value: any) {\n        if (!property) { return; }\n\n        this.storage.setItem(\n            this.getPropertyKey(property),\n            value\n        );\n    }\n\n    getStoragePrefix(): string {\n        return this.storage.getItem('USER_PROFILE') || 'GUEST';\n    }\n\n    setStoragePrefix(value: string) {\n        this.storage.setItem('USER_PROFILE', value || 'GUEST');\n    }\n\n    getPropertyKey(property: string): string {\n        return `${this.getStoragePrefix()}__${property}`;\n    }\n\n    set authType(value: string) {\n        this.storage.setItem('AUTH_TYPE', value);\n        this.apiService.reset();\n    }\n\n    get authType(): string {\n        return this.storage.getItem('AUTH_TYPE') || 'ALL';\n    }\n\n    set disableCSRF(value: boolean) {\n        this.set('DISABLE_CSRF', value);\n        this.apiService.reset();\n    }\n\n    get disableCSRF(): boolean {\n        return this.get('DISABLE_CSRF') === 'true';\n    }\n\n    set paginationSize(value: number) {\n        this.set('PAGINATION_SIZE', value);\n    }\n\n    get paginationSize(): number {\n        return Number(this.get('PAGINATION_SIZE')) || this.defaults.paginationSize;\n    }\n\n    get locale(): string {\n        const locale = this.get('LOCALE');\n        return locale;\n    }\n\n    set locale(value: string) {\n        this.localeSubject.next(value);\n        this.set('LOCALE', value);\n    }\n\n    public getDefaultLocale(): string {\n        return this.appConfig.get<string>('locale') || this.translate.getBrowserLang() || 'en';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/user-preferences.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface HightlightTransformResult {\n    text: string;\n    changed: boolean;\n}\nexport class HighlightTransformService {\n\n    public highlight(text: string, search: string, wrapperClass: string = 'highlight'): HightlightTransformResult {\n        let isMatching = false,\n            result = text;\n\n        if (search && text) {\n            let pattern = search.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n            pattern = pattern.split(' ').filter((t) => {\n                return t.length > 0;\n            }).join('|');\n\n            const regex = new RegExp(pattern, 'gi');\n            result = text.replace(regex, (match) => {\n                isMatching = true;\n                return `<span class=\"${wrapperClass}\">${match}</span>`;\n            });\n            return { text: result, changed: isMatching};\n        } else {\n            return { text: result, changed: isMatching};\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/highlight-transform.service.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_31__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@ngx-translate/core\"\n// module id = 31\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *\n * This object represent the basic structure of a card view.\n *\n *\n * @returns {CardViewBaseItemModel} .\n */\n\nexport interface CardViewItemProperties {\n    label: string;\n    value: any;\n    key: any;\n    default?: string;\n    editable?: boolean;\n    clickable?: boolean;\n}\n\nexport abstract class CardViewBaseItemModel {\n    label: string;\n    value: any;\n    key: any;\n    default: string;\n    editable: boolean;\n    clickable: boolean;\n\n    constructor(obj: CardViewItemProperties) {\n        this.label = obj.label || '';\n        this.value = obj.value;\n        this.key = obj.key;\n        this.default = obj.default;\n        this.editable = !!obj.editable;\n        this.clickable = !!obj.clickable;\n    }\n\n    isEmpty(): boolean {\n        return this.value === undefined || this.value === null || this.value === '';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/card-view-baseitem.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ObjectUtils {\n    /**\n     * Gets a value from an object by composed key\n     * ObjectUtils.getValue({ item: { nodeType: 'cm:folder' }}, 'item.nodeType') ==> 'cm:folder'\n     * @param target\n     * @param key\n     * @returns {string}\n     */\n    static getValue(target: any, key: string): any {\n\n        if (!target) {\n            return undefined;\n        }\n\n        let keys = key.split('.');\n        key = '';\n\n        do {\n            key += keys.shift();\n            let value = target[key];\n            if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n                target = value;\n                key = '';\n            } else if (!keys.length) {\n                target = undefined;\n            } else {\n                key += '.';\n            }\n        } while (keys.length);\n\n        return target;\n    }\n\n    static merge(...objects): any {\n        let result = {};\n\n        objects.forEach(source => {\n            Object.keys(source).forEach(prop => {\n                if (prop in result && Array.isArray(result[prop])) {\n                    result[prop] = result[prop].concat(source[prop]);\n                } else if (prop in result && typeof result[prop] === 'object') {\n                    result[prop] = ObjectUtils.merge(result[prop], source[prop]);\n                } else {\n                    result[prop] = source[prop];\n                }\n            });\n        });\n\n        return result;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/utils/object-utils.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ContentApi, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Observable, Subject } from 'rxjs/Rx';\nimport { FolderCreatedEvent } from '../events/folder-created.event';\nimport { PermissionsEnum } from '../models/permissions.enum';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\nimport { LogService } from './log.service';\n\n@Injectable()\nexport class AlfrescoContentService {\n\n    folderCreated: Subject<FolderCreatedEvent> = new Subject<FolderCreatedEvent>();\n    folderCreate: Subject<MinimalNodeEntryEntity> = new Subject<MinimalNodeEntryEntity>();\n    folderEdit: Subject<MinimalNodeEntryEntity> = new Subject<MinimalNodeEntryEntity>();\n\n    constructor(public authService: AuthenticationService,\n                public apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    private get contentApi(): ContentApi {\n        return this.apiService.getInstance().content;\n    }\n\n    /**\n     * Get thumbnail URL for the given document node.\n     *\n     * @param {string|MinimalNodeEntity} nodeId Node to get URL for.\n     * @param {boolean} [attachment] Retrieve content as an attachment for download\n     * @param {string} [ticket] Custom ticket to use for authentication\n     * @returns {string} The URL address pointing to the content.\n     */\n    getDocumentThumbnailUrl(nodeId: any, attachment?: boolean, ticket?: string): string {\n\n        if (nodeId && nodeId.entry) {\n            nodeId = nodeId.entry.id;\n        }\n\n        return this.contentApi.getDocumentThumbnailUrl(nodeId, attachment, ticket);\n    }\n\n    /**\n     * Get content URL for the given node.\n     *\n     * @param nodeId {string|MinimalNodeEntity} Node to get URL for.\n     * @param {boolean} [attachment] Retrieve content as an attachment for download\n     * @param {string} [ticket] Custom ticket to use for authentication\n     * @returns {string} The URL address pointing to the content.\n     */\n    getContentUrl(nodeId: any, attachment?: boolean, ticket?: string): string {\n\n        if (nodeId && nodeId.entry) {\n            nodeId = nodeId.entry.id;\n        }\n\n        return this.contentApi.getContentUrl(nodeId, attachment, ticket);\n    }\n\n    /**\n     * Get content for the given node.\n     * @param nodeId {string}.\n     *\n     * @returns {Observable<any>} URL address.\n     */\n    getNodeContent(nodeId: string): Observable<any> {\n        return Observable.fromPromise(this.apiService.getInstance().core.nodesApi.getFileContent(nodeId).then((dataContent) => {\n            return dataContent;\n        })).catch(this.handleError);\n    }\n\n    /**\n     * Create a folder\n     * @param name - the folder name\n     */\n    createFolder(relativePath: string, name: string, parentId?: string): Observable<FolderCreatedEvent> {\n        return Observable.fromPromise(this.apiService.getInstance().nodes.createFolder(name, relativePath, parentId))\n            .do(data => {\n                this.folderCreated.next(<FolderCreatedEvent> {\n                    relativePath: relativePath,\n                    name: name,\n                    parentId: parentId,\n                    node: data\n                });\n            })\n            .catch(err => this.handleError(err));\n    }\n\n    /**\n     * Check if the user has permissions on that node\n     * @param MinimalNode -  node to check allowableOperations\n     * @param PermissionsEnum - create, delete, update, updatePermissions, !create, !delete, !update, !updatePermissions\n     *\n     * @returns {boolean} has permission\n     */\n    hasPermission(node: any, permission: PermissionsEnum|string): boolean {\n        let hasPermission = false;\n\n        if (this.hasAllowableOperations(node)) {\n            if (permission && permission.startsWith('!')) {\n                hasPermission = node.allowableOperations.find(currentPermission => currentPermission === permission.replace('!', '')) ? false : true;\n            } else {\n                hasPermission = node.allowableOperations.find(currentPermission => currentPermission === permission) ? true : false;\n            }\n\n        } else {\n            if (permission && permission.startsWith('!')) {\n                hasPermission = true;\n            }\n        }\n\n        return hasPermission;\n    }\n\n    /**\n     * Check if the node has the properties allowableOperations\n     * @param MinimalNode -  node to check allowableOperations\n     *\n     * @returns {boolean} has AllowableOperations\n     */\n    hasAllowableOperations(node: any): boolean {\n        return node && node.allowableOperations ? true : false;\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/alfresco-content.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileUploadProgress {\n    loaded: number;\n    total: number;\n    percent: number;\n}\n\nexport interface FileUploadOptions {\n    newVersion?: boolean;\n    parentId?: string;\n    path?: string;\n}\n\nexport enum FileUploadStatus {\n    Pending = 0,\n    Complete = 1,\n    Starting = 2,\n    Progress = 3,\n    Cancelled = 4,\n    Aborted = 5,\n    Error = 6,\n    Deleted = 7\n}\n\nexport class FileModel {\n    readonly id: string;\n    readonly name: string;\n    readonly size: number;\n    readonly file: File;\n\n    status: FileUploadStatus = FileUploadStatus.Pending;\n    progress: FileUploadProgress;\n    options: FileUploadOptions;\n    data: any;\n\n    constructor(file: File, options?: FileUploadOptions) {\n        this.file = file;\n\n        this.id = this.generateId();\n        this.name = file.name;\n        this.size = file.size;\n        this.data = null;\n\n        this.progress = {\n            loaded: 0,\n            total: 0,\n            percent: 0\n        };\n\n        this.options = Object.assign({}, {\n            newVersion: false\n        },                           options);\n    }\n\n    private generateId(): string {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            let r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n    get extension(): string {\n        return this.name.slice((Math.max(0, this.name.lastIndexOf('.')) || Infinity) + 1);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/file.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChild, Input, OnInit, TemplateRef } from '@angular/core';\n\n@Component({\n    selector: 'data-column',\n    template: ''\n})\nexport class DataColumnComponent implements OnInit {\n\n    @Input()\n    key: string;\n\n    @Input()\n    type: string = 'text';\n\n    @Input()\n    format: string;\n\n    @Input()\n    sortable: boolean = true;\n\n    @Input()\n    title: string = '';\n\n    @ContentChild(TemplateRef)\n    template: any;\n\n    @Input()\n    formatTooltip: Function;\n\n    /**\n     * Title to be used for screen readers.\n     */\n    @Input('sr-title')\n    srTitle: string;\n\n    @Input('class')\n    cssClass: string;\n\n    ngOnInit() {\n        if (!this.srTitle && this.key === '$thumbnail') {\n            this.srTitle = 'Thumbnail';\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/data-column/data-column.component.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_51__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common/http\"\n// module id = 51\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { AccordionGroupComponent } from './accordion-group.component';\nimport { AccordionComponent } from './accordion.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        AccordionComponent,\n        AccordionGroupComponent\n    ],\n    exports: [\n        AccordionComponent,\n        AccordionGroupComponent\n    ]\n})\nexport class CollapsableModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/collapsable/collapsable.module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatIconModule, MatMenuModule } from '@angular/material';\n\nimport { ContextMenuHolderComponent } from './context-menu-holder.component';\nimport { ContextMenuDirective } from './context-menu.directive';\nimport { ContextMenuService } from './context-menu.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatButtonModule,\n        MatIconModule,\n        MatMenuModule\n    ],\n    declarations: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    exports: [\n        ContextMenuHolderComponent,\n        ContextMenuDirective\n    ],\n    providers: [\n        ContextMenuService\n    ]\n})\nexport class ContextMenuModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/context-menu/context-menu.module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule, MatDatepickerModule, MatIconModule, MatInputModule, MatNativeDateModule } from '@angular/material';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CardViewContentProxyDirective } from './card-view-content-proxy.directive';\nimport { CardViewDateItemComponent } from './card-view-dateitem.component';\nimport { CardViewItemDispatcherComponent } from './card-view-item-dispatcher.component';\nimport { CardViewMapItemComponent } from './card-view-mapitem.component';\nimport { CardViewTextItemComponent } from './card-view-textitem.component';\nimport { CardViewComponent } from './card-view.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatInputModule,\n        MatIconModule,\n        MatButtonModule,\n        FormsModule,\n        TranslateModule\n    ],\n    declarations: [\n        CardViewComponent,\n        CardViewItemDispatcherComponent,\n        CardViewContentProxyDirective,\n        CardViewTextItemComponent,\n        CardViewMapItemComponent,\n        CardViewDateItemComponent\n    ],\n    entryComponents: [\n        CardViewTextItemComponent,\n        CardViewMapItemComponent,\n        CardViewDateItemComponent\n    ],\n    exports: [\n        CardViewComponent,\n        CardViewTextItemComponent,\n        CardViewMapItemComponent,\n        CardViewDateItemComponent\n    ]\n})\nexport class CardViewModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/view/card-view.module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n    selector: '[adf-card-view-content-proxy]'\n})\nexport class CardViewContentProxyDirective {\n    constructor(public viewContainerRef: ViewContainerRef) { }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/view/card-view-content-proxy.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *\n * This object represent the basic structure of a card view.\n *\n *\n * @returns {CardViewTextItemModel} .\n */\n\nimport { CardViewItem } from '../interface/card-view-item.interface';\nimport { CardViewBaseItemModel, CardViewItemProperties } from './card-view-baseitem.model';\n\nexport interface CardViewTextItemProperties extends CardViewItemProperties {\n    multiline?: boolean;\n}\nexport class CardViewTextItemModel extends CardViewBaseItemModel implements CardViewItem {\n    type: string = 'text';\n    multiline: boolean;\n\n    constructor(obj: CardViewTextItemProperties) {\n        super(obj);\n        this.multiline = !!obj.multiline ;\n    }\n\n    get displayValue() {\n        return this.value;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/card-view-textitem.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\nimport { DownloadEntry, MinimalNodeEntity } from 'alfresco-js-api';\nimport { LogService } from '../services/log.service';\nimport { AlfrescoApiService } from './../services/alfresco-api.service';\n\n@Component({\n    selector: 'adf-download-zip-dialog',\n    template: require('./download-zip.dialog.html'),\n    styles: [require('./download-zip.dialog.scss')],\n    host: { 'class': 'adf-download-zip-dialog' },\n    encapsulation: ViewEncapsulation.None\n})\nexport class DownloadZipDialogComponent implements OnInit {\n\n    // flag for async threads\n    private cancelled = false;\n\n    constructor(private apiService: AlfrescoApiService,\n                private dialogRef: MatDialogRef<DownloadZipDialogComponent>,\n                @Inject(MAT_DIALOG_DATA) private data: { nodeIds?: string[] },\n                private logService: LogService) {\n    }\n\n    private get downloadsApi() {\n        return this.apiService.getInstance().core.downloadsApi;\n    }\n\n    private get nodesApi() {\n        return this.apiService.getInstance().core.nodesApi;\n    }\n\n    private get contentApi() {\n        return this.apiService.getInstance().content;\n    }\n\n    ngOnInit() {\n        if (this.data && this.data.nodeIds && this.data.nodeIds.length > 0) {\n            // change timeout to have a delay for demo purposes\n            setTimeout(() => {\n                if (!this.cancelled) {\n                    this.downloadZip(this.data.nodeIds);\n                } else {\n                    this.logService.log('Cancelled');\n                }\n            }, 0);\n        }\n    }\n\n    cancelDownload() {\n        this.cancelled = true;\n        this.dialogRef.close(false);\n    }\n\n    downloadZip(nodeIds: string[]) {\n        if (nodeIds && nodeIds.length > 0) {\n\n            const promise: any = this.downloadsApi.createDownload({ nodeIds });\n\n            promise.on('progress', progress => this.logService.log('Progress', progress));\n            promise.on('error', error => this.logService.error('Error', error));\n            promise.on('abort', data => this.logService.log('Abort', data));\n\n            promise.on('success', (data: DownloadEntry) => {\n                if (data && data.entry && data.entry.id) {\n                    const url = this.contentApi.getContentUrl(data.entry.id, true);\n                    // the call is needed only to get the name of the package\n                    this.nodesApi.getNode(data.entry.id).then((downloadNode: MinimalNodeEntity) => {\n                        this.logService.log(downloadNode);\n                        const fileName = downloadNode.entry.name;\n                        this.waitAndDownload(data.entry.id, url, fileName);\n                    });\n                }\n            });\n        }\n    }\n\n    waitAndDownload(downloadId: string, url: string, fileName: string) {\n        if (this.cancelled) {\n            return;\n        }\n\n        this.downloadsApi.getDownload(downloadId).then((d: DownloadEntry) => {\n            if (d.entry) {\n                if (d.entry.status === 'DONE') {\n                    this.download(url, fileName);\n                } else {\n                    setTimeout(() => {\n                        this.waitAndDownload(downloadId, url, fileName);\n                    }, 1000);\n                }\n            }\n        });\n    }\n\n    download(url: string, fileName: string) {\n        if (url && fileName) {\n            const link = document.createElement('a');\n\n            link.style.display = 'none';\n            link.download = fileName;\n            link.href = url;\n\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n        this.dialogRef.close(true);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/dialogs/download-zip.dialog.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_58__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"alfresco-js-api\"\n// module id = 58\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppConfigService } from './app-config.service';\nimport { LogService } from './log.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\n@Injectable()\nexport class AlfrescoSettingsService {\n\n    constructor(\n        private appConfig: AppConfigService,\n        private logService: LogService,\n        private preferences: UserPreferencesService) {\n    }\n\n    /** @deprecated in 1.6.0 */\n    public get ecmHost(): string {\n        this.logService.log('AlfrescoSettingsService.ecmHost is deprecated. Use AppConfigService instead.');\n        return this.appConfig.get<string>('ecmHost');\n    }\n\n    /** @deprecated in 1.7.0 */\n    public set csrfDisabled(csrfDisabled: boolean) {\n        this.logService.log(`AlfrescoSettingsService.csrfDisabled is deprecated. Use UserPreferencesService.disableCSRF instead.`);\n        this.preferences.disableCSRF = csrfDisabled;\n    }\n\n    /** @deprecated in 1.6.0 */\n    public set ecmHost(ecmHostUrl: string) {\n        this.logService.log('AlfrescoSettingsService.ecmHost is deprecated. Use AppConfigService instead.');\n    }\n\n    /** @deprecated in 1.6.0 */\n    public get bpmHost(): string {\n        this.logService.log('AlfrescoSettingsService.bpmHost is deprecated. Use AppConfigService instead.');\n        return this.appConfig.get<string>('bpmHost');\n    }\n\n    /** @deprecated in 1.6.0 */\n    public set bpmHost(bpmHostUrl: string) {\n        this.logService.log('AlfrescoSettingsService.bpmHost is deprecated. Use AppConfigService instead.');\n    }\n\n    /** @deprecated in 1.6.0 */\n    public getBPMApiBaseUrl(): string {\n        this.logService.log('AlfrescoSettingsService.getBPMApiBaseUrl is deprecated.');\n        return this.bpmHost + '/activiti-app';\n    }\n\n    /** @deprecated in 1.7.0 */\n    public getProviders(): string {\n        this.logService.log(`AlfrescoSettingsService.getProviders is deprecated. Use UserPreferencesService.authType instead.`);\n        return this.preferences.authType;\n    }\n\n    /** @deprecated in 1.7.0 */\n    public setProviders(providers: string) {\n        this.logService.log(`AlfrescoSettingsService.getProviders is deprecated. Use UserPreferencesService.authType instead.`);\n        this.preferences.authType = providers;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/alfresco-settings.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot, CanActivate, CanActivateChild,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuardBpm implements CanActivate, CanActivateChild {\n    constructor(private authService: AuthenticationService, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.checkLogin(state.url);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        if (this.authService.isBpmLoggedIn()) {\n            return true;\n        }\n\n        this.authService.setRedirectUrl(redirectUrl);\n\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/auth-guard-bpm.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuardEcm implements CanActivate {\n    constructor(\n        private authService: AuthenticationService,\n        private apiService: AlfrescoApiService,\n        private router: Router) {\n    }\n\n    private get authApi() {\n        return this.apiService.getInstance().ecmAuth;\n    }\n\n    private isLoggedIn(): Promise<boolean> {\n        if (!this.authApi.isLoggedIn()) {\n            return Promise.resolve(false);\n        }\n\n        return this.authApi\n            .validateTicket()\n            .then(() => true, () => false)\n            .catch(() => false);\n    }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\n\n        return this.isLoggedIn().then(isLoggedIn => {\n            if (!isLoggedIn) {\n                this.authService.setRedirectUrl(state.url);\n                this.router.navigate([ '/login' ]);\n            }\n\n            return isLoggedIn;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/auth-guard-ecm.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot, CanActivate, CanActivateChild,\n  Router,\n  RouterStateSnapshot\n} from '@angular/router';\n\nimport { AuthenticationService } from './authentication.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate, CanActivateChild {\n    constructor(private authService: AuthenticationService, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        const redirectUrl = state.url;\n\n        return this.checkLogin(redirectUrl);\n    }\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        return this.canActivate(route, state);\n    }\n\n    checkLogin(redirectUrl: string): boolean {\n        if (this.authService.isLoggedIn()) {\n            return true;\n        }\n\n        this.authService.setRedirectUrl(redirectUrl);\n\n        this.router.navigate(['/login']);\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/auth-guard.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { CommentProcessModel } from '../models/comment-process.model';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\n\n@Injectable()\nexport class CommentProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    addTaskComment(taskId: string, message: string): Observable<CommentProcessModel> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.addTaskComment({message: message}, taskId))\n            .map(res => res)\n            .map((response: CommentProcessModel) => {\n                return new CommentProcessModel({id: response.id, message: response.message, created: response.created, createdBy: response.createdBy});\n            }).catch(err => this.handleError(err));\n\n    }\n\n    getTaskComments(taskId: string): Observable<CommentProcessModel[]> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.taskApi.getTaskComments(taskId))\n            .map(res => res)\n            .map((response: any) => {\n                let comments: CommentProcessModel[] = [];\n                response.data.forEach((comment: CommentProcessModel) => {\n                    let user = new UserProcessModel(comment.createdBy);\n                    comments.push(new CommentProcessModel({id: comment.id, message: comment.message, created: comment.created, createdBy: user}));\n                });\n                return comments;\n            }).catch(err => this.handleError(err));\n    }\n\n    getProcessInstanceComments(processInstanceId: string): Observable<CommentProcessModel[]> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.commentsApi.getProcessInstanceComments(processInstanceId))\n            .map(res => res)\n            .map((response: any) => {\n                let comments: CommentProcessModel[] = [];\n                response.data.forEach((comment: CommentProcessModel) => {\n                    let user = new UserProcessModel(comment.createdBy);\n                    comments.push(new CommentProcessModel({id: comment.id, message: comment.message, created: comment.created, createdBy: user}));\n                });\n                return comments;\n            }).catch(err => this.handleError(err));\n    }\n\n    addProcessInstanceComment(processInstanceId: string, message: string): Observable<CommentProcessModel> {\n        return Observable.fromPromise(\n            this.apiService.getInstance().activiti.commentsApi.addProcessInstanceComment({ message: message }, processInstanceId)\n        )\n            .map((response: CommentProcessModel) => {\n                return new CommentProcessModel({id: response.id, message: response.message, created: response.created, createdBy: response.createdBy});\n            }).catch(err => this.handleError(err));\n\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/comment-process.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommentRepresentation, LightUserRepresentation } from 'alfresco-js-api';\n\nexport class CommentProcessModel implements CommentRepresentation {\n    id: number;\n    message: string;\n    created: Date;\n    createdBy: LightUserRepresentation;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.message = obj.message;\n            this.created = obj.created;\n            this.createdBy = obj.createdBy;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/comment-process.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * This object represent the process service user.*\n */\n\nimport { LightUserRepresentation } from 'alfresco-js-api';\n\nexport class UserProcessModel implements LightUserRepresentation {\n    id?: number;\n    email?: string;\n    firstName?: string;\n    lastName?: string;\n    pictureId?: number = null;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id;\n            this.email = obj.email || null;\n            this.firstName = obj.firstName || null;\n            this.lastName = obj.lastName || null;\n            this.pictureId = obj.pictureId || null;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/user-process.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable()\nexport class ContentService {\n\n    private saveData: Function;\n\n    constructor(private sanitizer: DomSanitizer ) {\n        this.saveData = (function () {\n            let a = document.createElement('a');\n            document.body.appendChild(a);\n            a.style.display = 'none';\n\n            return function (data, format, fileName) {\n                let blob = null;\n\n                if (format === 'blob' || format === 'data') {\n                    blob = new Blob([data], { type: 'octet/stream' });\n                }\n\n                if (format === 'object' || format === 'json') {\n                    let json = JSON.stringify(data);\n                    blob = new Blob([json], { type: 'octet/stream' });\n                }\n\n                if (blob) {\n\n                    if (typeof window.navigator !== 'undefined' && window.navigator.msSaveOrOpenBlob) {\n                         navigator.msSaveOrOpenBlob(blob, fileName);\n                    }else {\n                        let url = window.URL.createObjectURL(blob);\n                        a.href = url;\n                        a.download = fileName;\n                        a.click();\n\n                        window.URL.revokeObjectURL(url);\n                    }\n                }\n            };\n        }());\n    }\n\n    /**\n     * Invokes content download for a Blob with a file name.\n     *\n     * @param {Blob} blob Content to download.\n     * @param {string} fileName Name of the resulting file.\n     *\n     * @memberOf ContentService\n     */\n    downloadBlob(blob: Blob, fileName: string): void {\n        this.saveData(blob, 'blob', fileName);\n    }\n\n    /**\n     * Invokes content download for a data array with a file name.\n     *\n     * @param {*} data Data to download.\n     * @param {string} fileName Name of the resulting file.\n     *\n     * @memberOf ContentService\n     */\n    downloadData(data: any, fileName: string): void {\n        this.saveData(data, 'data', fileName);\n    }\n\n    /**\n     * Invokes content download for a JSON object with a file name.\n     *\n     * @param {*} json JSON object to download.\n     * @param {any} fileName Name of the resulting file.\n     *\n     * @memberOf ContentService\n     */\n    downloadJSON(json: any, fileName): void {\n        this.saveData(json, 'json', fileName);\n    }\n\n    /**\n     * Creates a trusted object URL from the Blob.\n     * WARNING: calling this method with untrusted user data exposes your application to XSS security risks!\n     * @param {Blob} blob Data to wrap into object URL\n     * @returns {string} Object URL content.\n     *\n     * @memberOf ContentService\n     */\n    createTrustedUrl(blob: Blob): string {\n        let url = window.URL.createObjectURL(blob);\n        return <string> this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/content.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CookieService {\n\n    /**\n     * Retrieve cookie by key.\n     *\n     * @returns {string | null}\n     */\n    getItem(key: string): string | null {\n        const regexp = new RegExp('(?:' + key + '|;\\s*' + key + ')=(.*?)(?:;|$)', 'g');\n        const result = regexp.exec(document.cookie);\n        return (result === null) ? null : result[1];\n    }\n\n    /**\n     * Set a cookie.\n     * @param key\n     * @param data\n     * @param expiration\n     * @param path\n     *\n     * @returns {boolean}\n     */\n    setItem(key: string, data: string, expiration: Date | null, path: string | null): void {\n        document.cookie = `${key}=${data}` +\n            (expiration ? ';expires=' + expiration.toUTCString() : '') +\n            (path ? `;path=${path}` : ';path=/');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/cookie.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material';\n\n@Injectable()\nexport class NotificationService {\n\n    static DEFAULT_DURATION_MESSAGE: number = 5000;\n\n    constructor(public snackbar: MatSnackBar) {\n    }\n\n    public openSnackMessage(message: string, millisecondsDuration?: number): MatSnackBarRef<any> {\n        return this.snackbar.open(message, null, {\n            duration: millisecondsDuration || NotificationService.DEFAULT_DURATION_MESSAGE\n        });\n    }\n\n    public openSnackMessageAction(message: string, action: string, millisecondsDuration?: number): MatSnackBarRef<any> {\n        return this.snackbar.open(message, action, {\n            duration: millisecondsDuration || NotificationService.DEFAULT_DURATION_MESSAGE\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/notification.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { AppConfigService } from './app-config.service';\n\n@Injectable()\nexport class PageTitleService {\n\n    constructor(\n        private titleService: Title,\n        private appConfig: AppConfigService) {}\n\n    setTitle(value: string = '') {\n        const name = this.appConfig.get('application.name') || 'Alfresco ADF Application';\n        const title = value ? `${value} - ${name}` : `${name}`;\n\n        this.titleService.setTitle(title);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/page-title.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { RenditionEntry, RenditionPaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n/**\n * RenditionsService\n *\n * @returns {RenditionsService} .\n */\n@Injectable()\nexport class RenditionsService {\n\n    constructor(private apiService: AlfrescoApiService) {\n    }\n\n    isRenditionAvailable(nodeId: string, encoding: string): Observable<boolean> {\n        return Observable.create((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                (res) => {\n                    let isAvailable = true;\n                    if (res.entry.status.toString() === 'NOT_CREATED') {\n                        isAvailable = false;\n                    }\n                    observer.next(isAvailable);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    isConversionPossible(nodeId: string, encoding: string): Observable<boolean> {\n        return Observable.create((observer) => {\n            this.getRendition(nodeId, encoding).subscribe(\n                () => {\n                    observer.next(true);\n                    observer.complete();\n                },\n                () => {\n                    observer.next(false);\n                    observer.complete();\n                }\n            );\n        });\n    }\n\n    getRenditionUrl(nodeId: string, encoding: string): string {\n        return this.apiService.contentApi.getRenditionUrl(nodeId, 'pdf');\n    }\n\n    getRendition(nodeId: string, encoding: string): Observable<RenditionEntry> {\n        return Observable.fromPromise(this.apiService.renditionsApi.getRendition(nodeId, encoding));\n    }\n\n    getRenditionsListByNodeId(nodeId: string): Observable<RenditionPaging> {\n        return Observable.fromPromise(this.apiService.renditionsApi.getRenditions(nodeId));\n    }\n\n    createRendition(nodeId: string, encoding: string): Observable<{}> {\n        return Observable.fromPromise(this.apiService.renditionsApi.createRendition(nodeId, {id: encoding}));\n    }\n\n    convert(nodeId: string, encoding: string, pollingInterval: number = 1000) {\n        return this.createRendition(nodeId, encoding)\n            .concatMap(() => this.pollRendition(nodeId, encoding, pollingInterval));\n    }\n\n    private pollRendition(nodeId: string, encoding: string, interval: number = 1000) {\n        return Observable.interval(interval)\n            .switchMap(() => this.getRendition(nodeId, encoding))\n            .takeWhile((data) => {\n                return (data.entry.status.toString() !== 'CREATED');\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/renditions.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class StorageService {\n\n    private memoryStore: { [key: string]: any } = {};\n    private useLocalStorage: boolean = false;\n\n    constructor() {\n        this.useLocalStorage = this.storageAvailable('localStorage');\n    }\n\n    getItem(key: string): string | null {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key);\n        } else {\n            return this.memoryStore.hasOwnProperty(key) ? this.memoryStore[key] : null;\n        }\n    }\n\n    setItem(key: string, data: string) {\n        if (this.useLocalStorage) {\n            localStorage.setItem(key, data);\n        } else {\n            this.memoryStore[key] = data.toString();\n        }\n    }\n\n    clear() {\n        if (this.useLocalStorage) {\n            localStorage.clear();\n        } else {\n            this.memoryStore = {};\n        }\n    }\n\n    removeItem(key: string) {\n        if (this.useLocalStorage) {\n            localStorage.removeItem(key);\n        } else {\n            delete this.memoryStore[key];\n        }\n    }\n\n    hasItem(key: string): boolean {\n        if (this.useLocalStorage) {\n            return localStorage.getItem(key) ? true : false;\n        } else {\n            return this.memoryStore.hasOwnProperty(key);\n        }\n    }\n\n    private storageAvailable(type: string): boolean {\n        try {\n            let storage = window[type];\n            const key = '__storage_test__';\n            storage.setItem(key, key);\n            storage.removeItem(key, key);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/storage.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { AlfrescoContentService } from './alfresco-content.service';\n\ndeclare var require: any;\n\n@Injectable()\nexport class ThumbnailService {\n\n    DEFAULT_ICON: string = require('../assets/images/ft_ic_miscellaneous.svg');\n\n    mimeTypeIcons: any = {\n        'image/png': require('../assets/images/ft_ic_raster_image.svg'),\n        'image/jpeg': require('../assets/images/ft_ic_raster_image.svg'),\n        'image/gif': require('../assets/images/ft_ic_raster_image.svg'),\n        'application/pdf': require('../assets/images/ft_ic_pdf.svg'),\n        'application/vnd.ms-excel': require('../assets/images/ft_ic_ms_excel.svg'),\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': require('../assets/images/ft_ic_ms_excel.svg'),\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.template': require('../assets/images/ft_ic_ms_excel.svg'),\n        'application/msword': require('../assets/images/ft_ic_ms_word.svg'),\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document': require('../assets/images/ft_ic_ms_word.svg'),\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.template': require('../assets/images/ft_ic_ms_word.svg'),\n        'application/vnd.ms-powerpoint': require('../assets/images/ft_ic_ms_powerpoint.svg'),\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation': require('../assets/images/ft_ic_ms_powerpoint.svg'),\n        'application/vnd.openxmlformats-officedocument.presentationml.template': require('../assets/images/ft_ic_ms_powerpoint.svg'),\n        'application/vnd.openxmlformats-officedocument.presentationml.slideshow': require('../assets/images/ft_ic_ms_powerpoint.svg'),\n        'video/mp4': require('../assets/images/ft_ic_video.svg'),\n        'text/plain': require('../assets/images/ft_ic_document.svg'),\n        'application/x-javascript': require('../assets/images/ft_ic_document.svg'),\n        'application/json': require('../assets/images/ft_ic_document.svg'),\n        'image/svg+xml': require('../assets/images/ft_ic_vector_image.svg'),\n        'text/html': require('../assets/images/ft_ic_website.svg'),\n        'application/x-compressed': require('../assets/images/ft_ic_archive.svg'),\n        'application/x-zip-compressed': require('../assets/images/ft_ic_archive.svg'),\n        'application/zip': require('../assets/images/ft_ic_archive.svg'),\n        'application/vnd.apple.keynote': require('../assets/images/ft_ic_presentation.svg'),\n        'application/vnd.apple.pages': require('../assets/images/ft_ic_document.svg'),\n        'application/vnd.apple.numbers': require('../assets/images/ft_ic_spreadsheet.svg'),\n        'folder': require('../assets/images/ft_ic_folder.svg'),\n        'disable/folder': require('../assets/images/ft_ic_folder_disable.svg'),\n        'selected': require('../assets/images/ft_ic_selected.svg')\n    };\n\n    constructor(public contentService: AlfrescoContentService, matIconRegistry: MatIconRegistry, sanitizer: DomSanitizer) {\n        matIconRegistry.addSvgIcon('image/png',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_raster_image.svg')));\n        matIconRegistry.addSvgIcon('image/jpeg',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_raster_image.svg')));\n        matIconRegistry.addSvgIcon('image/gif',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_raster_image.svg')));\n        matIconRegistry.addSvgIcon('application/pdf',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_pdf.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.ms-excel',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_excel.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_excel.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_excel.svg')));\n        matIconRegistry.addSvgIcon('application/msword',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_word.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_word.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_word.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.ms-powerpoint',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_powerpoint.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.openxmlformats-officedocument.presentationml.presentation',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_powerpoint.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.openxmlformats-officedocument.presentationml.template',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_powerpoint.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_ms_powerpoint.svg')));\n        matIconRegistry.addSvgIcon('video/mp4',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_video.svg')));\n        matIconRegistry.addSvgIcon('text/plain',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_document.svg')));\n        matIconRegistry.addSvgIcon('application/x-javascript',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_document.svg')));\n        matIconRegistry.addSvgIcon('application/json',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_document.svg')));\n        matIconRegistry.addSvgIcon('image/svg+xml',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_vector_image.svg')));\n        matIconRegistry.addSvgIcon('text/html',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_website.svg')));\n        matIconRegistry.addSvgIcon('application/x-compressed',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_archive.svg')));\n        matIconRegistry.addSvgIcon('application/x-zip-compressed',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_archive.svg')));\n        matIconRegistry.addSvgIcon('application/zip',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_archive.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.apple.keynote',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_presentation.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.apple.pages',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_document.svg')));\n        matIconRegistry.addSvgIcon('application/vnd.apple.numbers',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_spreadsheet.svg')));\n        matIconRegistry.addSvgIcon('folder',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_folder.svg')));\n        matIconRegistry.addSvgIcon('disable/folder',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_folder_disable.svg')));\n        matIconRegistry.addSvgIcon('selected',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_selected.svg')));\n        matIconRegistry.addSvgIcon('default',\n            sanitizer.bypassSecurityTrustResourceUrl(require('../assets/images/ft_ic_miscellaneous.svg')));\n    }\n\n    /**\n     * Get thumbnail URL for the given document node.\n     * @param document Node to get URL for.\n     * @returns {string} URL address.\n     */\n    public getDocumentThumbnailUrl(document: any): string {\n        let thumbnail = this.contentService.getDocumentThumbnailUrl(document);\n        return thumbnail || this.DEFAULT_ICON;\n    }\n\n    /**\n     * Get mimeType SVG\n     * @param mimeType\n     * @returns {string} URL SVG address.\n     */\n    public getMimeTypeIcon(mimeType: string): string {\n        let icon = this.mimeTypeIcons[mimeType];\n        return (icon || this.DEFAULT_ICON);\n    }\n\n    /**\n     * Get default SVG\n     * @returns {string} URL SVG default.\n     */\n    public getDefaultMimeTypeIcon(): string {\n        return this.DEFAULT_ICON;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/thumbnail.service.ts","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_miscellaneous.e4862994d43932202b2a996180153e51.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_miscellaneous.svg\n// module id = 73\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_pdf.16544c01efcb040787005ead12b0bc3e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_pdf.svg\n// module id = 74\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_video.7c067349a7712caaee3957a5abd132c5.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_video.svg\n// module id = 75\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_vector_image.e1a2da09c969362955bdcec518b44ec3.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_vector_image.svg\n// module id = 76\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_website.188ff3afc07c9fb4f751ce4ccfcba147.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_website.svg\n// module id = 77\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_presentation.9290474661f7afba546d50b9fbed90f1.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_presentation.svg\n// module id = 78\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_spreadsheet.844b9d5f795485f82ce8e8c5a59a498e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_spreadsheet.svg\n// module id = 79\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_folder.1ece9230c256a6ebeeca193cb0fd860e.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_folder.svg\n// module id = 80\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_folder_disable.06441910956c575688822a09b0566784.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_folder_disable.svg\n// module id = 81\n// module chunks = 0","module.exports = __webpack_public_path__ + \"assets/images/ft_ic_selected.f1887fd6d28d8d93d5cc94f9bfb53de4.svg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/assets/images/ft_ic_selected.svg\n// module id = 82\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable } from 'rxjs/Rx';\nimport { ComponentTranslationModel } from '../models/component.model';\nimport { ObjectUtils } from '../utils/object-utils';\nimport { LogService } from './log.service';\n\n@Injectable()\nexport class AlfrescoTranslateLoader implements TranslateLoader {\n\n    private prefix: string = 'i18n';\n    private suffix: string = '.json';\n    private providers: ComponentTranslationModel[] = [];\n    private queue: string [][] = [];\n\n    constructor(private http: HttpClient,\n                private logService: LogService) {\n    }\n\n    registerProvider(name: string, path: string) {\n        let registered = this.providers.find(provider => provider.name === name);\n        if (registered) {\n            registered.path = path;\n        } else {\n            this.providers.push(new ComponentTranslationModel({ name: name, path: path }));\n        }\n    }\n\n    providerRegistered(name: string): boolean {\n        return this.providers.find(x => x.name === name) ? true : false;\n    }\n\n    getComponentToFetch(lang: string) {\n        let observableBatch = [];\n        if (!this.queue[lang]) {\n            this.queue[lang] = [];\n        }\n        this.providers.forEach((component) => {\n            if (!this.isComponentInQueue(lang, component.name)) {\n                this.queue[lang].push(component.name);\n\n                let currentObserv = Observable.create(observer => {\n                    this.http.get(`${component.path}/${this.prefix}/${lang}${this.suffix}`)\n                        .map((res: Response) => {\n                            component.json[lang] = res;\n                        }).subscribe((result) => {\n                        observer.next(result);\n                        observer.complete();\n                    }, () => {\n                        observer.next('');\n                        observer.complete();\n                    });\n                });\n\n                observableBatch.push(currentObserv);\n            }\n        });\n\n        return observableBatch;\n    }\n\n    init(lang: string) {\n        if (this.queue[lang] === undefined) {\n            this.queue[lang] = [];\n        }\n    }\n\n    isComponentInQueue(lang: string, name: string) {\n        return (this.queue[lang] || []).find(x => x === name) ? true : false;\n    }\n\n    getFullTranslationJSON(lang: string): any {\n        let result = {};\n\n        this.providers\n            .slice(0)\n            .sort((a, b) => {\n                if (a.name === 'app') {\n                    return 1;\n                }\n                if (b.name === 'app') {\n                    return -1;\n                }\n                return a.name.localeCompare(b.name);\n            })\n            .forEach(model => {\n                if (model.json && model.json[lang]) {\n                    result = ObjectUtils.merge(result, model.json[lang]);\n                }\n            });\n\n        return result;\n    }\n\n    getTranslation(lang: string): Observable<any> {\n        let observableBatch = this.getComponentToFetch(lang);\n\n        return Observable.create(observer => {\n            if (observableBatch.length > 0) {\n                Observable.forkJoin(observableBatch).subscribe(\n                    () => {\n                        let fullTranslation = this.getFullTranslationJSON(lang);\n                        if (fullTranslation) {\n                            observer.next(fullTranslation);\n                        }\n                        observer.complete();\n                    },\n                    (err: any) => {\n                        this.logService.error(err);\n                    });\n            } else {\n                let fullTranslation = this.getFullTranslationJSON(lang);\n                if (fullTranslation) {\n                    observer.next(fullTranslation);\n                }\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/translate-loader.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { EventEmitter, Injectable } from '@angular/core';\nimport * as minimatch from 'minimatch';\nimport { Subject } from 'rxjs/Rx';\nimport { FileUploadCompleteEvent, FileUploadDeleteEvent, FileUploadErrorEvent, FileUploadEvent } from '../events/file.event';\nimport { FileModel, FileUploadProgress, FileUploadStatus } from '../models/file.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AppConfigService } from './app-config.service';\n\n@Injectable()\nexport class UploadService {\n\n    private queue: FileModel[] = [];\n    private cache: { [key: string]: any } = {};\n    private totalComplete: number = 0;\n    private totalAborted: number = 0;\n    private totalError: number = 0;\n    private activeTask: Promise<any> = null;\n    private excludedFileList: String[] = [];\n\n    queueChanged: Subject<FileModel[]> = new Subject<FileModel[]>();\n    fileUpload: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadStarting: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadCancelled: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadProgress: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadAborted: Subject<FileUploadEvent> = new Subject<FileUploadEvent>();\n    fileUploadError: Subject<FileUploadErrorEvent> = new Subject<FileUploadErrorEvent>();\n    fileUploadComplete: Subject<FileUploadCompleteEvent> = new Subject<FileUploadCompleteEvent>();\n    fileUploadDeleted: Subject<FileUploadDeleteEvent> = new Subject<FileUploadDeleteEvent>();\n    fileDeleted: Subject<string> = new Subject<string>();\n\n    constructor(private apiService: AlfrescoApiService, private appConfigService: AppConfigService) {\n        this.excludedFileList = <String[]> this.appConfigService.get('files.excluded');\n    }\n\n    /**\n     * Checks whether the service is uploading a file.\n     *\n     * @returns {boolean}\n     *\n     * @memberof UploadService\n     */\n    isUploading(): boolean {\n        return this.activeTask ? true : false;\n    }\n\n    /**\n     * Returns the file Queue\n     *\n     * @return {FileModel[]} - files in the upload queue.\n     */\n    getQueue(): FileModel[] {\n        return this.queue;\n    }\n\n    /**\n     * Add files to the uploading queue to be uploaded.\n     *\n     * Examples:\n     *  addToQueue(file); // pass one file\n     *  addToQueue(file1, file2, file3); // pass multiple files\n     *  addToQueue(...[file1, file2, file3]); // pass an array of files\n     */\n    addToQueue(...files: FileModel[]): FileModel[] {\n        const allowedFiles = files.filter(f => this.filterElement(f));\n        this.queue = this.queue.concat(allowedFiles);\n        this.queueChanged.next(this.queue);\n        return allowedFiles;\n    }\n\n    private filterElement(file: FileModel) {\n        let isAllowed = true;\n        if (this.excludedFileList) {\n            isAllowed = this.excludedFileList.filter(expr => minimatch(file.name, expr)).length === 0;\n        }\n        return isAllowed;\n    }\n\n    /**\n     * Pick all the files in the queue that are not been uploaded yet and upload it into the directory folder.\n     *\n     * @param {EventEmitter<any>} emitter @deprecated emitter to invoke on file status change\n     *\n     * @memberof UploadService\n     */\n    uploadFilesInTheQueue(emitter: EventEmitter<any>): void {\n        if (!this.activeTask) {\n            let file = this.queue.find(f => f.status === FileUploadStatus.Pending);\n            if (file) {\n                this.onUploadStarting(file);\n\n                const promise = this.beginUpload(file, emitter);\n                this.activeTask = promise;\n                this.cache[file.id] = promise;\n\n                let next = () => {\n                    this.activeTask = null;\n                    setTimeout(() => this.uploadFilesInTheQueue(emitter), 100);\n                };\n\n                promise.next = next;\n\n                promise.then(\n                    () => next(),\n                    () => next()\n                );\n            }\n        }\n    }\n\n    cancelUpload(...files: FileModel[]) {\n        files.forEach(file => {\n            const promise = this.cache[file.id];\n\n            if (promise) {\n                promise.abort();\n                delete this.cache[file.id];\n            } else {\n                const performAction = this.getAction(file);\n                performAction();\n            }\n        });\n    }\n\n    clearQueue() {\n        this.queue = [];\n        this.totalComplete = 0;\n        this.totalAborted = 0;\n        this.totalError = 0;\n    }\n\n    getUploadPromise(file: FileModel) {\n        let opts: any = {\n                renditions: 'doclib'\n            };\n\n        if (file.options.newVersion === true) {\n            opts.overwrite = true;\n            opts.majorVersion = true;\n        } else {\n            opts.autoRename = true;\n        }\n        return this.apiService.getInstance().upload.uploadFile(\n            file.file,\n            file.options.path,\n            file.options.parentId,\n            null,\n            opts\n        );\n    }\n\n    private beginUpload(file: FileModel, /* @deprecated */emitter: EventEmitter<any>): any {\n\n        let promise = this.getUploadPromise(file);\n\n        promise.on('progress', (progress: FileUploadProgress) => {\n            this.onUploadProgress(file, progress);\n        })\n        .on('abort', () => {\n            this.onUploadAborted(file);\n            emitter.emit({ value: 'File aborted' });\n        })\n        .on('error', err => {\n            this.onUploadError(file, err);\n            emitter.emit({ value: 'Error file uploaded' });\n        })\n        .on('success', data => {\n            this.onUploadComplete(file, data);\n            emitter.emit({ value: data });\n        })\n        .catch(err => {\n            throw err;\n        });\n\n        return promise;\n    }\n\n    private onUploadStarting(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Starting;\n            const event = new FileUploadEvent(file, FileUploadStatus.Starting);\n            this.fileUpload.next(event);\n            this.fileUploadStarting.next(event);\n        }\n    }\n\n    private onUploadProgress(file: FileModel, progress: FileUploadProgress): void {\n        if (file) {\n            file.progress = progress;\n            file.status = FileUploadStatus.Progress;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Progress);\n            this.fileUpload.next(event);\n            this.fileUploadProgress.next(event);\n        }\n    }\n\n    private onUploadError(file: FileModel, error: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Error;\n            this.totalError++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadErrorEvent(file, error, this.totalError);\n            this.fileUpload.next(event);\n            this.fileUploadError.next(event);\n        }\n    }\n\n    private onUploadComplete(file: FileModel, data: any): void {\n        if (file) {\n            file.status = FileUploadStatus.Complete;\n            file.data = data;\n            this.totalComplete++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadCompleteEvent(file, this.totalComplete, data, this.totalAborted);\n            this.fileUpload.next(event);\n            this.fileUploadComplete.next(event);\n        }\n    }\n\n    private onUploadAborted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Aborted;\n            this.totalAborted++;\n\n            const promise = this.cache[file.id];\n            if (promise) {\n                delete this.cache[file.id];\n            }\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Aborted);\n            this.fileUpload.next(event);\n            this.fileUploadAborted.next(event);\n            promise.next();\n        }\n    }\n\n    private onUploadCancelled(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Cancelled;\n\n            const event = new FileUploadEvent(file, FileUploadStatus.Cancelled);\n            this.fileUpload.next(event);\n            this.fileUploadCancelled.next(event);\n        }\n    }\n\n    private onUploadDeleted(file: FileModel): void {\n        if (file) {\n            file.status = FileUploadStatus.Deleted;\n            this.totalComplete--;\n\n            const event = new FileUploadDeleteEvent(file, this.totalComplete);\n            this.fileUpload.next(event);\n            this.fileUploadDeleted.next(event);\n        }\n    }\n\n    private getAction(file) {\n        const actions = {\n            [FileUploadStatus.Pending]: () => this.onUploadCancelled(file),\n            [FileUploadStatus.Deleted]: () => this.onUploadDeleted(file),\n            [FileUploadStatus.Error]: () => this.onUploadError(file, null)\n        };\n\n        return actions[file.status];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/upload.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FileModel, FileUploadStatus } from '../models/file.model';\n\nexport class FileUploadEvent {\n\n    constructor(\n        public readonly file: FileModel,\n        public readonly status: FileUploadStatus = FileUploadStatus.Pending,\n        public readonly error: any = null) {\n    }\n\n}\n\nexport class FileUploadCompleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0, public data?: any, public totalAborted: number = 0) {\n        super(file, FileUploadStatus.Complete);\n    }\n\n}\n\nexport class FileUploadDeleteEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public totalComplete: number = 0) {\n        super(file, FileUploadStatus.Deleted);\n    }\n\n}\n\nexport class FileUploadErrorEvent extends FileUploadEvent {\n\n    constructor(file: FileModel, public error: any, public totalError: number = 0) {\n        super(file, FileUploadStatus.Error);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/events/file.event.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, Input, Renderer } from '@angular/core';\nimport { HighlightTransformService, HightlightTransformResult } from '../services/highlight-transform.service';\n\n@Directive({\n    selector: '[adf-highlight]'\n})\nexport class HighlightDirective {\n\n    @Input('adf-highlight-selector')\n    selector: string = '';\n\n    @Input('adf-highlight')\n    search: string = '';\n\n    @Input('adf-highlight-class')\n    classToApply: string = 'adf-highlight';\n\n    constructor(\n        private el: ElementRef,\n        private renderer: Renderer,\n        private highlightTransformService: HighlightTransformService) { }\n\n    public highlight(search = this.search, selector = this.selector, classToApply = this.classToApply) {\n        if (search && selector) {\n            const elements = this.el.nativeElement.querySelectorAll(selector);\n\n            elements.forEach((element) => {\n                const result: HightlightTransformResult = this.highlightTransformService.highlight(element.innerHTML, search, classToApply);\n                if (result.changed) {\n                    this.renderer.setElementProperty(element, 'innerHTML', result.text);\n                }\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/highlight.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { FavoriteBody, MinimalNodeEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\n\n@Directive({\n    selector: '[adf-node-favorite]',\n    exportAs: 'adfFavorite'\n})\nexport class NodeFavoriteDirective implements OnChanges {\n    private favorites: any[] = [];\n\n    @Input('adf-node-favorite')\n    selection: MinimalNodeEntity[] = [];\n\n    @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.toggleFavorite();\n    }\n\n    constructor(private alfrescoApiService: AlfrescoApiService) {}\n\n    ngOnChanges(changes) {\n        if (!changes.selection.currentValue.length) {\n            this.favorites = [];\n\n            return;\n        }\n\n        this.markFavoritesNodes(changes.selection.currentValue);\n    }\n\n    toggleFavorite() {\n        if (!this.favorites.length) {\n            return;\n        }\n\n        const every = this.favorites.every((selected) => selected.entry.isFavorite);\n\n        if (every) {\n            const batch = this.favorites.map((selected) => {\n                // shared files have nodeId\n                const id = selected.entry.nodeId || selected.entry.id;\n\n                return Observable.fromPromise(this.alfrescoApiService.getInstance().core.favoritesApi.removeFavoriteSite('-me-', id));\n            });\n\n            Observable.forkJoin(batch).subscribe(() => {\n                this.favorites.map(selected => selected.entry.isFavorite = false);\n                this.toggle.emit();\n            });\n        }\n\n        if (!every) {\n            const notFavorite = this.favorites.filter((node) => !node.entry.isFavorite);\n            const body: FavoriteBody[] = notFavorite.map((node) => this.createFavoriteBody(node));\n\n            Observable.fromPromise(this.alfrescoApiService.getInstance().core.favoritesApi.addFavorite('-me-', <any> body))\n                .subscribe(() => {\n                    notFavorite.map(selected => selected.entry.isFavorite = true);\n                    this.toggle.emit();\n                });\n        }\n    }\n\n    markFavoritesNodes(selection: MinimalNodeEntity[]) {\n        if (selection.length <= this.favorites.length) {\n            const newFavorites = this.reduce(this.favorites, selection);\n            this.favorites = newFavorites;\n        }\n\n        const result = this.diff(selection, this.favorites);\n        const batch = this.getProcessBatch(result);\n\n        Observable.forkJoin(batch).subscribe((data) => this.favorites.push(...data));\n    }\n\n    hasFavorites(): boolean {\n        if (this.favorites && !this.favorites.length) {\n            return false;\n        }\n\n        return this.favorites.every((selected) => selected.entry.isFavorite);\n    }\n\n    private getProcessBatch(selection): any[] {\n        return selection.map((selected: MinimalNodeEntity) => this.getFavorite(selected));\n    }\n\n    private getFavorite(selected: MinimalNodeEntity): Observable<any> {\n        const { name, isFile, isFolder } = selected.entry;\n        // shared files have nodeId\n        const id = (<any> selected).entry.nodeId || selected.entry.id;\n\n        const promise =  this.alfrescoApiService.getInstance()\n            .core.favoritesApi.getFavorite('-me-', id);\n\n        return Observable.from(promise)\n            .map(() => ({\n                entry: {\n                    id,\n                    isFolder,\n                    isFile,\n                    name,\n                    isFavorite: true\n                }\n            }))\n            .catch(() => {\n                return Observable.of({\n                    entry: {\n                        id,\n                        isFolder,\n                        isFile,\n                        name,\n                        isFavorite: false\n                    }\n                });\n            });\n    }\n\n    private createFavoriteBody(node): FavoriteBody {\n        const type = this.getNodeType(node);\n        // shared files have nodeId\n        const id = node.entry.nodeId || node.entry.id;\n\n        return {\n            target: {\n                [type]: {\n                    guid: id\n                }\n            }\n        };\n    }\n\n    private getNodeType(node): string {\n        // shared could only be files\n        if (!node.entry.isFile && !node.entry.isFolder) {\n            return 'file';\n        }\n\n        return node.entry.isFile ? 'file' : 'folder';\n    }\n\n    private diff(list, patch): any[] {\n        const ids = patch.map(item => item.entry.id);\n\n        return list.filter(item => ids.includes(item.entry.id) ? null : item);\n    }\n\n    private reduce(patch, comparator): any[] {\n        const ids = comparator.map(item => item.entry.id);\n\n        return patch.filter(item => ids.includes(item.entry.id) ? item : null);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/node-favorite.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { AppDefinitionRepresentation } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\n\n@Injectable()\nexport class AppsProcessService {\n\n    constructor(private apiService: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    getDeployedApplications(): Observable<AppDefinitionRepresentation[]> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .map((response: any) => {\n                return response.data;\n            })\n            .catch(err => this.handleError(err));\n    }\n\n    getDeployedApplicationsByName(name: string): Observable<AppDefinitionRepresentation> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .map((response: any) => {\n                return response.data.find(app => app.name === name);\n            })\n            .catch(err => this.handleError(err));\n    }\n\n    getApplicationDetailsById(appId: number): Observable<AppDefinitionRepresentation> {\n        return Observable.fromPromise(this.apiService.getInstance().activiti.appsApi.getAppDefinitions())\n            .map((response: any) => {\n                return response.data.find(app => app.id === appId);\n            })\n            .catch(err => this.handleError(err));\n    }\n\n    private handleError(error: any) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/apps-process.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\n\nimport { NodePaging } from 'alfresco-js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\n@Injectable()\nexport class DeletedNodesApiService {\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get nodesApi() {\n       return this.apiService.getInstance().core.nodesApi;\n    }\n\n    getDeletedNodes(options?: Object): Observable<NodePaging> {\n        const { nodesApi, handleError } = this;\n        const defaultOptions = {\n            include: [ 'path', 'properties' ],\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = nodesApi.getDeletedNodes(queryOptions);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    private handleError(error: any): Observable<any> {\n        return Observable.of(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/deleted-nodes-api.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { BpmProductVersionModel, EcmProductVersionModel } from '../models/product-version.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable()\nexport class DiscoveryApiService {\n\n    constructor(private apiService: AlfrescoApiService) { }\n\n    public getEcmProductInfo() {\n        return Observable.fromPromise(\n            this.apiService.getInstance().discovery.discoveryApi.getRepositoryInformation())\n            .map(res => new EcmProductVersionModel(res))\n            .catch(this.handleError);\n    }\n\n    public getBpmProductInfo() {\n        return Observable.fromPromise(\n            this.apiService.getInstance().activiti.aboutApi.getAppVersion())\n            .map(res => new BpmProductVersionModel(res))\n            .catch(this.handleError);\n    }\n\n    private handleError(error): Observable<any> {\n        return Observable.throw(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/discovery-api.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class BpmProductVersionModel {\n    edition: string;\n    majorVersion: string;\n    revisionVersion: string;\n    minorVersion: string;\n    type: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.edition = obj.edition || null;\n            this.majorVersion = obj.majorVersion || null;\n            this.revisionVersion = obj.revisionVersion || null;\n            this.minorVersion = obj.minorVersion || null;\n            this.type = obj.type || null;\n        }\n    }\n}\n\nexport class EcmProductVersionModel {\n    edition: string;\n    version: VersionModel;\n    license: LicenseModel;\n    status: VersionStatusModel;\n    modules: VersionModuleModel[] = [];\n\n    constructor(obj?: any) {\n        if (obj && obj.entry && obj.entry.repository) {\n            this.edition = obj.entry.repository.edition || null;\n            this.version = new VersionModel(obj.entry.repository.version);\n            this.license = new LicenseModel(obj.entry.repository.license);\n            this.status = new VersionStatusModel(obj.entry.repository.status);\n            if (obj.entry.repository.modules) {\n                obj.entry.repository.modules.forEach((module) => {\n                    this.modules.push(new VersionModuleModel(module));\n                });\n            }\n        }\n    }\n\n}\n\nexport class VersionModel {\n    major: string;\n    minor: string;\n    patch: string;\n    hotfix: string;\n    schema: number;\n    label: string;\n    display: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.major = obj.major || null;\n            this.minor = obj.minor || null;\n            this.patch = obj.patch || null;\n            this.hotfix = obj.hotfix || null;\n            this.schema = obj.schema || null;\n            this.label = obj.label || null;\n            this.display = obj.display || null;\n        }\n    }\n}\n\nexport class LicenseModel {\n    issuedAt: string;\n    expiresAt: string;\n    remainingDays: number;\n    holder: string;\n    mode: string;\n    isClusterEnabled: boolean;\n    isCryptodocEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.issuedAt = obj.issuedAt || null;\n            this.expiresAt = obj.expiresAt || null;\n            this.remainingDays = obj.remainingDays || null;\n            this.holder = obj.holder || null;\n            this.mode = obj.mode || null;\n            this.isClusterEnabled = obj.isClusterEnabled ? true : false;\n            this.isCryptodocEnabled = obj.isCryptodocEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionStatusModel {\n    isReadOnly: boolean;\n    isAuditEnabled: boolean;\n    isQuickShareEnabled: boolean;\n    isThumbnailGenerationEnabled: boolean;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.isReadOnly = obj.isReadOnly ? true : false;\n            this.isAuditEnabled = obj.isAuditEnabled ? true : false;\n            this.isQuickShareEnabled = obj.isQuickShareEnabled ? true : false;\n            this.isThumbnailGenerationEnabled = obj.isThumbnailGenerationEnabled ? true : false;\n        }\n    }\n}\n\nexport class VersionModuleModel {\n    id: string;\n    title: string;\n    description: string;\n    version: string;\n    installDate: string;\n    installState: string;\n    versionMin: string;\n    versionMax: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.title = obj.title || null;\n            this.description = obj.description || null;\n            this.version = obj.version || null;\n            this.installDate = obj.installDate || null;\n            this.installState = obj.installState || null;\n            this.versionMin = obj.versionMin || null;\n            this.versionMax = obj.versionMax || null;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/product-version.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\n@Injectable()\nexport class FavoritesApiService {\n    static remapFavoritesData(data: any = {}): NodePaging {\n        const list = (data.list || {});\n        const pagination = (list.pagination || {});\n        const entries: any[] = FavoritesApiService\n            .remapFavoriteEntries(list.entries || []);\n\n        return <NodePaging> {\n            list: { entries, pagination }\n        };\n    }\n\n    static remapEntry({ entry }: any): any {\n        entry.properties = {\n            'cm:title': entry.title,\n            'cm:description': entry.description\n        };\n\n        return { entry };\n    }\n\n    static remapFavoriteEntries(entries: any[]) {\n        return entries\n            .map(({ entry: { target }}: any) => ({\n                entry: target.file || target.folder\n            }))\n            .filter(({ entry }) => (!!entry))\n            .map(FavoritesApiService.remapEntry);\n    }\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService\n    ) {}\n\n    private get favoritesApi() {\n       return this.apiService.getInstance().core.favoritesApi;\n    }\n\n    getFavorites(personId: string, options?: any): Observable<NodePaging> {\n        const { favoritesApi, handleError } = this;\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            where: '(EXISTS(target/file) OR EXISTS(target/folder))',\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaultOptions, options);\n        const promise = favoritesApi\n            .getFavorites(personId, queryOptions)\n            .then(FavoritesApiService.remapFavoritesData);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    private handleError(error): Observable<any> {\n        return Observable.of(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/favorites-api.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity, NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\n@Injectable()\nexport class NodesApiService {\n\n    constructor(\n        private api: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get nodesApi() {\n        return this.api.getInstance().core.nodesApi;\n    }\n\n    private getEntryFromEntity(entity: MinimalNodeEntity) {\n        return entity.entry;\n    }\n\n    getNode(nodeId: string, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const { nodesApi, handleError, getEntryFromEntity } = this;\n        const defaults = {\n            include: [ 'path', 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = nodesApi\n            .getNode(nodeId, queryOptions)\n            .then(getEntryFromEntity);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    getNodeChildren(nodeId: string, options: any = {}): Observable<NodePaging> {\n        const { nodesApi, handleError } = this;\n        const defaults = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'path', 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign(defaults, options);\n        const promise = nodesApi\n            .getNodeChildren(nodeId, queryOptions);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    createNode(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const { nodesApi, handleError, getEntryFromEntity } = this;\n        const promise = nodesApi\n            .addNode(parentNodeId, nodeBody, options)\n            .then(getEntryFromEntity);\n\n        return Observable.fromPromise(promise).catch(handleError);\n    }\n\n    createFolder(parentNodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const body = Object.assign({ nodeType: 'cm:folder' }, nodeBody);\n        return this.createNode(parentNodeId, body, options);\n    }\n\n    updateNode(nodeId: string, nodeBody: any, options: any = {}): Observable<MinimalNodeEntryEntity> {\n        const { nodesApi, handleError, getEntryFromEntity } = this;\n        const promise = nodesApi\n            .updateNode(nodeId, nodeBody, options)\n            .then(getEntryFromEntity);\n\n        return Observable.fromPromise(promise).catch(handleError);\n    }\n\n    deleteNode(nodeId: string, options: any = {}): Observable<void> {\n        const { nodesApi, handleError } = this;\n        const promise = nodesApi\n            .deleteNode(nodeId, options);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    restoreNode(nodeId: string): Observable<MinimalNodeEntryEntity> {\n        const { nodesApi, handleError, getEntryFromEntity } = this;\n        const promise = nodesApi\n            .restoreNode(nodeId)\n            .then(getEntryFromEntity);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    handleError(error: any): Observable<any> {\n        return Observable.throw(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/nodes-api.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable()\nexport class PeopleContentService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get peopleApi() {\n       return this.apiService.getInstance().core.peopleApi;\n    }\n\n    getPerson(personId: string): Observable<any> {\n        const { peopleApi, handleError } = this;\n        const promise = peopleApi.getPerson(personId);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    getCurrentPerson(): Observable<any> {\n        return this.getPerson('-me-');\n    }\n\n    private handleError(error): Observable<any> {\n        return Observable.of(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/people-content.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { UserProcessModel } from '../models/user-process.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { LogService } from './log.service';\n\n@Injectable()\nexport class PeopleProcessService {\n\n    constructor(private alfrescoJsApi: AlfrescoApiService,\n                private logService: LogService) {\n    }\n\n    getWorkflowUsers(taskId?: string, searchWord?: string): Observable<UserProcessModel[]> {\n        let option = { excludeTaskId: taskId, filter: searchWord };\n        return Observable.fromPromise(this.getWorkflowUserApi(option))\n            .map((response: any) => <UserProcessModel[]> response.data || [])\n            .catch(err => this.handleError(err));\n    }\n\n    getUserImage(user: UserProcessModel): string {\n        return this.getUserProfileImageApi(user.id);\n    }\n\n    involveUserWithTask(taskId: string, idToInvolve: string): Observable<UserProcessModel[]> {\n        let node = {userId: idToInvolve};\n        return Observable.fromPromise(this.involveUserToTaskApi(taskId, node))\n            .catch(err => this.handleError(err));\n    }\n\n    removeInvolvedUser(taskId: string, idToRemove: string): Observable<UserProcessModel[]> {\n        let node = {userId: idToRemove};\n        return Observable.fromPromise(this.removeInvolvedUserFromTaskApi(taskId, node))\n            .catch(err => this.handleError(err));\n    }\n\n    private getWorkflowUserApi(options: any) {\n        return this.alfrescoJsApi.getInstance().activiti.usersWorkflowApi.getUsers(options);\n    }\n\n    private involveUserToTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.involveUser(taskId, node);\n    }\n\n    private removeInvolvedUserFromTaskApi(taskId: string, node: any) {\n        return this.alfrescoJsApi.getInstance().activiti.taskActionsApi.removeInvolvedUser(taskId, node);\n    }\n\n    private getUserProfileImageApi(userId: number) {\n        return this.alfrescoJsApi.getInstance().activiti.userApi.getUserProfilePictureUrl(userId);\n    }\n\n    /**\n     * Throw the error\n     * @param error\n     * @returns {ErrorObservable}\n     */\n    private handleError(error: Response) {\n        this.logService.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/people-process.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Rx';\n\nimport { NodePaging } from 'alfresco-js-api';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable()\nexport class SearchApiService {\n\n    constructor(private apiService: AlfrescoApiService) {}\n\n    private get searchApi() {\n       return this.apiService.getInstance().search.searchApi;\n    }\n\n    search(query: any): Observable<NodePaging> {\n        const { searchApi, handleError } = this;\n        const searchQuery = Object.assign(query);\n        const promise = searchApi.search(searchQuery);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    private handleError(error): Observable<any> {\n        return Observable.of(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/search-api.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { AuthenticationService } from './authentication.service';\n\n/**\n * Internal service used by Document List component.\n */\n@Injectable()\nexport class SearchService {\n\n    constructor(public authService: AuthenticationService,\n                private apiService: AlfrescoApiService) {\n    }\n\n    /**\n     * Execute a search against the repository\n     *\n     * @param term Search term\n     * @param options Additional options passed to the search\n     * @returns {Observable<NodePaging>} Search results\n     */\n    getNodeQueryResults(term: string, options?: SearchOptions): Observable<NodePaging> {\n        return Observable.fromPromise(this.getQueryNodesPromise(term, options))\n            .map(res => <NodePaging> res)\n            .catch(err => this.handleError(err));\n    }\n\n    getQueryNodesPromise(term: string, opts: SearchOptions): Promise<NodePaging> {\n        return this.apiService.getInstance().core.queriesApi.findNodes(term, opts);\n    }\n\n    private handleError(error: any): Observable<any> {\n        return Observable.throw(error || 'Server error');\n    }\n}\n\nexport interface SearchOptions {\n    skipCount?: number;\n    maxItems?: number;\n    rootNodeId?: string;\n    nodeType?: string;\n    include?: string[];\n    orderBy?: string;\n    fields?: string[];\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/search.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NodePaging } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from './alfresco-api.service';\nimport { UserPreferencesService } from './user-preferences.service';\n\n@Injectable()\nexport class SharedLinksApiService {\n\n    constructor(\n        private apiService: AlfrescoApiService,\n        private preferences: UserPreferencesService) {}\n\n    private get sharedLinksApi() {\n       return this.apiService.getInstance().core.sharedlinksApi;\n    }\n\n    getSharedLinks(options: any = {}): Observable<NodePaging> {\n        const { sharedLinksApi, handleError } = this;\n        const defaultOptions = {\n            maxItems: this.preferences.paginationSize,\n            skipCount: 0,\n            include: [ 'properties', 'allowableOperations' ]\n        };\n        const queryOptions = Object.assign({}, defaultOptions, options);\n        const promise = sharedLinksApi\n            .findSharedLinks(queryOptions);\n\n        return Observable\n            .fromPromise(promise)\n            .catch(handleError);\n    }\n\n    private handleError(error: any): Observable<any> {\n        return Observable.of(error);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/shared-links-api.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Response } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { SiteModel } from '../models/site.model';\nimport { AlfrescoApiService } from './alfresco-api.service';\n\n@Injectable()\nexport class SitesApiService {\n\n    constructor(\n        private apiService: AlfrescoApiService) { }\n\n    getSites(opts: any = {}): any {\n        const defaultOptions = {\n            skipCount: 0,\n            include: ['properties']\n        };\n        const queryOptions = Object.assign({}, defaultOptions, opts);\n        return Observable.fromPromise(this.apiService.getInstance().core.sitesApi.getSites(queryOptions))\n            .map((res) => this.convertToModel(res))\n            .catch(this.handleError);\n    }\n\n    getSite(siteId: string, opts?: any): any {\n        return Observable.fromPromise(this.apiService.getInstance().core.sitesApi.getSite(siteId, opts))\n            .map((res: any) => new SiteModel(res))\n            .catch(this.handleError);\n    }\n\n    deleteSite(siteId: string, permanentFlag: boolean = true): any {\n        let options: any = {};\n        options.permanent = permanentFlag;\n        return Observable.fromPromise(this.apiService.getInstance().core.sitesApi.deleteSite(siteId, options)\n            .catch(this.handleError));\n    }\n\n    getSiteContent(siteId: string): Observable<any> {\n        return this.getSite(siteId, { relations: ['containers'] });\n    }\n\n    getSiteMembers(siteId: string): Observable<any> {\n        return this.getSite(siteId, { relations: ['members'] });\n    }\n\n    private handleError(error: Response): any {\n        console.error(error);\n        return Observable.throw(error || 'Server error');\n    }\n\n    private convertToModel(response: any) {\n        let convertedList: SiteModel[] = [];\n        if (response &&\n            response.list &&\n            response.list.entries &&\n            response.list.entries.length > 0) {\n            response.list.entries.forEach((element: any) => {\n                element.pagination = response.list.pagination;\n                convertedList.push(new SiteModel(element));\n            });\n        }\n        return convertedList;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/services/sites-api.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pagination } from 'alfresco-js-api';\n\nexport class SiteModel {\n    role: string;\n    visibility: string;\n    guid: string;\n    description: string;\n    id: string;\n    preset: string;\n    title: string;\n    contents: SiteContentsModel[] = [];\n    members: SiteMembersModel[] = [];\n    pagination: Pagination;\n\n    constructor(obj?: any) {\n        if (obj && obj.entry) {\n            this.role = obj.entry.role || null;\n            this.visibility = obj.entry.visibility || null;\n            this.guid = obj.entry.guid || null;\n            this.description = obj.entry.description || null;\n            this.id = obj.entry.id || null;\n            this.preset = obj.entry.preset;\n            this.title = obj.entry.title;\n            this.pagination = obj.pagination || null;\n\n            if (obj.relations && obj.relations.containers) {\n                obj.relations.containers.list.entries.forEach((content) => {\n                    this.contents.push(new SiteContentsModel(content.entry));\n                });\n            }\n\n            if (obj.relations && obj.relations.members) {\n                obj.relations.members.list.entries.forEach((member) => {\n                    this.members.push(new SiteMembersModel(member.entry));\n                });\n            }\n        }\n    }\n\n}\n\nexport class SiteContentsModel {\n    id: string;\n    folderId: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.id = obj.id || null;\n            this.folderId = obj.folderId || null;\n        }\n    }\n}\n\nexport class SiteMembersModel {\n    role: string;\n    firstName: string;\n    emailNotificationsEnabled: boolean = false;\n    company: any;\n    id: string;\n    enable: boolean = false;\n    email: string;\n\n    constructor(obj?: any) {\n        if (obj) {\n            this.role = obj.role;\n            this.firstName = obj.firstName || null;\n            this.emailNotificationsEnabled = obj.emailNotificationsEnabled;\n            this.company = obj.company || null;\n            this.id = obj.id || null;\n            this.enable = obj.enable;\n            this.email = obj.email;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/site.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n /* tslint:disable:component-selector  */\n\nimport { Component, ContentChildren, QueryList } from '@angular/core';\nimport { DataColumnComponent } from './data-column.component';\n\n@Component({\n    selector: 'data-columns',\n    template: ''\n})\nexport class DataColumnListComponent {\n\n    @ContentChildren(DataColumnComponent) columns: QueryList<DataColumnComponent>;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/data-column/data-column-list.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ContentChildren, EventEmitter, Input, Output, QueryList, TemplateRef, ViewChild, ViewEncapsulation } from '@angular/core';\n@Component({\n    selector: 'adf-info-drawer-tab',\n    template: '<ng-template><ng-content></ng-content></ng-template>'\n})\nexport class InfoDrawerTabComponent {\n    @Input('label') label: string = 'Main tab';\n    @ViewChild(TemplateRef) content: TemplateRef<any>;\n}\n\n@Component({\n    selector: 'adf-info-drawer',\n    template: require('./info-drawer.component.html'),\n    styles: [require('./info-drawer.component.scss')],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer' }\n})\nexport class InfoDrawerComponent {\n    @Input()\n    title: string|null = null;\n\n    @Output()\n    currentTab: EventEmitter<any> = new EventEmitter<any>();\n\n    @ContentChildren(InfoDrawerTabComponent)\n    contentBlocks: QueryList<InfoDrawerTabComponent>;\n\n    showTabLayout(): boolean {\n        return this.contentBlocks.length > 0;\n    }\n\n    onTabChange(event: any) {\n        const tab = event.tab;\n        this.currentTab.emit(tab.textLabel);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\nimport { AlfrescoContentService } from './../services/alfresco-content.service';\n\nexport interface NodePermissionSubject {\n    disabled: boolean;\n}\n\n@Directive({\n    selector: '[adf-node-permission]'\n})\nexport class NodePermissionDirective implements OnChanges {\n\n    @Input('adf-node-permission')\n    permission: string = null;\n\n    @Input('adf-nodes')\n    nodes: MinimalNodeEntity[] = [];\n\n    constructor(private elementRef: ElementRef,\n                private contentService: AlfrescoContentService) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n        if (changes.nodes && !changes.nodes.firstChange) {\n            this.updateElement();\n        }\n    }\n\n    /**\n     * Updates disabled state for the decorated element\n     *\n     * @memberof NodePermissionDirective\n     */\n    updateElement(): void {\n        let hasPermission = this.hasPermission(this.nodes, this.permission);\n        this.setDisableAttribute(!hasPermission);\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    /**\n     * Checks whether all nodes have a particular permission\n     *\n     * @param {MinimalNodeEntity[]} nodes Node collection to check\n     * @param {string} permission Permission to check for each node\n     * @returns {boolean} True if all nodes have provided permission, otherwise False\n     * @memberof NodePermissionDirective\n     */\n    hasPermission(nodes: MinimalNodeEntity[], permission: string): boolean {\n        if (nodes && nodes.length > 0) {\n            return nodes.every(node => this.contentService.hasPermission(node.entry, permission));\n        }\n\n        return false;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/node-permission.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DeletedNodeEntry, DeletedNodesPaging, PathInfoEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { NotificationService } from '../services/notification.service';\nimport { TranslationService } from '../services/translation.service';\n\n@Directive({\n    selector: '[adf-restore]'\n})\nexport class NodeRestoreDirective {\n    private restoreProcessStatus;\n\n    @Input('adf-restore')\n    selection: DeletedNodeEntry[];\n\n    @Input()\n    location: string = '';\n\n    @Output()\n    restore: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.recover(this.selection);\n    }\n\n    constructor(\n        private alfrescoApiService: AlfrescoApiService,\n        private translation: TranslationService,\n        private router: Router,\n        private notification: NotificationService\n    ) {\n        this.restoreProcessStatus = this.processStatus();\n    }\n\n    private recover(selection: any)  {\n        if (!selection.length) {\n            return;\n        }\n\n        const nodesWithPath = this.getNodesWithPath(selection);\n\n        if (selection.length && !nodesWithPath.length) {\n            this.restoreProcessStatus.fail.push(...selection);\n            this.restoreNotification();\n            this.refresh();\n            return;\n        }\n\n        this.restoreNodesBatch(nodesWithPath)\n            .do((restoredNodes) => {\n                const status = this.processStatus(restoredNodes);\n\n                this.restoreProcessStatus.fail.push(...status.fail);\n                this.restoreProcessStatus.success.push(...status.success);\n            })\n            .flatMap(() => this.getDeletedNodes())\n            .subscribe(\n                (deletedNodesList: any) => {\n                    const { entries: nodelist } = deletedNodesList.list;\n                    const { fail: restoreErrorNodes } = this.restoreProcessStatus;\n                    const selectedNodes = this.diff(restoreErrorNodes, selection, false);\n                    const remainingNodes = this.diff(selectedNodes, nodelist);\n\n                    if (!remainingNodes.length) {\n                        this.restoreNotification();\n                        this.refresh();\n                    } else {\n                        this.recover(remainingNodes);\n                    }\n                }\n            );\n    }\n\n    private restoreNodesBatch(batch: DeletedNodeEntry[]): Observable<DeletedNodeEntry[]> {\n        return Observable.forkJoin(batch.map((node) => this.restoreNode(node)));\n    }\n\n    private getNodesWithPath(selection): DeletedNodeEntry[] {\n        return selection.filter((node) => node.entry.path);\n    }\n\n    private getDeletedNodes(): Observable<DeletedNodesPaging> {\n        const promise = this.alfrescoApiService.getInstance()\n            .core.nodesApi.getDeletedNodes({ include: [ 'path' ] });\n\n        return Observable.from(promise);\n    }\n\n    private restoreNode(node): Observable<any> {\n        const { entry } = node;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.restoreNode(entry.id);\n\n        return Observable.from(promise)\n            .map(() => ({\n                status: 1,\n                entry\n            }))\n            .catch((error) => {\n                const { statusCode } = (JSON.parse(error.message)).error;\n\n                return Observable.of({\n                    status: 0,\n                    statusCode,\n                    entry\n                });\n            });\n    }\n\n    private navigateLocation(path: PathInfoEntity) {\n        const parent = path.elements[path.elements.length - 1];\n\n        this.router.navigate([ this.location,  parent.id ]);\n    }\n\n    private diff(selection , list, fromList = true): any {\n        const ids = selection.map(item => item.entry.id);\n\n        return list.filter(item => {\n            if (fromList) {\n                return ids.includes(item.entry.id) ? item : null;\n            } else {\n                return !ids.includes(item.entry.id) ? item : null;\n            }\n        });\n    }\n\n    private processStatus(data = []): any {\n        const status = {\n            fail: [],\n            success: [],\n            get someFailed() {\n                return !!(this.fail.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.fail.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            },\n            reset() {\n                this.fail = [];\n                this.success = [];\n            }\n        };\n\n        return data.reduce(\n            (acc, node) => {\n                if (node.status) {\n                    acc.success.push(node);\n                } else {\n                    acc.fail.push(node);\n                }\n\n                return acc;\n            },\n            status\n        );\n    }\n\n    private getRestoreMessage(): Observable<string|any> {\n        const { restoreProcessStatus: status } = this;\n\n        if (status.someFailed && !status.oneFailed) {\n            return this.translation.get(\n                'CORE.RESTORE_NODE.PARTIAL_PLURAL',\n                {\n                    number: status.fail.length\n                }\n            );\n        }\n\n        if (status.oneFailed && status.fail[0].statusCode) {\n            if (status.fail[0].statusCode === 409) {\n                return this.translation.get(\n                    'CORE.RESTORE_NODE.NODE_EXISTS',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            } else {\n                return this.translation.get(\n                    'CORE.RESTORE_NODE.GENERIC',\n                    {\n                        name: status.fail[0].entry.name\n                    }\n                );\n            }\n        }\n\n        if (status.oneFailed && !status.fail[0].statusCode) {\n            return this.translation.get(\n                'CORE.RESTORE_NODE.LOCATION_MISSING',\n                {\n                    name: status.fail[0].entry.name\n                }\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.get('CORE.RESTORE_NODE.PLURAL');\n        }\n\n        if (status.allSucceeded && status.oneSucceeded) {\n            return this.translation.get(\n                'CORE.RESTORE_NODE.SINGULAR',\n                {\n                    name: status.success[0].entry.name\n                }\n            );\n        }\n    }\n\n    private restoreNotification(): void {\n        const status = Object.assign({}, this.restoreProcessStatus);\n\n        Observable.zip(\n            this.getRestoreMessage(),\n            this.translation.get('CORE.RESTORE_NODE.VIEW')\n        ).subscribe((messages) => {\n            const [ message, actionLabel ] = messages;\n            const action = (status.oneSucceeded && !status.someFailed) ? actionLabel : '';\n\n            this.notification.openSnackMessageAction(message, action)\n                .onAction()\n                .subscribe(() => this.navigateLocation(status.success[0].entry.path));\n        });\n    }\n\n    private refresh(): void {\n        this.restoreProcessStatus.reset();\n        this.selection = [];\n        this.restore.emit();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/node-restore.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, HostListener, Input, NgZone, OnDestroy, OnInit, Renderer } from '@angular/core';\nimport { FileInfo, FileUtils } from '../utils/file-utils';\n\n@Directive({\n    selector: '[adf-upload]'\n})\nexport class UploadDirective implements OnInit, OnDestroy {\n\n    @Input('adf-upload')\n    enabled: boolean = true;\n\n    @Input('adf-upload-data')\n    data: any;\n\n    @Input()\n    mode: string[] = ['drop']; // click|drop\n\n    @Input()\n    multiple: boolean;\n\n    @Input()\n    accept: string;\n\n    @Input()\n    directory: boolean;\n\n    isDragging: boolean = false;\n\n    private cssClassName: string = 'adf-upload__dragging';\n    private upload: HTMLInputElement;\n    private element: HTMLElement;\n\n    constructor(private el: ElementRef, private renderer: Renderer, private ngZone: NgZone) {\n        this.element = el.nativeElement;\n    }\n\n    ngOnInit() {\n        if (this.isClickMode() && this.renderer) {\n            this.upload = this.renderer.createElement(this.el.nativeElement.parentNode, 'input') as HTMLInputElement;\n            this.upload.type = 'file';\n            this.upload.style.display = 'none';\n            this.upload.addEventListener('change', e => this.onSelectFiles(e));\n\n            if (this.multiple) {\n                this.upload.setAttribute('multiple', '');\n            }\n\n            if (this.accept) {\n                this.upload.setAttribute('accept', this.accept);\n            }\n\n            if (this.directory) {\n                this.upload.setAttribute('webkitdirectory', '');\n            }\n        }\n\n        if (this.isDropMode()) {\n            this.ngZone.runOutsideAngular(() => {\n                this.element.addEventListener('dragenter', this.onDragEnter.bind(this));\n                this.element.addEventListener('dragover', this.onDragOver.bind(this));\n                this.element.addEventListener('dragleave', this.onDragLeave.bind(this));\n                this.element.addEventListener('drop', this.onDrop.bind(this));\n            });\n        }\n    }\n\n    ngOnDestroy() {\n        this.element.removeEventListener('dragenter', this.onDragEnter);\n        this.element.removeEventListener('dragover', this.onDragOver);\n        this.element.removeEventListener('dragleave', this.onDragLeave);\n        this.element.removeEventListener('drop', this.onDrop);\n    }\n\n    @HostListener('click', ['$event'])\n    onClick(event: Event) {\n        if (this.isClickMode() && this.upload) {\n            event.preventDefault();\n            this.upload.click();\n        }\n    }\n\n    onDragEnter(event: Event) {\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n    }\n\n    onDragOver(event: Event) {\n        event.preventDefault();\n        if (this.isDropMode()) {\n            this.element.classList.add(this.cssClassName);\n            this.isDragging = true;\n        }\n        return false;\n    }\n\n    onDragLeave(event) {\n        if (this.isDropMode()) {\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n        }\n    }\n\n    onDrop(event: Event) {\n        if (this.isDropMode()) {\n\n            event.stopPropagation();\n            event.preventDefault();\n\n            this.element.classList.remove(this.cssClassName);\n            this.isDragging = false;\n\n            const dataTranfer = this.getDataTransfer(event);\n            if (dataTranfer) {\n                this.getFilesDropped(dataTranfer).then(files => {\n                    this.onUploadFiles(files);\n                });\n\n            }\n        }\n        return false;\n    }\n\n    onUploadFiles(files: FileInfo[]) {\n        if (this.enabled && files.length > 0) {\n            let e = new CustomEvent('upload-files', {\n                detail: {\n                    sender: this,\n                    data: this.data,\n                    files: files\n                },\n                bubbles: true\n            });\n\n            this.el.nativeElement.dispatchEvent(e);\n        }\n    }\n\n    protected hasMode(mode: string): boolean {\n        return this.enabled && mode && this.mode && this.mode.indexOf(mode) > -1;\n    }\n\n    protected isDropMode(): boolean {\n        return this.hasMode('drop');\n    }\n\n    protected isClickMode(): boolean {\n        return this.hasMode('click');\n    }\n\n    protected getDataTransfer(event: Event | any): DataTransfer {\n        if (event && event.dataTransfer) {\n            return event.dataTransfer;\n        }\n        if (event && event.originalEvent && event.originalEvent.dataTransfer) {\n            return event.originalEvent.dataTransfer;\n        }\n        return null;\n    }\n\n    /**\n     * Extract files from the DataTransfer object used to hold the data that is being dragged during a drag and drop operation.\n     * @param dataTransfer DataTransfer object\n     */\n    protected getFilesDropped(dataTransfer: DataTransfer): Promise<FileInfo[]> {\n        return new Promise(resolve => {\n            const iterations = [];\n\n            if (dataTransfer) {\n                const items = dataTransfer.items;\n                if (items) {\n                    for (let i = 0; i < items.length; i++) {\n                        if (typeof items[i].webkitGetAsEntry !== 'undefined') {\n                            let item = items[i].webkitGetAsEntry();\n                            if (item) {\n                                if (item.isFile) {\n                                    iterations.push(Promise.resolve(<FileInfo> {\n                                        entry: item,\n                                        file: items[i].getAsFile(),\n                                        relativeFolder: '/'\n                                    }));\n                                } else if (item.isDirectory) {\n                                    iterations.push(new Promise(resolveFolder => {\n                                        FileUtils.flattern(item).then(files => resolveFolder(files));\n                                    }));\n                                }\n                            }\n                        } else {\n                            iterations.push(Promise.resolve(<FileInfo> {\n                                entry: null,\n                                file: items[i].getAsFile(),\n                                relativeFolder: '/'\n                            }));\n                        }\n                    }\n                } else {\n                    // safari or FF\n                    let files = FileUtils\n                        .toFileArray(dataTransfer.files)\n                        .map(file => <FileInfo> {\n                            entry: null,\n                            file: file,\n                            relativeFolder: '/'\n                        });\n\n                    iterations.push(Promise.resolve(files));\n                }\n            }\n\n            Promise.all(iterations).then(result => {\n                resolve(result.reduce((a, b) => a.concat(b), []));\n            });\n        });\n    }\n\n    /**\n     * Invoked when user selects files or folders by means of File Dialog\n     * @param e DOM event\n     */\n    onSelectFiles(e: any): void {\n        if (this.isClickMode()) {\n            const input = (<HTMLInputElement> e.currentTarget);\n            const files = FileUtils.toFileArray(input.files);\n            this.onUploadFiles(files.map(file => <FileInfo> {\n                entry: null,\n                file: file,\n                relativeFolder: '/'\n            }));\n            e.target.value = '';\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/upload.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport interface FileInfo {\n    entry?: WebKitFileEntry;\n    file?: File;\n    relativeFolder?: string;\n}\n\nexport class FileUtils {\n\n    static flattern(folder: any): Promise<FileInfo[]> {\n        let reader = folder.createReader();\n        let files: FileInfo[] = [];\n        return new Promise(resolve => {\n            let iterations = [];\n            (function traverse() {\n                reader.readEntries((entries) => {\n                    if (!entries.length) {\n                        Promise.all(iterations).then(result => resolve(files));\n                    } else {\n                        iterations.push(Promise.all(entries.map(entry => {\n                            if (entry.isFile) {\n                                return new Promise(resolveFile => {\n                                    entry.file(function (f: File) {\n                                        files.push({\n                                            entry: entry,\n                                            file: f,\n                                            relativeFolder: entry.fullPath.replace(/\\/[^\\/]*$/, '')\n                                        });\n                                        resolveFile();\n                                    });\n                                });\n                            } else {\n                                return FileUtils.flattern(entry).then(result => {\n                                    files.push(...result);\n                                });\n                            }\n                        })));\n                        // Try calling traverse() again for the same dir, according to spec\n                        traverse();\n                    }\n                });\n            })();\n        });\n    }\n\n    static toFileArray(fileList: FileList): File[] {\n        let result = [];\n\n        if (fileList && fileList.length > 0) {\n            for (let i = 0; i < fileList.length; i++) {\n                result.push(fileList[i]);\n            }\n        }\n\n        return result;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/utils/file-utils.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { Pagination } from 'alfresco-js-api';\n\n@Component({\n    selector: 'adf-infinite-pagination',\n    host: { 'class': 'infinite-adf-pagination' },\n    template: require('./infinite-pagination.component.html'),\n    styles: [ require('./infinite-pagination.component.scss') ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class InfinitePaginationComponent implements OnInit {\n\n    static DEFAULT_PAGE_SIZE: number = 25;\n\n    static DEFAULT_PAGINATION: Pagination = {\n        skipCount: 0,\n        hasMoreItems: false\n    };\n\n    @Input()\n    pagination: Pagination;\n\n    @Input()\n    pageSize: number = InfinitePaginationComponent.DEFAULT_PAGE_SIZE;\n\n    @Input('loading')\n    isLoading: boolean = false;\n\n    @Output()\n    loadMore: EventEmitter<Pagination> = new EventEmitter<Pagination>();\n\n    ngOnInit() {\n        if (!this.pagination) {\n            this.pagination = InfinitePaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    onLoadMore() {\n        this.pagination.skipCount += this.pageSize;\n        this.loadMore.next(this.pagination);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    ViewEncapsulation\n} from '@angular/core';\n\nimport { Pagination } from 'alfresco-js-api';\nimport { PaginationQueryParams } from './pagination-query-params.interface';\n\n@Component({\n    selector: 'adf-pagination',\n    host: { 'class': 'adf-pagination' },\n    template: require('./pagination.component.html'),\n    styles: [ require('./pagination.component.scss') ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class PaginationComponent implements OnInit {\n\n    static DEFAULT_PAGE_SIZE: number = 25;\n\n    static DEFAULT_PAGINATION: Pagination = {\n        skipCount: 0,\n        maxItems: PaginationComponent.DEFAULT_PAGE_SIZE,\n        totalItems: 0\n    };\n\n    static ACTIONS = {\n        NEXT_PAGE: 'NEXT_PAGE',\n        PREV_PAGE: 'PREV_PAGE',\n        CHANGE_PAGE_SIZE: 'CHANGE_PAGE_SIZE',\n        CHANGE_PAGE_NUMBER: 'CHANGE_PAGE_NUMBER'\n    };\n\n    @Input()\n    supportedPageSizes: number[] = [ 25, 50, 100 ];\n\n    /** @deprecated */\n    /** \"pagination\" object already has \"maxItems\" */\n    @Input()\n    maxItems: number = PaginationComponent.DEFAULT_PAGE_SIZE;\n\n    @Input()\n    pagination: Pagination;\n\n    @Output()\n    change: EventEmitter<PaginationQueryParams> = new EventEmitter<PaginationQueryParams>();\n\n    @Output()\n    changePageNumber: EventEmitter<Pagination> = new EventEmitter<Pagination>();\n\n    @Output()\n    changePageSize: EventEmitter<Pagination> = new EventEmitter<Pagination>();\n\n    @Output()\n    nextPage: EventEmitter<Pagination> = new EventEmitter<Pagination>();\n\n    @Output()\n    prevPage: EventEmitter<Pagination> = new EventEmitter<Pagination>();\n\n    ngOnInit() {\n        if (!this.pagination) {\n            this.pagination = PaginationComponent.DEFAULT_PAGINATION;\n        }\n    }\n\n    get lastPage(): number {\n        const { maxItems, totalItems } = this.pagination;\n\n        return (totalItems && maxItems)\n            ? Math.ceil(totalItems / maxItems)\n            : 1;\n    }\n\n    get current(): number {\n        const { maxItems, skipCount } = this.pagination;\n\n        return (skipCount && maxItems)\n            ? Math.floor(skipCount / maxItems) + 1\n            : 1;\n    }\n\n    get isLastPage(): boolean {\n        const { current, lastPage } = this;\n        return current === lastPage;\n    }\n\n    get isFirstPage(): boolean {\n        return this.current === 1;\n    }\n\n    get next(): number {\n        const { isLastPage, current } = this;\n        return isLastPage ? current : current + 1;\n    }\n\n    get previous(): number {\n        const { isFirstPage, current } = this;\n        return isFirstPage ? 1 : current - 1;\n    }\n\n    get range(): number[] {\n        const { skipCount, maxItems, totalItems } = this.pagination;\n        const { isLastPage } = this;\n\n        const start = totalItems ? skipCount + 1 : 0;\n        const end = isLastPage ? totalItems : skipCount + maxItems;\n\n        return [ start, end ];\n    }\n\n    get pages(): number[] {\n        return Array(this.lastPage)\n            .fill('n')\n            .map((item, index) => (index + 1));\n    }\n\n    goNext() {\n        const { next, pagination: { maxItems } } = this;\n\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.NEXT_PAGE, {\n            skipCount: (next - 1) * maxItems,\n            maxItems\n        });\n    }\n\n    goPrevious() {\n        const { previous, pagination: { maxItems } } = this;\n\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.PREV_PAGE, {\n            skipCount: (previous - 1) * maxItems,\n            maxItems\n        });\n    }\n\n    onChangePageNumber(pageNumber: number) {\n        const { pagination: { maxItems } } = this;\n\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_NUMBER, {\n            skipCount: (pageNumber - 1) * maxItems,\n            maxItems\n        });\n    }\n\n    onChangePageSize(maxItems: number) {\n        this.handlePaginationEvent(PaginationComponent.ACTIONS.CHANGE_PAGE_SIZE, {\n            skipCount: 0,\n            maxItems\n        });\n    }\n\n    handlePaginationEvent(action: string, params: PaginationQueryParams) {\n        const {\n            NEXT_PAGE,\n            PREV_PAGE,\n            CHANGE_PAGE_NUMBER,\n            CHANGE_PAGE_SIZE\n        } = PaginationComponent.ACTIONS;\n\n        const {\n            change,\n            changePageNumber,\n            changePageSize,\n            nextPage,\n            prevPage,\n            pagination\n        } = this;\n\n        const data = Object.assign({}, pagination, params);\n\n        if (action === NEXT_PAGE) {\n            nextPage.emit(data);\n        }\n\n        if (action === PREV_PAGE) {\n            prevPage.emit(data);\n        }\n\n        if (action === CHANGE_PAGE_NUMBER) {\n            changePageNumber.emit(data);\n        }\n\n        if (action === CHANGE_PAGE_SIZE) {\n            changePageSize.emit(data);\n        }\n\n        change.emit(params);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/pagination/pagination.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AlfrescoSettingsService } from '../../services/alfresco-settings.service';\nimport { LogService } from '../../services/log.service';\nimport { StorageService } from '../../services/storage.service';\nimport { TranslationService } from '../../services/translation.service';\n\n@Component({\n    selector: 'adf-host-settings',\n    template: require('./host-settings.component.html'),\n    host: {\n        'class': 'adf-host-settings'\n    },\n    styles: [require('./host-settings.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class HostSettingsComponent {\n\n    HOST_REGEX: string = '^(http|https):\\/\\/.*[^/]$';\n\n    ecmHost: string;\n    ecmHostTmp: string;\n    bpmHost: string;\n    bpmHostTmp: string;\n    urlFormControlEcm = new FormControl('', [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n    urlFormControlBpm = new FormControl('', [Validators.required, Validators.pattern(this.HOST_REGEX)]);\n\n    @Input()\n    providers: string = 'ALL';\n\n    @Output()\n    error = new EventEmitter<string>();\n\n    constructor(private settingsService: AlfrescoSettingsService,\n                private storage: StorageService,\n                private logService: LogService,\n                private translationService: TranslationService) {\n        this.ecmHostTmp = this.ecmHost = storage.getItem('ecmHost') || this.settingsService.ecmHost;\n        this.bpmHostTmp = this.bpmHost = storage.getItem('bpmHost') || this.settingsService.bpmHost;\n    }\n\n    public onChangeECMHost(event: any): void {\n        let value = (<HTMLInputElement> event.target).value.trim();\n        if (value && this.isValidUrl(value)) {\n            this.logService.info(`ECM host: ${value}`);\n            this.ecmHostTmp = value;\n        } else {\n            this.translationService.get('CORE.HOST_SETTING.CS_URL_ERROR').subscribe((message) => {\n                this.error.emit(message);\n            });\n        }\n    }\n\n    public onChangeBPMHost(event: any): void {\n        let value = (<HTMLInputElement> event.target).value.trim();\n        if (value && this.isValidUrl(value)) {\n            this.logService.info(`BPM host: ${value}`);\n            this.bpmHostTmp = value;\n        } else {\n            this.translationService.get('CORE.HOST_SETTING.PS_URL_ERROR').subscribe((message) => {\n                this.error.emit(message);\n            });\n        }\n    }\n\n    public save(event: KeyboardEvent): void {\n        if (this.bpmHost !== this.bpmHostTmp) {\n            this.storage.setItem(`bpmHost`, this.bpmHostTmp);\n        }\n        if (this.ecmHost !== this.ecmHostTmp) {\n            this.storage.setItem(`ecmHost`, this.ecmHostTmp);\n        }\n        window.location.href = '/';\n    }\n\n    isValidUrl(url: string) {\n        return /^(http|https):\\/\\/.*/.test(url);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/settings/host-settings.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { MinimalNodeEntity } from 'alfresco-js-api';\n\n@Pipe({\n    name: 'adfNodeNameTooltip'\n})\nexport class NodeNameTooltipPipe implements PipeTransform {\n\n    transform(node: MinimalNodeEntity): string {\n        if (node) {\n            return this.getNodeTooltip(node);\n        }\n        return null;\n    }\n\n    private containsLine(lines: string[], line: string): boolean {\n        return lines.some((item: string) => {\n            return item.toLowerCase() === line.toLowerCase();\n        });\n    }\n\n    private removeDuplicateLines(lines: string[]): string[] {\n        const reducer = (acc: string[], line: string): string[] => {\n            if (!this.containsLine(acc, line)) { acc.push(line); }\n            return acc;\n        };\n\n        return lines.reduce(reducer, []);\n    }\n\n    private getNodeTooltip(node: MinimalNodeEntity): string {\n        if (!node || !node.entry) {\n            return null;\n        }\n\n        const { entry: { properties, name } } = node;\n        const lines = [ name ];\n\n        if (properties) {\n            const {\n                'cm:title': title,\n                'cm:description': description\n            } = properties;\n\n            if (title && description) {\n                lines[0] = title;\n                lines[1] = description;\n            }\n\n            if (title) {\n                lines[1] = title;\n            }\n\n            if (description) {\n                lines[1] = description;\n            }\n        }\n\n        return this.removeDuplicateLines(lines).join(`\\n`);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/pipes/node-name-tooltip.pipe.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as moment from 'moment';\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'adfTimeAgo'\n})\nexport class TimeAgoPipe implements PipeTransform {\n\n    transform(value: Date) {\n        if (value !== null && value !== undefined ) {\n            const then = moment(value);\n            const diff = moment().diff(then, 'days');\n            return diff > 7 ? then.format('DD/MM/YYYY HH:mm') : then.fromNow();\n        }\n        return '';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/pipes/time-ago.pipe.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { UserProcessModel } from '../models/user-process.model';\n\n@Pipe({\n    name: 'usernameInitials'\n})\nexport class InitialUsernamePipe implements PipeTransform {\n\n    constructor(private sanitized: DomSanitizer) {}\n\n    transform(user: UserProcessModel, className: string = '', delimiter: string = ''): SafeHtml {\n        let result: SafeHtml = '';\n        if (user) {\n            let initialResult = this.getInitialUserName(user.firstName, user.lastName, delimiter);\n            result = this.sanitized.bypassSecurityTrustHtml(`<div id=\"user-initials-image\" class=\"${className}\">${initialResult}</div>`);\n        }\n        return result;\n    }\n\n    getInitialUserName(firstName: string, lastName: string, delimiter: string) {\n        firstName = (firstName ? firstName[0] : '');\n        lastName = (lastName ? lastName[0] : '');\n        return firstName + delimiter + lastName;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/pipes/user-initial.pipe.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Base cancellable event implementation */\nexport class BaseEvent<T> {\n\n    private isDefaultPrevented: boolean = false;\n\n    value: T;\n\n    get defaultPrevented() {\n        return this.isDefaultPrevented;\n    }\n\n    preventDefault() {\n        this.isDefaultPrevented = true;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/events/base.event.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { HttpClient , HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\n\nimport { CollapsableModule } from './src/components/collapsable/collapsable.module';\nimport { ContextMenuModule } from './src/components/context-menu/context-menu.module';\nimport { ToolbarModule } from './src/components/toolbar/toolbar.module';\nimport { CardViewModule } from './src/components/view/card-view.module';\nimport { MaterialModule } from './src/material.module';\nimport { AppConfigModule } from './src/services/app-config.service';\n\nimport { DownloadZipDialogComponent } from './src/dialogs/download-zip.dialog';\nimport { FolderDialogComponent } from './src/dialogs/folder.dialog';\n\nimport { AlfrescoApiService } from './src/services/alfresco-api.service';\nimport { AlfrescoContentService } from './src/services/alfresco-content.service';\nimport { AlfrescoSettingsService } from './src/services/alfresco-settings.service';\nimport { AuthGuardBpm } from './src/services/auth-guard-bpm.service';\nimport { AuthGuardEcm } from './src/services/auth-guard-ecm.service';\nimport { AuthGuard } from './src/services/auth-guard.service';\nimport { AuthenticationService } from './src/services/authentication.service';\nimport { CommentProcessService } from './src/services/comment-process.service';\nimport { ContentService } from './src/services/content.service';\nimport { CookieService } from './src/services/cookie.service';\nimport { LogService } from './src/services/log.service';\nimport { NotificationService } from './src/services/notification.service';\nimport { PageTitleService } from './src/services/page-title.service';\nimport { RenditionsService } from './src/services/renditions.service';\nimport { StorageService } from './src/services/storage.service';\nimport { ThumbnailService } from './src/services/thumbnail.service';\nimport { AlfrescoTranslateLoader } from './src/services/translate-loader.service';\nimport { TRANSLATION_PROVIDER, TranslationService } from './src/services/translation.service';\nimport { UploadService } from './src/services/upload.service';\n\nimport { FolderCreateDirective } from './src/directives/folder-create.directive';\nimport { FolderEditDirective } from './src/directives/folder-edit.directive';\nimport { HighlightDirective } from './src/directives/highlight.directive';\nimport { LogoutDirective } from './src/directives/logout.directive';\nimport { NodeDeleteDirective } from './src/directives/node-delete.directive';\nimport { NodeFavoriteDirective } from './src/directives/node-favorite.directive';\nimport { AppConfigService } from './src/services/app-config.service';\nimport { AppsProcessService } from './src/services/apps-process.service';\nimport { DeletedNodesApiService } from './src/services/deleted-nodes-api.service';\nimport { DiscoveryApiService } from './src/services/discovery-api.service';\nimport { FavoritesApiService } from './src/services/favorites-api.service';\nimport { HighlightTransformService } from './src/services/highlight-transform.service';\nimport { NodesApiService } from './src/services/nodes-api.service';\nimport { PeopleContentService } from './src/services/people-content.service';\nimport { PeopleProcessService } from './src/services/people-process.service';\nimport { SearchApiService } from './src/services/search-api.service';\nimport { SearchService } from './src/services/search.service';\nimport { SharedLinksApiService } from './src/services/shared-links-api.service';\nimport { SitesApiService } from './src/services/sites-api.service';\nimport { UserPreferencesService } from './src/services/user-preferences.service';\n\nexport { MomentDateAdapter, MOMENT_DATE_FORMATS } from './src/utils/momentDateAdapter';\nimport { MomentDateAdapter } from './src/utils/momentDateAdapter';\n\nexport { DownloadZipDialogComponent } from './src/dialogs/download-zip.dialog';\nexport { FolderDialogComponent } from './src/dialogs/folder.dialog';\n\nexport { PageTitleService } from './src/services/page-title.service';\nexport { ContentService } from './src/services/content.service';\nexport { StorageService } from './src/services/storage.service';\nexport { CookieService } from './src/services/cookie.service';\nexport { AlfrescoApiService } from './src/services/alfresco-api.service';\nexport { AlfrescoSettingsService } from './src/services/alfresco-settings.service';\nexport { AlfrescoContentService } from './src/services/alfresco-content.service';\nexport { RenditionsService } from './src/services/renditions.service';\nexport { AuthGuard } from './src/services/auth-guard.service';\nexport { AuthGuardEcm } from './src/services/auth-guard-ecm.service';\nexport { AuthGuardBpm } from './src/services/auth-guard-bpm.service';\nexport { NotificationService } from './src/services/notification.service';\nexport { LogService } from './src/services/log.service';\nexport { AuthenticationService } from './src/services/authentication.service';\nexport { TranslationService, TRANSLATION_PROVIDER, TranslationProvider } from './src/services/translation.service';\nexport { AlfrescoTranslateLoader } from './src/services/translate-loader.service';\nexport { AppConfigService } from './src/services/app-config.service';\nexport { ThumbnailService } from './src/services/thumbnail.service';\nexport { UploadService } from './src/services/upload.service';\nexport { CardViewUpdateService } from './src/services/card-view-update.service';\nexport { UpdateNotification } from './src/services/card-view-update.service';\nexport { ClickNotification } from './src/services/card-view-update.service';\nexport { AppConfigModule } from './src/services/app-config.service';\nexport { UserPreferencesService } from './src/services/user-preferences.service';\nexport { HighlightTransformService, HightlightTransformResult } from './src/services/highlight-transform.service';\nexport { AppsProcessService } from './src/services/apps-process.service';\n\nexport { DeletedNodesApiService } from './src/services/deleted-nodes-api.service';\nexport { FavoritesApiService } from './src/services/favorites-api.service';\nexport { NodesApiService } from './src/services/nodes-api.service';\nexport { PeopleContentService } from './src/services/people-content.service';\nexport { PeopleProcessService } from './src/services/people-process.service';\nexport { SearchApiService } from './src/services/search-api.service';\nexport { SharedLinksApiService } from './src/services/shared-links-api.service';\nexport { SitesApiService } from './src/services/sites-api.service';\nexport { DiscoveryApiService } from './src/services/discovery-api.service';\nexport { CommentProcessService } from './src/services/comment-process.service';\n\nimport { DataColumnListComponent } from './src/components/data-column/data-column-list.component';\nimport { DataColumnComponent } from './src/components/data-column/data-column.component';\nimport {\n    InfoDrawerButtonsDirective,\n    InfoDrawerContentDirective,\n    InfoDrawerLayoutComponent,\n    InfoDrawerTitleDirective\n} from './src/components/info-drawer/info-drawer-layout.component';\nimport { InfoDrawerComponent, InfoDrawerTabComponent } from './src/components/info-drawer/info-drawer.component';\nimport { LanguageMenuComponent } from './src/components/language-menu/language-menu.component';\nimport { NodePermissionDirective } from './src/directives/node-permission.directive';\nimport { NodeRestoreDirective } from './src/directives/node-restore.directive';\nimport { UploadDirective } from './src/directives/upload.directive';\n\nimport { InfinitePaginationComponent } from './src/components/pagination/infinite-pagination.component';\nimport { PaginationComponent } from './src/components/pagination/pagination.component';\nimport { HostSettingsComponent } from './src/components/settings/host-settings.component';\nimport { FileSizePipe } from './src/pipes/file-size.pipe';\nimport { MimeTypeIconPipe } from './src/pipes/mime-type-icon.pipe';\nimport { NodeNameTooltipPipe } from './src/pipes/node-name-tooltip.pipe';\nimport { HighlightPipe } from './src/pipes/text-highlight.pipe';\nimport { TimeAgoPipe } from './src/pipes/time-ago.pipe';\nimport { InitialUsernamePipe } from './src/pipes/user-initial.pipe';\n\nexport { InfinitePaginationComponent } from './src/components/pagination/infinite-pagination.component';\nexport { PaginationComponent } from './src/components/pagination/pagination.component';\nexport { HostSettingsComponent } from './src/components/settings/host-settings.component';\nexport { ContextMenuModule } from './src/components/context-menu/context-menu.module';\nexport { CardViewModule } from './src/components/view/card-view.module';\nexport { CollapsableModule } from './src/components/collapsable/collapsable.module';\nexport { CardViewItem } from './src/interface/card-view-item.interface';\nexport { TimeAgoPipe } from './src/pipes/time-ago.pipe';\nexport { EXTENDIBLE_COMPONENT } from './src/interface/injection.tokens';\nexport { InitialUsernamePipe } from './src/pipes/user-initial.pipe';\nexport { NodeNameTooltipPipe } from './src/pipes/node-name-tooltip.pipe';\n\nexport * from './src/components/data-column/data-column.component';\nexport * from './src/components/data-column/data-column-list.component';\nexport * from './src/components/info-drawer/info-drawer.component';\nexport * from './src/directives/upload.directive';\nexport * from './src/directives/highlight.directive';\nexport * from './src/directives/node-restore.directive';\nexport * from './src/directives/node-permission.directive';\nexport * from './src/directives/node-favorite.directive';\nexport * from './src/utils/index';\nexport * from './src/events/base.event';\nexport * from './src/events/base-ui.event';\nexport * from './src/events/folder-created.event';\nexport * from './src/events/file.event';\n\nexport * from './src/models/card-view-textitem.model';\nexport * from './src/models/card-view-mapitem.model';\nexport * from './src/models/card-view-dateitem.model';\nexport * from './src/models/file.model';\nexport * from './src/models/permissions.enum';\nexport * from './src/models/site.model';\nexport * from './src/models/product-version.model';\nexport * from './src/models/user-process.model';\nexport * from './src/models/comment-process.model';\n\n// Old deprecated import\nimport { AuthenticationService as AlfrescoAuthenticationService } from './src/services/authentication.service';\nimport { TranslationService as AlfrescoTranslationService } from './src/services/translation.service';\nexport { AuthenticationService as AlfrescoAuthenticationService } from './src/services/authentication.service';\nexport { TranslationService as AlfrescoTranslationService } from './src/services/translation.service';\nexport * from './src/services/search.service';\n\nexport function providers() {\n    return [\n        PageTitleService,\n        UserPreferencesService,\n        NotificationService,\n        LogService,\n        AuthenticationService,\n        AlfrescoContentService,\n        AlfrescoSettingsService,\n        StorageService,\n        CookieService,\n        AlfrescoApiService,\n        AlfrescoTranslateLoader,\n        TranslationService,\n        RenditionsService,\n        ContentService,\n        AuthGuard,\n        AuthGuardEcm,\n        AuthGuardBpm,\n        ThumbnailService,\n        UploadService,\n        SearchService,\n        DeletedNodesApiService,\n        FavoritesApiService,\n        NodesApiService,\n        PeopleContentService,\n        SearchApiService,\n        SharedLinksApiService,\n        SitesApiService,\n        DiscoveryApiService,\n        HighlightTransformService,\n        MomentDateAdapter,\n        PeopleProcessService,\n        AppsProcessService,\n        CommentProcessService,\n        AppConfigService\n    ];\n}\n\nexport function deprecatedProviders() {\n    return [\n        AlfrescoTranslationService,\n        AlfrescoAuthenticationService\n    ];\n}\n\nexport function pipes() {\n    return [\n        FileSizePipe,\n        HighlightPipe,\n        TimeAgoPipe,\n        MimeTypeIconPipe,\n        InitialUsernamePipe,\n        NodeNameTooltipPipe\n    ];\n}\n\nexport function createTranslateLoader(http: HttpClient, logService: LogService) {\n    return new AlfrescoTranslateLoader(http, logService);\n}\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        BrowserAnimationsModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [HttpClient, LogService]\n            }\n        }),\n        MaterialModule,\n        AppConfigModule,\n        ToolbarModule,\n        ContextMenuModule,\n        CardViewModule,\n        CollapsableModule\n    ],\n    declarations: [\n        ...pipes(),\n        FolderCreateDirective,\n        FolderEditDirective,\n        LogoutDirective,\n        UploadDirective,\n        NodeRestoreDirective,\n        NodePermissionDirective,\n        NodeFavoriteDirective,\n        NodeDeleteDirective,\n        HighlightDirective,\n        DataColumnComponent,\n        DataColumnListComponent,\n        InfoDrawerComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerLayoutComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective,\n        LanguageMenuComponent,\n        HostSettingsComponent,\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        InfinitePaginationComponent,\n        PaginationComponent\n    ],\n    providers: [\n        ...providers(),\n        ...deprecatedProviders(),\n        {\n            provide: TRANSLATION_PROVIDER,\n            multi: true,\n            useValue: {\n                name: 'ng2-alfresco-core',\n                source: 'assets/ng2-alfresco-core'\n            }\n        }\n    ],\n    exports: [\n        AppConfigModule,\n        BrowserAnimationsModule,\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n        TranslateModule,\n        MaterialModule,\n        ContextMenuModule,\n        CardViewModule,\n        CollapsableModule,\n        ToolbarModule,\n        ...pipes(),\n        FolderCreateDirective,\n        FolderEditDirective,\n        LogoutDirective,\n        UploadDirective,\n        NodeRestoreDirective,\n        NodePermissionDirective,\n        NodeFavoriteDirective,\n        NodeDeleteDirective,\n        HighlightDirective,\n        HostSettingsComponent,\n        DataColumnComponent,\n        DataColumnListComponent,\n        DownloadZipDialogComponent,\n        FolderDialogComponent,\n        InfoDrawerComponent,\n        InfoDrawerTabComponent,\n        InfoDrawerLayoutComponent,\n        InfoDrawerTitleDirective,\n        InfoDrawerButtonsDirective,\n        InfoDrawerContentDirective,\n        InfinitePaginationComponent,\n        LanguageMenuComponent,\n        PaginationComponent\n    ],\n    entryComponents: [\n        DownloadZipDialogComponent,\n        FolderDialogComponent\n    ]\n})\nexport class CoreModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/index.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_170__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/platform-browser/animations\"\n// module id = 170\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { AccordionComponent } from './accordion.component';\n\n@Component({\n    selector: 'adf-accordion-group',\n    template: require('./accordion-group.component.html'),\n    styles: [require('./accordion-group.component.scss')],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AccordionGroupComponent implements OnDestroy {\n    private _isOpen: boolean = false;\n    private _isSelected: boolean = false;\n\n    @ViewChild('contentWrapper')\n    contentWrapper: any;\n\n    @Input()\n    heading: string;\n\n    @Input()\n    headingIcon: string;\n\n    @Input()\n    hasAccordionIcon: boolean = true;\n\n    @Output()\n    headingClick: EventEmitter<any> = new EventEmitter<any>();\n\n    @Input()\n    set isOpen(value: boolean) {\n        this._isOpen = value;\n        if (value) {\n            this.accordion.closeOthers(this);\n        }\n    }\n\n    get isOpen() {\n        return this._isOpen;\n    }\n\n    @Input()\n    set isSelected(value: boolean) {\n        this._isSelected = value;\n    }\n\n    get isSelected() {\n        return this._isSelected;\n    }\n\n    constructor(private accordion: AccordionComponent) {\n        this.accordion.addGroup(this);\n    }\n\n    ngOnDestroy() {\n        this.accordion.removeGroup(this);\n    }\n\n    hasHeadingIcon() {\n        return this.headingIcon ? true : false;\n    }\n\n    toggleOpen(event: MouseEvent): void {\n        event.preventDefault();\n        this.isOpen = !this.isOpen;\n        this.headingClick.emit(this.heading);\n    }\n\n    getAccordionIcon(): string {\n        return this.isOpen ? 'expand_less' : 'expand_more';\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/collapsable/accordion-group.component.ts","module.exports = \"<div class=\\\"adf-panel adf-panel-default\\\" [ngClass]=\\\"{'adf-panel-open': isOpen}\\\">\\n    <div class=\\\"adf-panel-heading\\\" [ngClass]=\\\"{'adf-panel-heading-selected': isSelected}\\\" (click)=\\\"toggleOpen($event)\\\">\\n        <div id=\\\"heading-icon\\\" *ngIf=\\\"hasHeadingIcon()\\\" class=\\\"adf-panel-heading-icon\\\">\\n            <i class=\\\"material-icons\\\">{{headingIcon}}</i>\\n        </div>\\n        <div id=\\\"heading-text\\\" class=\\\"adf-panel-heading-text\\\">{{heading}}</div>\\n        <div id=\\\"accordion-button\\\" *ngIf=\\\"hasAccordionIcon\\\" class=\\\"adf-panel-heading-toggle\\\">\\n            <i class=\\\"material-icons\\\">{{getAccordionIcon()}}</i>\\n        </div>\\n    </div>\\n    <div class=\\\"adf-panel-collapse\\\" [hidden]=\\\"!isOpen\\\">\\n        <div class=\\\"adf-panel-body\\\" #contentWrapper>\\n            <ng-content></ng-content>\\n        </div>\\n    </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/collapsable/accordion-group.component.html\n// module id = 172\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./accordion-group.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/collapsable/accordion-group.component.scss\n// module id = 173\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/collapsable/accordion-group.component.scss\n// module id = 174\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { AccordionGroupComponent } from './accordion-group.component';\n\n@Component({\n    selector: 'adf-accordion',\n    template: `\n        <ng-content></ng-content>\n    `,\n    host: {\n        'class': 'panel-group'\n    },\n    encapsulation: ViewEncapsulation.None\n})\nexport class AccordionComponent {\n    groups: Array<AccordionGroupComponent> = [];\n\n    addGroup(group: AccordionGroupComponent): void {\n        this.groups.push(group);\n    }\n\n    closeOthers(openGroup: AccordionGroupComponent): void {\n        this.groups.forEach((group: AccordionGroupComponent) => {\n            if (group !== openGroup) {\n                group.isOpen = false;\n            }\n        });\n    }\n\n    removeGroup(group: AccordionGroupComponent): void {\n        const index = this.groups.indexOf(group);\n        if (index !== -1) {\n            this.groups.splice(index, 1);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/collapsable/accordion.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { Component, HostListener, Input, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { MatMenuTrigger } from '@angular/material';\nimport { Subscription } from 'rxjs/Rx';\nimport { ContextMenuService } from './context-menu.service';\n\n@Component({\n    selector: 'adf-context-menu-holder, context-menu-holder',\n    template: `\n        <button mat-button [matMenuTriggerFor]=\"contextMenu\"></button>\n        <mat-menu #contextMenu=\"matMenu\" class=\"context-menu\">\n            <button\n                *ngFor=\"let link of links\"\n                mat-menu-item\n                (click)=\"onMenuItemClick($event, link)\"\n                [attr.disabled]=\"link.model?.disabled || undefined\">\n                <mat-icon *ngIf=\"showIcons && link.model?.icon\">\n                    {{ link.model?.icon }}\n                </mat-icon>\n                    {{link.title || link.model?.title}}\n            </button>\n        </mat-menu>\n    `\n})\nexport class ContextMenuHolderComponent implements OnInit, OnDestroy {\n    links = [];\n\n    private mouseLocation: { left: number, top: number } = {left: 0, top: 0};\n    private menuElement = null;\n    private openSubscription: Subscription;\n    private closeSubscription: Subscription;\n    private contextSubscription: Subscription;\n    private contextMenuListenerFn: () => void;\n\n    @Input()\n    showIcons: boolean = false;\n\n    @ViewChild(MatMenuTrigger)\n    menuTrigger: MatMenuTrigger;\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (event) {\n            event.preventDefault();\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        if (this.mdMenuElement) {\n            this.setPosition();\n        }\n    }\n\n    constructor(\n            private viewport: ViewportRuler,\n            private overlayContainer: OverlayContainer,\n            private contextMenuService: ContextMenuService,\n            private renderer: Renderer2\n    ) {}\n\n    ngOnInit() {\n        this.contextSubscription = this.contextMenuService.show.subscribe(e => this.showMenu(e.event, e.obj));\n\n        this.openSubscription = this.menuTrigger.onMenuOpen.subscribe(() => {\n            const container = this.overlayContainer.getContainerElement();\n            if (container) {\n                this.contextMenuListenerFn = this.renderer.listen(container, 'contextmenu', (e: Event) => {\n                    e.preventDefault();\n                });\n            }\n            this.menuElement = this.getContextMenuElement();\n        });\n\n        this.closeSubscription = this.menuTrigger.onMenuClose.subscribe(() => {\n            this.menuElement = null;\n            if (this.contextMenuListenerFn) {\n                this.contextMenuListenerFn();\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        if (this.contextMenuListenerFn) {\n            this.contextMenuListenerFn();\n        }\n        this.contextSubscription.unsubscribe();\n        this.openSubscription.unsubscribe();\n        this.closeSubscription.unsubscribe();\n        this.menuElement = null;\n    }\n\n    onMenuItemClick(event: Event, menuItem: any): void {\n        if (menuItem && menuItem.model && menuItem.model.disabled) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            return;\n        }\n        menuItem.subject.next(menuItem);\n    }\n\n    showMenu(e, links) {\n        this.links = links;\n\n        if (e) {\n            this.mouseLocation = {\n                left: e.clientX,\n                top: e.clientY\n            };\n        }\n\n        this.menuTrigger.openMenu();\n\n        if (this.mdMenuElement) {\n            this.setPosition();\n        }\n    }\n\n    get mdMenuElement() {\n        return this.menuElement;\n    }\n\n    private locationCss() {\n        return {\n            left: this.mouseLocation.left + 'px',\n            top: this.mouseLocation.top + 'px'\n        };\n    }\n\n    private setPosition() {\n        if (this.mdMenuElement.clientWidth + this.mouseLocation.left > this.viewport.getViewportRect().width) {\n            this.menuTrigger.menu.xPosition = 'before';\n            this.mdMenuElement.parentElement.style.left = this.mouseLocation.left - this.mdMenuElement.clientWidth + 'px';\n        } else {\n            this.menuTrigger.menu.xPosition = 'after';\n            this.mdMenuElement.parentElement.style.left = this.locationCss().left;\n        }\n\n        if (this.mdMenuElement.clientHeight + this.mouseLocation.top > this.viewport.getViewportRect().height) {\n            this.menuTrigger.menu.yPosition = 'above';\n            this.mdMenuElement.parentElement.style.top = this.mouseLocation.top - this.mdMenuElement.clientHeight + 'px';\n        } else {\n            this.menuTrigger.menu.yPosition = 'below';\n            this.mdMenuElement.parentElement.style.top = this.locationCss().top;\n        }\n    }\n\n    private getContextMenuElement() {\n        return this.overlayContainer.getContainerElement().querySelector('.context-menu');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/context-menu/context-menu-holder.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { ContextMenuService } from './context-menu.service';\n\n@Directive({\n    selector: '[adf-context-menu], [context-menu]'\n})\nexport class ContextMenuDirective {\n    @Input('context-menu')\n    links: any[];\n\n    @Input('context-menu-enabled')\n    enabled: boolean = false;\n\n    constructor(private _contextMenuService: ContextMenuService) {\n    }\n\n    @HostListener('contextmenu', ['$event'])\n    onShowContextMenu(event?: MouseEvent) {\n        if (this.enabled) {\n            if (event) {\n                event.preventDefault();\n            }\n\n            if (this.links && this.links.length > 0) {\n                if (this._contextMenuService) {\n                    this._contextMenuService.show.next({event: event, obj: this.links});\n                }\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/context-menu/context-menu.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Rx';\n\n@Injectable()\nexport class ContextMenuService {\n    public show: Subject<{event: MouseEvent, obj: any[]}> = new Subject<{event: MouseEvent, obj: any[]}>();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/context-menu/context-menu.service.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule } from '@angular/material';\n\nimport { ToolbarDividerComponent } from './toolbar-divider.component';\nimport { ToolbarTitleComponent } from './toolbar-title.component';\nimport { ToolbarComponent } from './toolbar.component';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        MatToolbarModule\n    ],\n    declarations: [\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ],\n    exports: [\n        MatToolbarModule,\n        ToolbarComponent,\n        ToolbarTitleComponent,\n        ToolbarDividerComponent\n    ]\n})\nexport class ToolbarModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/toolbar/toolbar.module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-divider',\n    template: '<div></div>',\n    host: { 'class': 'adf-toolbar-divider' },\n    styles: [`\n        .adf-toolbar-divider > div {\n            height: 24px;\n            width: 1px;\n            background: rgba(0, 0, 0, 0.26);\n            margin-left: 5px;\n            margin-right: 5px;\n        }\n    `],\n    encapsulation: ViewEncapsulation.None\n})\nexport class ToolbarDividerComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/toolbar/toolbar-divider.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar-title',\n    template: '<ng-content></ng-content>',\n    host: { 'class': 'adf-toolbar-title' }\n})\nexport class ToolbarTitleComponent {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/toolbar/toolbar-title.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-toolbar',\n    template: require('./toolbar.component.html'),\n    styles: [require('./toolbar.component.scss')],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-toolbar' }\n})\nexport class ToolbarComponent {\n\n    @Input()\n    title: string = '';\n\n    @Input()\n    color: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/toolbar/toolbar.component.ts","module.exports = \"<mat-toolbar [color]=\\\"color\\\">\\n    <span *ngIf=\\\"title\\\">{{ title }}</span>\\n    <ng-content select=\\\"adf-toolbar-title\\\"></ng-content>\\n    <span class=\\\"adf-toolbar--spacer\\\"></span>\\n    <ng-content></ng-content>\\n</mat-toolbar>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/toolbar/toolbar.component.html\n// module id = 183\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./toolbar.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/toolbar/toolbar.component.scss\n// module id = 184\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/toolbar/toolbar.component.scss\n// module id = 185\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MatDatepicker } from '@angular/material';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\nimport * as moment from 'moment';\nimport { Moment } from 'moment';\nimport { CardViewDateItemModel } from '../../models/card-view-dateitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\nimport { MOMENT_DATE_FORMATS, MomentDateAdapter } from '../../utils/momentDateAdapter';\n\n@Component({\n    providers: [\n        {provide: DateAdapter, useClass: MomentDateAdapter},\n        {provide: MAT_DATE_FORMATS, useValue: MOMENT_DATE_FORMATS}],\n    selector: 'adf-card-view-dateitem',\n    template: require('./card-view-dateitem.component.html'),\n    styles: [require('./card-view-dateitem.component.scss')]\n})\nexport class CardViewDateItemComponent implements OnInit {\n\n    public SHOW_FORMAT: string = 'MMM DD YY';\n\n    @Input()\n    property: CardViewDateItemModel;\n\n    @Input()\n    editable: boolean;\n\n    @ViewChild(MatDatepicker)\n    public datepicker: MatDatepicker<any>;\n\n    valueDate: Moment;\n\n    constructor(\n        private cardViewUpdateService: CardViewUpdateService,\n        private dateAdapter: DateAdapter<Moment>,\n        private preferences: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        this.preferences.locale$.subscribe( (locale) => {\n            this.dateAdapter.setLocale(locale);\n        });\n        let momentDateAdapter = <MomentDateAdapter> this.dateAdapter;\n        momentDateAdapter.overrideDisplyaFormat = this.SHOW_FORMAT;\n\n        if (this.property.value) {\n            this.valueDate = moment(this.property.value, this.SHOW_FORMAT);\n        }\n\n    }\n\n    isEditable() {\n        return this.editable && this.property.editable;\n    }\n\n    showDatePicker() {\n        this.datepicker.open();\n    }\n\n    onDateChanged(newDateValue) {\n        if (newDateValue) {\n            let momentDate = moment(newDateValue.value, this.SHOW_FORMAT, true);\n            if (momentDate.isValid()) {\n                this.valueDate = momentDate;\n                this.cardViewUpdateService.update(this.property, {[this.property.key]: momentDate.toDate()});\n            }\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/view/card-view-dateitem.component.ts","module.exports = \"<div class=\\\"adf-property-label\\\">{{ property.label | translate }}</div>\\n<div class=\\\"adf-property-value\\\">\\n    <span *ngIf=\\\"!isEditable()\\\">\\n        <span [attr.data-automation-id]=\\\"'card-dateitem-' + property.key\\\">\\n            <span *ngIf=\\\"!property.isEmpty(); else elseEmptyValueBlock\\\">{{ property.displayValue }}</span>\\n        </span>\\n    </span>\\n    <span *ngIf=\\\"isEditable()\\\" class=\\\"adf-dateitem-editable\\\">\\n        <input class=\\\"adf-invisible-date-input\\\" [matDatepicker]=\\\"picker\\\" [value]=\\\"valueDate\\\"\\n               (dateChange)=\\\"onDateChanged($event)\\\">\\n        <span\\n            class=\\\"adf-datepicker-toggle\\\"\\n            [attr.data-automation-id]=\\\"'datepicker-label-toggle-' + property.key\\\"\\n            (click)=\\\"showDatePicker($event)\\\">\\n            <span *ngIf=\\\"!property.isEmpty(); else elseEmptyValueBlock\\\">{{ property.displayValue }}</span>\\n        </span>\\n        <mat-datepicker-toggle\\n            [attr.data-automation-id]=\\\"'datepickertoggle-' + property.key\\\"\\n            [for]=\\\"picker\\\">\\n        </mat-datepicker-toggle>\\n        <mat-datepicker #picker\\n                       [attr.data-automation-id]=\\\"'datepicker-' + property.key\\\"\\n                       [startAt]=\\\"valueDate\\\"\\n                       [touchUi]=\\\"true\\\">\\n        </mat-datepicker>\\n    </span>\\n    <ng-template #elseEmptyValueBlock>\\n        {{ property.default | translate }}\\n    </ng-template>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view-dateitem.component.html\n// module id = 187\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./card-view-dateitem.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view-dateitem.component.scss\n// module id = 188\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/view/card-view-dateitem.component.scss\n// module id = 189\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n    Component,\n    ComponentFactoryResolver,\n    Input,\n    OnChanges,\n    Type,\n    ViewChild\n} from '@angular/core';\nimport { CardViewItem } from '../../interface/card-view-item.interface';\nimport { CardViewContentProxyDirective } from './card-view-content-proxy.directive';\n\n@Component({\n    selector: 'adf-card-view-item-dispatcher',\n    template: '<ng-template adf-card-view-content-proxy></ng-template>'\n})\nexport class CardViewItemDispatcherComponent implements OnChanges {\n    @Input()\n    property: CardViewItem;\n\n    @Input()\n    editable: boolean;\n\n    @ViewChild(CardViewContentProxyDirective)\n    private content: CardViewContentProxyDirective;\n\n    private loaded: boolean = false;\n    private componentReference: any = null;\n\n    public ngOnInit;\n    public ngDoCheck;\n\n    constructor(private resolver: ComponentFactoryResolver) {\n        const dynamicLifecycleMethods = [\n            'ngOnInit',\n            'ngDoCheck',\n            'ngAfterContentInit',\n            'ngAfterContentChecked',\n            'ngAfterViewInit',\n            'ngAfterViewChecked',\n            'ngOnDestroy'\n        ];\n\n        dynamicLifecycleMethods.forEach((dynamicLifecycleMethod) => {\n            this[dynamicLifecycleMethod] = this.proxy.bind(this, dynamicLifecycleMethod);\n        });\n    }\n\n    ngOnChanges(...args) {\n        if (!this.loaded) {\n            this.loadComponent();\n            this.loaded = true;\n        }\n\n        this.proxy('ngOnChanges', ...args);\n    }\n\n    private loadComponent() {\n        const upperCamelCasedType = this.getUpperCamelCase(this.property.type),\n            className = `CardView${upperCamelCasedType}ItemComponent`;\n\n        const factories = Array.from(this.resolver['_factories'].keys());\n        const factoryClass = <Type<any>> factories.find((x: any) => x.name === className);\n        const factory = this.resolver.resolveComponentFactory(factoryClass);\n        this.componentReference = this.content.viewContainerRef.createComponent(factory);\n\n        this.componentReference.instance.editable = this.editable;\n        this.componentReference.instance.property = this.property;\n    }\n\n    private getUpperCamelCase(type: string): string {\n        const camelCasedType = type.replace(/-([a-z])/g, function (g) { return g[1].toUpperCase(); });\n        return camelCasedType[0].toUpperCase() + camelCasedType.substr(1);\n    }\n\n    private proxy(methodName, ...args) {\n        if (this.componentReference.instance[methodName]) {\n            this.componentReference.instance[methodName].apply(this.componentReference.instance, args);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/view/card-view-item-dispatcher.component.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewMapItemModel } from '../../models/card-view-mapitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-mapitem',\n    template: require('./card-view-mapitem.component.html'),\n    styles: [require('./card-view-mapitem.component.scss')]\n})\n\nexport class CardViewMapItemComponent {\n    @Input()\n    property: CardViewMapItemModel;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/view/card-view-mapitem.component.ts","module.exports = \"<div class=\\\"adf-property-label\\\">{{ property.label | translate }}</div>\\n<div class=\\\"adf-property-value\\\">\\n    <div>\\n        <span *ngIf=\\\"!isClickable(); else elseBlock\\\" [attr.data-automation-id]=\\\"'card-mapitem-value-' + property.key\\\">\\n            <span *ngIf=\\\"!property.isEmpty(); else elseEmptyValueBlock\\\">{{ property.displayValue }}</span>\\n        </span>\\n        <ng-template #elseBlock>\\n            <span class=\\\"adf-mapitem-clickable-value\\\" (click)=\\\"clicked()\\\" [attr.data-automation-id]=\\\"'card-mapitem-value-' + property.key\\\">\\n                <span *ngIf=\\\"!property.isEmpty(); else elseEmptyValueBlock\\\">{{ property.displayValue }}</span>\\n            </span>\\n        </ng-template>\\n    </div>\\n    <ng-template #elseEmptyValueBlock>\\n        {{ property.default | translate }}\\n    </ng-template>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view-mapitem.component.html\n// module id = 192\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./card-view-mapitem.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view-mapitem.component.scss\n// module id = 193\n// module chunks = 0","module.exports = \".adf-mapitem-clickable-value {\\n  cursor: pointer; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/view/card-view-mapitem.component.scss\n// module id = 194\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { CardViewTextItemModel } from '../../models/card-view-textitem.model';\nimport { CardViewUpdateService } from '../../services/card-view-update.service';\n\n@Component({\n    selector: 'adf-card-view-textitem',\n    template: require('./card-view-textitem.component.html'),\n    styles: [require('./card-view-textitem.component.scss')]\n})\nexport class CardViewTextItemComponent implements OnChanges {\n    @Input()\n    property: CardViewTextItemModel;\n\n    @Input()\n    editable: boolean;\n\n    @ViewChild('editorInput')\n    private editorInput: any;\n\n    inEdit: boolean = false;\n    editedValue: string;\n\n    constructor(private cardViewUpdateService: CardViewUpdateService) {}\n\n    ngOnChanges() {\n        this.editedValue = this.property.value;\n    }\n\n    isEditble() {\n        return this.editable && this.property.editable;\n    }\n\n    isClickable() {\n        return this.property.clickable;\n    }\n\n    setEditMode(editStatus: boolean): void {\n        this.inEdit = editStatus;\n        setTimeout(() => {\n            this.editorInput.nativeElement.click();\n        }, 0);\n    }\n\n    reset(): void {\n        this.editedValue = this.property.value;\n        this.setEditMode(false);\n    }\n\n    update(): void {\n        this.cardViewUpdateService.update(this.property, { [this.property.key]: this.editedValue });\n    }\n\n    clicked(): void {\n        this.cardViewUpdateService.clicked(this.property);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/view/card-view-textitem.component.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_196__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/Subject\"\n// module id = 196\n// module chunks = 0","module.exports = \"<div class=\\\"adf-property-label\\\">{{ property.label | translate }}</div>\\n<div class=\\\"adf-property-value\\\">\\n    <span *ngIf=\\\"!isEditble()\\\">\\n        <span *ngIf=\\\"!isClickable(); else elseBlock\\\" [attr.data-automation-id]=\\\"'card-textitem-value-' + property.key\\\">\\n            <span *ngIf=\\\"!property.isEmpty(); else elseEmptyValueBlock\\\">{{ property.displayValue }}</span>\\n        </span>\\n        <ng-template #elseBlock>\\n            <span class=\\\"adf-textitem-clickable-value\\\" (click)=\\\"clicked()\\\" [attr.data-automation-id]=\\\"'card-textitem-value-' + property.key\\\">\\n                <span *ngIf=\\\"!property.isEmpty(); else elseEmptyValueBlock\\\">{{ property.displayValue }}</span>\\n            </span>\\n        </ng-template>\\n    </span>\\n    <span *ngIf=\\\"isEditble()\\\">\\n        <div *ngIf=\\\"!inEdit\\\" (click)=\\\"setEditMode(true)\\\" class=\\\"adf-textitem-readonly\\\" [attr.data-automation-id]=\\\"'card-textitem-edit-toggle-' + property.key\\\">\\n            <span [attr.data-automation-id]=\\\"'card-textitem-value-' + property.key\\\">\\n                <span *ngIf=\\\"!property.isEmpty(); else elseEmptyValueBlock\\\">{{ property.displayValue }}</span>\\n            </span>\\n            <mat-icon [attr.data-automation-id]=\\\"'card-textitem-edit-icon-' + property.key\\\" class=\\\"adf-textitem-icon\\\">create</mat-icon>\\n        </div>\\n        <div *ngIf=\\\"inEdit\\\" class=\\\"adf-textitem-editable\\\">\\n            <mat-form-field floatPlaceholder=\\\"never\\\" class=\\\"adf-input-container\\\">\\n                <input *ngIf=\\\"!property.multiline\\\" #editorInput\\n                    matInput\\n                    class=\\\"adf-input\\\"\\n                    [placeholder]=\\\"property.default | translate\\\"\\n                    [(ngModel)]=\\\"editedValue\\\"\\n                    [attr.data-automation-id]=\\\"'card-textitem-editinput-' + property.key\\\">\\n                <textarea *ngIf=\\\"property.multiline\\\" #editorInput\\n                    matInput\\n                    matTextareaAutosize\\n                    matAutosizeMaxRows=\\\"1\\\"\\n                    matAutosizeMaxRows=\\\"5\\\"\\n                    class=\\\"adf-textarea\\\"\\n                    [placeholder]=\\\"property.default | translate\\\"\\n                    [(ngModel)]=\\\"editedValue\\\"\\n                    [attr.data-automation-id]=\\\"'card-textitem-edittextarea-' + property.key\\\"></textarea>\\n            </mat-form-field>\\n            <mat-icon\\n                class=\\\"adf-textitem-icon adf-update-icon\\\"\\n                (click)=\\\"update()\\\"\\n                [attr.data-automation-id]=\\\"'card-textitem-update-' + property.key\\\">done</mat-icon>\\n            <mat-icon\\n                class=\\\"adf-textitem-icon adf-reset-icon\\\"\\n                (click)=\\\"reset()\\\"\\n                [attr.data-automation-id]=\\\"'card-textitem-reset-' + property.key\\\">clear</mat-icon>\\n        </div>\\n    </span>\\n    <ng-template #elseEmptyValueBlock>\\n        {{ property.default | translate }}\\n    </ng-template>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view-textitem.component.html\n// module id = 197\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./card-view-textitem.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view-textitem.component.scss\n// module id = 198\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/view/card-view-textitem.component.scss\n// module id = 199\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Input } from '@angular/core';\nimport { CardViewItem } from '../../interface/card-view-item.interface';\n\n@Component({\n    selector: 'adf-card-view',\n    template: require('./card-view.component.html'),\n    styles: [require('./card-view.component.scss')]\n})\nexport class CardViewComponent {\n    @Input()\n    properties: CardViewItem [];\n\n    @Input()\n    editable: boolean;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/view/card-view.component.ts","module.exports = \"<div class=\\\"adf-property-list\\\">\\n    <ng-container *ngFor=\\\"let property of properties\\\">\\n        <div [attr.data-automation-id]=\\\"'header-'+property.key\\\" class=\\\"adf-property\\\">\\n            <adf-card-view-item-dispatcher [property]=\\\"property\\\" [editable]=\\\"editable\\\"></adf-card-view-item-dispatcher>\\n        </div>\\n    </ng-container>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view.component.html\n// module id = 201\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./card-view.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/view/card-view.component.scss\n// module id = 202\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/view/card-view.component.scss\n// module id = 203\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule,\n    MatTabsModule,\n    MatToolbarModule\n} from '@angular/material';\n\nexport function modules() {\n    return [\n        MatButtonModule,\n        MatDialogModule,\n        MatInputModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatSnackBarModule,\n        MatToolbarModule,\n        MatTabsModule,\n        MatMenuModule,\n        MatIconModule,\n        MatCardModule\n    ];\n}\n\n@NgModule({\n    imports: modules(),\n    exports: modules()\n})\nexport class MaterialModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/material.module.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class LogLevelsEnum extends Number {\n    static TRACE: number = 5;\n    static DEBUG: number = 4;\n    static INFO: number = 3;\n    static WARN: number = 2;\n    static ERROR: number = 1;\n    static SILENT: number = 0;\n}\n\nexport let logLevels: any[] = [\n    {level: LogLevelsEnum.TRACE, name: 'TRACE'},\n    {level: LogLevelsEnum.DEBUG, name: 'DEBUG'},\n    {level: LogLevelsEnum.INFO, name: 'INFO'},\n    {level: LogLevelsEnum.WARN, name: 'WARN'},\n    {level: LogLevelsEnum.ERROR, name: 'ERROR'},\n    {level: LogLevelsEnum.SILENT, name: 'SILENT'}\n];\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/log-levels.model.ts","module.exports = \"<h1 matDialogTitle>{{ 'CORE.DIALOG.DOWNLOAD_ZIP.TITLE' | translate }}</h1>\\n<div mat-dialog-content>\\n    <mat-progress-bar color=\\\"primary\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n</div>\\n<div mat-dialog-actions>\\n    <span class=\\\"spacer\\\"></span>\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"cancelDownload()\\\">\\n        {{ 'CORE.DIALOG.DOWNLOAD_ZIP.ACTIONS.CANCEL' | translate }}\\n    </button>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/dialogs/download-zip.dialog.html\n// module id = 206\n// module chunks = 0","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./download-zip.dialog.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/dialogs/download-zip.dialog.scss\n// module id = 207\n// module chunks = 0","module.exports = \".spacer {\\n  flex: 1 1 auto; }\\n\\n.adf-download-zip-dialog .mat-dialog-actions .mat-button-wrapper {\\n  text-transform: uppercase; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/dialogs/download-zip.dialog.scss\n// module id = 208\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormControl } from '@angular/forms';\n\nconst I18N_ERRORS_PATH = 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS';\n\nexport function forbidSpecialCharacters({ value }: FormControl) {\n    const specialCharacters: RegExp = /([\\*\\\"\\<\\>\\\\\\/\\?\\:\\|])/;\n    const isValid: boolean = !specialCharacters.test(value);\n\n    return (isValid) ? null : {\n        message: `${I18N_ERRORS_PATH}.SPECIAL_CHARACTERS`\n    };\n}\n\nexport function forbidEndingDot({ value }: FormControl) {\n    const isValid: boolean = ((value || '').trim().split('').pop() !== '.');\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ENDING_DOT`\n    };\n}\n\nexport function forbidOnlySpaces({ value }: FormControl) {\n    const isValid: boolean = !!((value || '')).trim();\n\n    return isValid ? null : {\n        message: `${I18N_ERRORS_PATH}.ONLY_SPACES`\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/dialogs/folder-name.validators.ts","\n        var result = require(\"!!../../../node_modules/raw-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./folder.dialog.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/dialogs/folder.dialog.scss\n// module id = 210\n// module chunks = 0","module.exports = \".adf-fill-remaining-space {\\n  flex: 1 1 auto; }\\n\\n.adf-full-width {\\n  width: 100%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/dialogs/folder.dialog.scss\n// module id = 211\n// module chunks = 0","module.exports = \"<h2 mat-dialog-title>\\n    {{\\n        (editing\\n            ? 'CORE.FOLDER_DIALOG.EDIT_FOLDER_TITLE'\\n            : 'CORE.FOLDER_DIALOG.CREATE_FOLDER_TITLE'\\n        ) | translate\\n    }}\\n</h2>\\n\\n<mat-dialog-content>\\n    <form [formGroup]=\\\"form\\\" (submit)=\\\"submit()\\\">\\n        <mat-input-container class=\\\"adf-full-width\\\">\\n            <input\\n                placeholder=\\\"{{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.LABEL' | translate }}\\\"\\n                matInput\\n                required\\n                [formControl]=\\\"form.controls['name']\\\"\\n            />\\n\\n            <mat-hint *ngIf=\\\"form.controls['name'].dirty\\\">\\n                <span *ngIf=\\\"form.controls['name'].errors?.required\\\">\\n                    {{ 'CORE.FOLDER_DIALOG.FOLDER_NAME.ERRORS.REQUIRED' | translate }}\\n                </span>\\n\\n                <span *ngIf=\\\"!form.controls['name'].errors?.required && form.controls['name'].errors?.message\\\">\\n                    {{ form.controls['name'].errors?.message | translate }}\\n                </span>\\n            </mat-hint>\\n        </mat-input-container>\\n\\n        <br />\\n        <br />\\n\\n        <mat-input-container class=\\\"adf-full-width\\\">\\n            <textarea\\n                matInput\\n                placeholder=\\\"{{ 'CORE.FOLDER_DIALOG.FOLDER_DESCRIPTION.LABEL' | translate }}\\\"\\n                rows=\\\"4\\\"\\n                [formControl]=\\\"form.controls['description']\\\"></textarea>\\n        </mat-input-container>\\n    </form>\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n    <span class=\\\"adf-fill-remaining-space\\\"></span>\\n\\n    <button\\n        mat-button\\n        mat-dialog-close>\\n        {{ 'CORE.FOLDER_DIALOG.CANCEL_BUTTON.LABEL' | translate }}\\n    </button>\\n\\n    <button\\n        mat-button\\n        (click)=\\\"submit()\\\"\\n        [disabled]=\\\"!form.valid\\\">\\n        {{\\n            (editing\\n                ? 'CORE.FOLDER_DIALOG.UPDATE_BUTTON.LABEL'\\n                : 'CORE.FOLDER_DIALOG.CREATE_BUTTON.LABEL'\\n            ) | translate\\n        }}\\n    </button>\\n</mat-dialog-actions>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/dialogs/folder.dialog.html\n// module id = 212\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_213__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/router\"\n// module id = 213\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class ComponentTranslationModel {\n    name: string;\n    path: string;\n    json: string [];\n\n    constructor(obj?: any) {\n        this.name = obj && obj.name;\n        this.path = obj && obj.path;\n        this.json = obj && obj.json || [];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/component.model.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_215__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"rxjs/BehaviorSubject\"\n// module id = 215\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_216__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"minimatch\"\n// module id = 216\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, HostListener, Input } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { AlfrescoContentService } from '../services/alfresco-content.service';\n\nconst DEFAULT_FOLDER_PARENT_ID = '-my-';\n\n@Directive({\n    selector: '[adf-create-folder]'\n})\nexport class FolderCreateDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    @Input('adf-create-folder')\n    parentNodeId: string = DEFAULT_FOLDER_PARENT_ID;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        this.openDialog();\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public content: AlfrescoContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderCreateDirective;\n        const { parentNodeId } = this;\n\n        return {\n            data: { parentNodeId },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderCreate.next(node);\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/folder-create.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material';\n\nimport { MinimalNodeEntryEntity } from 'alfresco-js-api';\n\nimport { FolderDialogComponent } from '../dialogs/folder.dialog';\nimport { AlfrescoContentService } from '../services/alfresco-content.service';\n\n@Directive({\n    selector: '[adf-edit-folder]'\n})\nexport class FolderEditDirective {\n    static DIALOG_WIDTH: number = 400;\n\n    @Input('adf-edit-folder')\n    folder: MinimalNodeEntryEntity;\n\n    @HostListener('click', [ '$event' ])\n    onClick(event) {\n        event.preventDefault();\n        if (this.folder) {\n            this.openDialog();\n        }\n    }\n\n    constructor(\n        public dialogRef: MatDialog,\n        public elementRef: ElementRef,\n        public content: AlfrescoContentService\n    ) {}\n\n    private get dialogConfig(): MatDialogConfig {\n        const { DIALOG_WIDTH: width } = FolderEditDirective;\n        const { folder } = this;\n\n        return {\n            data: { folder },\n            width: `${width}px`\n        };\n    }\n\n    private openDialog(): void {\n        const { dialogRef, dialogConfig, content } = this;\n        const dialogInstance = dialogRef.open(FolderDialogComponent, dialogConfig);\n\n        dialogInstance.afterClosed().subscribe((node: MinimalNodeEntryEntity) => {\n            if (node) {\n                content.folderEdit.next(node);\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/folder-edit.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\n\n@Directive({\n    selector: '[adf-logout]'\n})\nexport class LogoutDirective implements OnInit {\n\n    constructor(\n        private elementRef: ElementRef,\n        private renderer: Renderer2,\n        private router: Router,\n        private auth: AuthenticationService) {\n    }\n\n    ngOnInit() {\n        if (this.elementRef.nativeElement) {\n            this.renderer.listen(this.elementRef.nativeElement, 'click', (evt) => {\n                evt.preventDefault();\n                this.logout();\n            });\n        }\n    }\n\n    logout() {\n        this.auth.logout().subscribe(\n            () => this.redirectToLogin(),\n            () => this.redirectToLogin()\n        );\n    }\n\n    redirectToLogin() {\n        this.router.navigate(['/login']);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/logout.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, OnChanges, Output } from '@angular/core';\nimport { MinimalNodeEntity, MinimalNodeEntryEntity } from 'alfresco-js-api';\nimport { Observable } from 'rxjs/Rx';\nimport { AlfrescoApiService } from '../services/alfresco-api.service';\nimport { NotificationService } from '../services/notification.service';\nimport { TranslationService } from '../services/translation.service';\n\ninterface ProcessedNodeData {\n    entry: MinimalNodeEntryEntity;\n    status: number;\n}\n\ninterface ProcessStatus {\n    success: ProcessedNodeData[];\n    failed: ProcessedNodeData[];\n\n    someFailed();\n\n    someSucceeded();\n\n    oneFailed();\n\n    oneSucceeded();\n\n    allSucceeded();\n\n    allFailed();\n}\n\n@Directive({\n    selector: '[adf-delete]'\n})\nexport class NodeDeleteDirective implements OnChanges {\n    @Input('adf-delete')\n    selection: MinimalNodeEntity[];\n\n    @Input()\n    permanent: boolean = false;\n\n    @Output()\n    delete: EventEmitter<any> = new EventEmitter();\n\n    @HostListener('click')\n    onClick() {\n        this.process(this.selection);\n    }\n\n    constructor(private notification: NotificationService,\n                private alfrescoApiService: AlfrescoApiService,\n                private translation: TranslationService,\n                private elementRef: ElementRef) {\n    }\n\n    ngOnChanges() {\n        if (!this.selection || (this.selection && this.selection.length === 0)) {\n            this.setDisableAttribute(true);\n        } else {\n            if (!this.elementRef.nativeElement.hasAttribute('adf-node-permission')) {\n                this.setDisableAttribute(false);\n            }\n        }\n    }\n\n    private setDisableAttribute(disable: boolean) {\n        this.elementRef.nativeElement.disabled = disable;\n    }\n\n    private process(selection: MinimalNodeEntity[]) {\n        if (!selection.length) {\n            return;\n        }\n\n        const batch = this.getDeleteNodesBatch(selection);\n\n        Observable.forkJoin(...batch)\n            .subscribe((data: ProcessedNodeData[]) => {\n                const processedItems: ProcessStatus = this.processStatus(data);\n\n                this.notify(processedItems);\n\n                if (processedItems.someSucceeded) {\n                    this.delete.emit();\n                }\n            });\n    }\n\n    private getDeleteNodesBatch(selection: MinimalNodeEntity[]): Observable<ProcessedNodeData>[] {\n        return selection.map((node) => this.deleteNode(node));\n    }\n\n    private deleteNode(node: MinimalNodeEntity): Observable<ProcessedNodeData> {\n        const id = (<any> node.entry).nodeId || node.entry.id;\n\n        const promise = this.alfrescoApiService.getInstance().nodes.deleteNode(id, {permanent: this.permanent});\n\n        return Observable.fromPromise(promise)\n            .map(() => ({\n                entry: node.entry,\n                status: 1\n            }))\n            .catch((error: any) => {\n                return Observable.of({\n                    entry: node.entry,\n                    status: 0\n                });\n            });\n    }\n\n    private processStatus(data): ProcessStatus {\n        const deleteStatus = {\n            success: [],\n            failed: [],\n            get someFailed() {\n                return !!(this.failed.length);\n            },\n            get someSucceeded() {\n                return !!(this.success.length);\n            },\n            get oneFailed() {\n                return this.failed.length === 1;\n            },\n            get oneSucceeded() {\n                return this.success.length === 1;\n            },\n            get allSucceeded() {\n                return this.someSucceeded && !this.someFailed;\n            },\n            get allFailed() {\n                return this.someFailed && !this.someSucceeded;\n            }\n        };\n\n        return data.reduce(\n            (acc, next) => {\n                if (next.status === 1) {\n                    acc.success.push(next);\n                } else {\n                    acc.failed.push(next);\n                }\n\n                return acc;\n            },\n            deleteStatus\n        );\n    }\n\n    private notify(status) {\n        this.getMessage(status).subscribe((message) => this.notification.openSnackMessage(message));\n    }\n\n    private getMessage(status): Observable<string> {\n        if (status.allFailed && !status.oneFailed) {\n            return this.translation.get(\n                'CORE.DELETE_NODE.ERROR_PLURAL',\n                {number: status.failed.length}\n            );\n        }\n\n        if (status.allSucceeded && !status.oneSucceeded) {\n            return this.translation.get(\n                'CORE.DELETE_NODE.PLURAL',\n                {number: status.success.length}\n            );\n        }\n\n        if (status.someFailed && status.someSucceeded && !status.oneSucceeded) {\n            return this.translation.get(\n                'CORE.DELETE_NODE.PARTIAL_PLURAL',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.someFailed && status.oneSucceeded) {\n            return this.translation.get(\n                'CORE.DELETE_NODE.PARTIAL_SINGULAR',\n                {\n                    success: status.success.length,\n                    failed: status.failed.length\n                }\n            );\n        }\n\n        if (status.oneFailed && !status.someSucceeded) {\n            return this.translation.get(\n                'CORE.DELETE_NODE.ERROR_SINGULAR',\n                {name: status.failed[0].entry.name}\n            );\n        }\n\n        if (status.oneSucceeded && !status.someFailed) {\n            return this.translation.get(\n                'CORE.DELETE_NODE.SINGULAR',\n                {name: status.success[0].entry.name}\n            );\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/directives/node-delete.directive.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, Directive, ViewEncapsulation } from '@angular/core';\n\n@Component({\n    selector: 'adf-info-drawer-layout',\n    template: require('./info-drawer-layout.component.html'),\n    styles: [require('./info-drawer-layout.component.scss')],\n    encapsulation: ViewEncapsulation.None,\n    host: { 'class': 'adf-info-drawer-layout' }\n})\nexport class InfoDrawerLayoutComponent {}\n\n@Directive({ selector: '[info-drawer-title]' }) export class InfoDrawerTitleDirective {}\n@Directive({ selector: '[info-drawer-buttons]' }) export class InfoDrawerButtonsDirective {}\n@Directive({ selector: '[info-drawer-content]' }) export class InfoDrawerContentDirective {}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.ts","module.exports = \"<div class=\\\"adf-info-drawer-layout-header\\\">\\n    <div class=\\\"adf-info-drawer-layout-header-title\\\">\\n        <ng-content select=\\\"[info-drawer-title]\\\"></ng-content>\\n    </div>\\n    <div class=\\\"adf-info-drawer-layout-header-buttons\\\">\\n        <ng-content select=\\\"[info-drawer-buttons]\\\"></ng-content>\\n    </div>\\n</div>\\n<div class=\\\"adf-info-drawer-layout-content\\\">\\n    <ng-content select=\\\"[info-drawer-content]\\\"></ng-content>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.html\n// module id = 222\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./info-drawer-layout.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.scss\n// module id = 223\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/info-drawer/info-drawer-layout.component.scss\n// module id = 224\n// module chunks = 0","module.exports = \"<adf-info-drawer-layout>\\n    <div *ngIf=\\\"title\\\" info-drawer-title>{{title}}</div>\\n    <ng-content *ngIf=\\\"!title\\\" info-drawer-title select=\\\"[info-drawer-title]\\\"></ng-content>\\n\\n    <ng-content info-drawer-buttons select=\\\"[info-drawer-buttons]\\\"></ng-content>\\n\\n    <ng-container info-drawer-content *ngIf=\\\"showTabLayout(); then tabLayout else singleLayout\\\"></ng-container>\\n\\n    <ng-template #tabLayout>\\n        <mat-tab-group class=\\\"adf-info-drawer-tabs\\\" (selectChange)=\\\"onTabChange($event)\\\">\\n            <ng-container *ngFor=\\\"let contentBlock of contentBlocks\\\">\\n                <mat-tab [label]=\\\"contentBlock.label\\\" class=\\\"adf-info-drawer-tab\\\">\\n                    <ng-container *ngTemplateOutlet=\\\"contentBlock.content\\\"></ng-container>\\n                </mat-tab>\\n            </ng-container>\\n        </mat-tab-group>\\n    </ng-template>\\n\\n    <ng-template #singleLayout>\\n        <ng-content select=\\\"[info-drawer-content]\\\"></ng-content>\\n    </ng-template>\\n</adf-info-drawer-layout>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.html\n// module id = 225\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./info-drawer.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.scss\n// module id = 226\n// module chunks = 0","module.exports = \".adf-info-drawer {\\n  display: block; }\\n  .adf-info-drawer .adf-info-drawer-layout-content {\\n    padding: 0; }\\n    .adf-info-drawer .adf-info-drawer-layout-content > :not(.adf-info-drawer-tabs) {\\n      padding: 10px; }\\n      .adf-info-drawer .adf-info-drawer-layout-content > :not(.adf-info-drawer-tabs) > * {\\n        margin-bottom: 20px;\\n        display: block; }\\n    .adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content > * {\\n      margin-bottom: 20px;\\n      display: block; }\\n    .adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content > *:last-child {\\n      margin-bottom: 0; }\\n    .adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-label {\\n      flex-grow: 1; }\\n    .adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-ink-bar {\\n      height: 4px; }\\n    .adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body {\\n      padding: 10px; }\\n    .adf-info-drawer .adf-info-drawer-layout-content .adf-info-drawer-tabs .mat-tab-body-content {\\n      overflow: initial; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/info-drawer/info-drawer.component.scss\n// module id = 227\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AppConfigService } from '../../services/app-config.service';\nimport { UserPreferencesService } from '../../services/user-preferences.service';\n\n@Component({\n    selector: 'adf-language-menu',\n    template: require('./language-menu.component.html')\n})\nexport class LanguageMenuComponent implements OnInit {\n\n    languages: Array<any> = [\n        { key: 'en', label: 'English'}\n    ];\n\n    constructor(\n        private appConfig: AppConfigService,\n        private userPreference: UserPreferencesService) {\n    }\n\n    ngOnInit() {\n        const languagesCongifApp = this.appConfig.get<Array<any>>(AppConfigService.APP_CONFIG_LANGUAGES_KEY);\n        if (languagesCongifApp) {\n            this.languages = languagesCongifApp;\n        }\n    }\n\n    changeLanguage(lang: string) {\n        this.userPreference.locale = lang;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/components/language-menu/language-menu.component.ts","module.exports = \"<button mat-menu-item *ngFor=\\\"let language of languages\\\" (click)=\\\"changeLanguage(language.key)\\\">{{language.label}}\\n</button>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/language-menu/language-menu.component.html\n// module id = 229\n// module chunks = 0","module.exports = \"<div *ngIf=\\\"pagination.hasMoreItems\\\" class=\\\"adf-infinite-pagination\\\">\\n    <button mat-button\\n        *ngIf=\\\"!isLoading\\\"\\n        class=\\\"adf-infinite-pagination-load-more\\\"\\n        (click)=\\\"onLoadMore($event)\\\"\\n        data-automation-id=\\\"adf-infinite-pagination-button\\\">\\n            <ng-content></ng-content>\\n    </button>\\n\\n    <mat-progress-bar *ngIf=\\\"isLoading\\\"\\n        mode=\\\"indeterminate\\\"\\n        class=\\\"adf-infinite-pagination-spinner\\\"\\n        data-automation-id=\\\"adf-infinite-pagination-spinner\\\"></mat-progress-bar>\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.html\n// module id = 230\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./infinite-pagination.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.scss\n// module id = 231\n// module chunks = 0","module.exports = \".adf-infinite-pagination {\\n  display: flex;\\n  justify-content: space-around;\\n  min-height: 56px; }\\n  .adf-infinite-pagination-load-more {\\n    margin-bottom: 10px;\\n    margin-top: 10px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/pagination/infinite-pagination.component.scss\n// module id = 232\n// module chunks = 0","module.exports = \"<div class=\\\"adf-pagination__block adf-pagination__range-block\\\">\\n    <span class=\\\"adf-pagination__range\\\">\\n        {{\\n            'CORE.PAGINATION.ITEMS_RANGE' | translate: {\\n                range: range.join('-'),\\n                total: pagination.totalItems\\n            }\\n        }}\\n    </span>\\n</div>\\n\\n<div class=\\\"adf-pagination__block adf-pagination__perpage-block\\\">\\n    <span>\\n        {{ 'CORE.PAGINATION.ITEMS_PER_PAGE' | translate }}\\n    </span>\\n\\n    <span class=\\\"adf-pagination__max-items\\\">\\n        {{ pagination.maxItems }}\\n    </span>\\n\\n    <button mat-icon-button [matMenuTriggerFor]=\\\"pageSizeMenu\\\">\\n        <mat-icon>arrow_drop_down</mat-icon>\\n    </button>\\n\\n    <mat-menu #pageSizeMenu=\\\"matMenu\\\">\\n        <button\\n            mat-menu-item\\n            *ngFor=\\\"let pageSize of supportedPageSizes\\\"\\n            (click)=\\\"onChangePageSize(pageSize)\\\">\\n            {{ pageSize }}\\n        </button>\\n    </mat-menu>\\n</div>\\n\\n<div class=\\\"adf-pagination__block adf-pagination__actualinfo-block\\\">\\n    <span class=\\\"adf-pagination__current-page\\\">\\n        {{ 'CORE.PAGINATION.CURRENT_PAGE' | translate: { number: current } }}\\n    </span>\\n\\n    <button\\n        mat-icon-button\\n        [matMenuTriggerFor]=\\\"pagesMenu\\\"\\n        *ngIf=\\\"pages.length > 1\\\">\\n        <mat-icon>arrow_drop_down</mat-icon>\\n    </button>\\n\\n    <span class=\\\"adf-pagination__total-pages\\\">\\n        {{ 'CORE.PAGINATION.TOTAL_PAGES' | translate: { total: pages.length } }}\\n    </span>\\n\\n    <mat-menu #pagesMenu=\\\"matMenu\\\" class=\\\"adf-pagination__page-selector\\\">\\n        <button\\n            mat-menu-item\\n            *ngFor=\\\"let pageNumber of pages\\\"\\n            (click)=\\\"onChangePageNumber(pageNumber)\\\">\\n            {{ pageNumber }}\\n        </button>\\n    </mat-menu>\\n</div>\\n\\n<div class=\\\"adf-pagination__block adf-pagination__controls-block\\\">\\n    <button\\n        class=\\\"adf-pagination__previous-button\\\"\\n        mat-icon-button\\n        [disabled]=\\\"isFirstPage\\\"\\n        (click)=\\\"goPrevious()\\\">\\n        <mat-icon>keyboard_arrow_left</mat-icon>\\n    </button>\\n\\n    <button\\n        class=\\\"adf-pagination__next-button\\\"\\n        mat-icon-button\\n        [disabled]=\\\"isLastPage\\\"\\n        (click)=\\\"goNext()\\\">\\n        <mat-icon>keyboard_arrow_right</mat-icon>\\n    </button>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/pagination/pagination.component.html\n// module id = 233\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./pagination.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/pagination/pagination.component.scss\n// module id = 234\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/pagination/pagination.component.scss\n// module id = 235\n// module chunks = 0","module.exports = \"<div class=\\\"adf-setting-container\\\">\\n    <div class=\\\"adf-setting-card-padding\\\"></div>\\n    <mat-toolbar color=\\\"primary\\\" class=\\\"adf-setting-toolbar\\\">\\n        <h3>{{'CORE.HOST_SETTINGS.TITLE' | translate}}</h3>\\n    </mat-toolbar>\\n\\n    <mat-card class=\\\"adf-setting-card\\\">\\n        <div *ngIf=\\\"providers==='ALL' || providers==='ECM'\\\">\\n            <mat-card-header>\\n                <mat-card-subtitle>{{'CORE.HOST_SETTINGS.CS-HOST' | translate }}</mat-card-subtitle>\\n            </mat-card-header>\\n            <mat-card-content>\\n                <mat-form-field class=\\\"full-width\\\">\\n                    <mat-icon class=\\\"adf-CORE.HOST_SETTINGS-link-icon\\\" matPrefix>link</mat-icon>\\n                    <input matInput\\n                           [formControl]=\\\"urlFormControlEcm\\\"\\n                           data-automation-id=\\\"ecmHost\\\"\\n                           type=\\\"text\\\"\\n                           (change)=\\\"onChangeECMHost($event)\\\"\\n                           tabindex=\\\"2\\\"\\n                           id=\\\"ecmHost\\\"\\n                           value=\\\"{{ecmHost}}\\\"\\n                           placeholder=\\\"http(s)://host|ip:port(/path)\\\">\\n                    <mat-error *ngIf=\\\"urlFormControlEcm.hasError('pattern')\\\">\\n                        {{ 'CORE.HOST_SETTINGS.NOT_VALID'| translate }}\\n                    </mat-error>\\n                </mat-form-field>\\n                <p>\\n            </mat-card-content>\\n        </div>\\n        <p>\\n        <div *ngIf=\\\"providers==='ALL' || providers==='BPM'\\\">\\n            <mat-card-header>\\n                <mat-card-subtitle>{{'CORE.HOST_SETTINGS.BP-HOST' | translate }}</mat-card-subtitle>\\n            </mat-card-header>\\n            <mat-card-content>\\n\\n                <mat-form-field class=\\\"full-width\\\">\\n                    <mat-icon class=\\\"adf-CORE.HOST_SETTINGS-link-icon\\\" matPrefix>link</mat-icon>\\n                    <input matInput\\n                           [formControl]=\\\"urlFormControlBpm\\\"\\n                           data-automation-id=\\\"bpmHost\\\"\\n                           type=\\\"text\\\"\\n                           (change)=\\\"onChangeBPMHost($event)\\\"\\n                           tabindex=\\\"2\\\"\\n                           id=\\\"bpmHost\\\"\\n                           value=\\\"{{bpmHost}}\\\"\\n                           placeholder=\\\"http(s)://host|ip:port(/path)\\\">\\n                    <mat-error *ngIf=\\\"urlFormControlBpm.hasError('pattern')\\\">\\n                        {{ 'CORE.HOST_SETTINGS.NOT_VALID'| translate }}\\n                    </mat-error>\\n                </mat-form-field>\\n            </mat-card-content>\\n        </div>\\n        <mat-card-actions class=\\\"adf-CORE.HOST_SETTINGS-actions\\\">\\n\\n            <button mat-button onclick=\\\"window.history.back()\\\" color=\\\"primary\\\">\\n                {{'CORE.HOST_SETTINGS.BACK' | translate }}\\n            </button>\\n\\n            <button mat-raised-button (click)=\\\"save($event)\\\"\\n                    [disabled]=\\\"urlFormControlBpm.hasError('pattern') || urlFormControlEcm.hasError('pattern')\\\"\\n                    color=\\\"primary\\\">\\n                {{'CORE.HOST_SETTINGS.APPLY' | translate }}\\n            </button>\\n\\n        </mat-card-actions>\\n    </mat-card>\\n    <div class=\\\"adf-setting-card-padding\\\"></div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/settings/host-settings.component.html\n// module id = 236\n// module chunks = 0","\n        var result = require(\"!!../../../../node_modules/raw-loader/index.js!../../../../node_modules/sass-loader/lib/loader.js!./host-settings.component.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./ng2-alfresco-core/src/components/settings/host-settings.component.scss\n// module id = 237\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/raw-loader!./node_modules/sass-loader/lib/loader.js!./ng2-alfresco-core/src/components/settings/host-settings.component.scss\n// module id = 238\n// module chunks = 0","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'adfFileSize'\n})\nexport class FileSizePipe implements PipeTransform {\n\n    transform(bytes: number, decimals: number = 2): string {\n        if (bytes == null || bytes === undefined) {\n            return '';\n        }\n\n        if (bytes === 0) {\n            return '0 Bytes';\n        }\n\n        const k = 1024,\n            dm = decimals || 2,\n            sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n            i = Math.floor(Math.log(bytes) / Math.log(k));\n\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/pipes/file-size.pipe.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { ThumbnailService } from '../services/thumbnail.service';\n\n@Pipe({\n    name: 'adfMimeTypeIcon'\n})\nexport class MimeTypeIconPipe implements PipeTransform {\n\n    constructor(private thumbnailService: ThumbnailService) { }\n\n    transform(text: string): string {\n        return this.thumbnailService.getMimeTypeIcon(text);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/pipes/mime-type-icon.pipe.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { HighlightTransformService, HightlightTransformResult } from '../services/highlight-transform.service';\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n\n    constructor(private highlightTransformService: HighlightTransformService) { }\n\n    transform(text: string, search: string): string {\n        const result: HightlightTransformResult = this.highlightTransformService.highlight(text, search);\n        return result.text;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/pipes/text-highlight.pipe.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Component, InjectionToken } from '@angular/core';\n\nexport const EXTENDIBLE_COMPONENT = new InjectionToken<Component>('extendible.component');\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/interface/injection.tokens.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport * from './object-utils';\nexport * from './file-utils';\nexport * from './momentDateAdapter';\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/utils/index.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { BaseEvent } from './base.event';\n\n/** Base container for any event which takes place in the DOM  */\nexport class BaseUIEvent<T> extends BaseEvent<T> {\n\n    /** Original DOM event */\n    event: Event;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/events/base-ui.event.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *\n * This object represent the basic structure of a card view.\n *\n *\n * @returns {CardViewMapItemModel} .\n */\n\nimport { CardViewItem } from '../interface/card-view-item.interface';\nimport { CardViewBaseItemModel, CardViewItemProperties } from './card-view-baseitem.model';\n\nexport class CardViewMapItemModel extends CardViewBaseItemModel implements CardViewItem {\n    type: string = 'map';\n    value: Map<string, string>;\n\n    constructor(obj: CardViewItemProperties) {\n        super(obj);\n    }\n\n    get displayValue() {\n        if (this.value && this.value.size > 0) {\n            return this.value.values().next().value;\n        } else {\n            return this.default;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/card-view-mapitem.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n *\n * This object represent the basic structure of a card view.\n *\n *\n * @returns {CardViewDateItemModel} .\n */\n\nimport * as moment from 'moment';\nimport { CardViewItem } from '../interface/card-view-item.interface';\nimport { CardViewBaseItemModel, CardViewItemProperties } from './card-view-baseitem.model';\n\nexport interface CardViewDateItemProperties extends CardViewItemProperties {\n    format?: string;\n}\n\nexport class CardViewDateItemModel extends CardViewBaseItemModel implements CardViewItem {\n    type: string = 'date';\n    format: string;\n\n    constructor(obj: CardViewDateItemProperties) {\n        super(obj);\n        this.format = obj.format || 'MMM DD YYYY';\n    }\n\n    get displayValue() {\n        if (!this.value) {\n            return this.default;\n        } else {\n            return moment(this.value).format(this.format);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/card-view-dateitem.model.ts","/*!\n * @license\n * Copyright 2016 Alfresco Software, Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport class PermissionsEnum extends String {\n    static DELETE: string = 'delete';\n    static UPDATE: string = 'update';\n    static CREATE: string = 'create';\n    static UPDATEPERMISSIONS: string = 'updatePermissions';\n    static NOT_DELETE: string = '!delete';\n    static NOT_UPDATE: string = '!update';\n    static NOT_CREATE: string = '!create';\n    static NOT_UPDATEPERMISSIONS: string = '!updatePermissions';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./ng2-alfresco-core/src/models/permissions.enum.ts"],"sourceRoot":""}